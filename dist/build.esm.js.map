{
  "version": 3,
  "sources": ["../node_modules/@vladmandic/pilogger/dist/pilogger.js", "../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/has-flag/index.js", "../node_modules/supports-color/index.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/@kwsites/file-exists/src/index.ts", "../node_modules/@kwsites/file-exists/index.ts", "../node_modules/@kwsites/promise-deferred/src/index.ts", "../node_modules/picomatch/lib/constants.js", "../node_modules/picomatch/lib/utils.js", "../node_modules/picomatch/lib/scan.js", "../node_modules/picomatch/lib/parse.js", "../node_modules/picomatch/lib/picomatch.js", "../node_modules/picomatch/index.js", "../node_modules/readdirp/index.js", "../node_modules/normalize-path/index.js", "../node_modules/anymatch/index.js", "../node_modules/is-extglob/index.js", "../node_modules/is-glob/index.js", "../node_modules/glob-parent/index.js", "../node_modules/braces/lib/utils.js", "../node_modules/braces/lib/stringify.js", "../node_modules/is-number/index.js", "../node_modules/to-regex-range/index.js", "../node_modules/fill-range/index.js", "../node_modules/braces/lib/compile.js", "../node_modules/braces/lib/expand.js", "../node_modules/braces/lib/constants.js", "../node_modules/braces/lib/parse.js", "../node_modules/braces/index.js", "../node_modules/binary-extensions/binary-extensions.json", "../node_modules/binary-extensions/index.js", "../node_modules/is-binary-path/index.js", "../node_modules/chokidar/lib/constants.js", "../node_modules/chokidar/lib/nodefs-handler.js", "../node_modules/chokidar/lib/fsevents-handler.js", "../node_modules/chokidar/index.js", "../node_modules/balanced-match/index.js", "../node_modules/glob/node_modules/brace-expansion/index.js", "../node_modules/dayjs/dayjs.min.js", "../node_modules/commander/lib/error.js", "../node_modules/commander/lib/argument.js", "../node_modules/commander/lib/help.js", "../node_modules/commander/lib/option.js", "../node_modules/commander/lib/suggestSimilar.js", "../node_modules/commander/lib/command.js", "../node_modules/commander/index.js", "../src/build.ts", "../src/compile.ts", "../src/helpers.ts", "../src/typedoc.ts", "../node_modules/simple-git/src/lib/args/pathspec.ts", "../node_modules/simple-git/src/lib/errors/git-error.ts", "../node_modules/simple-git/src/lib/errors/git-response-error.ts", "../node_modules/simple-git/src/lib/errors/task-configuration-error.ts", "../node_modules/simple-git/src/lib/utils/util.ts", "../node_modules/simple-git/src/lib/utils/argument-filters.ts", "../node_modules/simple-git/src/lib/utils/exit-codes.ts", "../node_modules/simple-git/src/lib/utils/git-output-streams.ts", "../node_modules/simple-git/src/lib/utils/line-parser.ts", "../node_modules/simple-git/src/lib/utils/simple-git-options.ts", "../node_modules/simple-git/src/lib/utils/task-options.ts", "../node_modules/simple-git/src/lib/utils/task-parser.ts", "../node_modules/simple-git/src/lib/utils/index.ts", "../node_modules/simple-git/src/lib/tasks/check-is-repo.ts", "../node_modules/simple-git/src/lib/responses/CleanSummary.ts", "../node_modules/simple-git/src/lib/tasks/task.ts", "../node_modules/simple-git/src/lib/tasks/clean.ts", "../node_modules/simple-git/src/lib/responses/ConfigList.ts", "../node_modules/simple-git/src/lib/tasks/config.ts", "../node_modules/simple-git/src/lib/tasks/grep.ts", "../node_modules/simple-git/src/lib/tasks/reset.ts", "../node_modules/simple-git/src/lib/git-logger.ts", "../node_modules/simple-git/src/lib/runners/tasks-pending-queue.ts", "../node_modules/simple-git/src/lib/runners/git-executor-chain.ts", "../node_modules/simple-git/src/lib/runners/git-executor.ts", "../node_modules/simple-git/src/lib/task-callback.ts", "../node_modules/simple-git/src/lib/tasks/change-working-directory.ts", "../node_modules/simple-git/src/lib/tasks/checkout.ts", "../node_modules/simple-git/src/lib/parsers/parse-commit.ts", "../node_modules/simple-git/src/lib/tasks/commit.ts", "../node_modules/simple-git/src/lib/tasks/first-commit.ts", "../node_modules/simple-git/src/lib/tasks/hash-object.ts", "../node_modules/simple-git/src/lib/responses/InitSummary.ts", "../node_modules/simple-git/src/lib/tasks/init.ts", "../node_modules/simple-git/src/lib/args/log-format.ts", "../node_modules/simple-git/src/lib/responses/DiffSummary.ts", "../node_modules/simple-git/src/lib/parsers/parse-diff-summary.ts", "../node_modules/simple-git/src/lib/parsers/parse-list-log-summary.ts", "../node_modules/simple-git/src/lib/tasks/diff.ts", "../node_modules/simple-git/src/lib/tasks/log.ts", "../node_modules/simple-git/src/lib/responses/MergeSummary.ts", "../node_modules/simple-git/src/lib/responses/PullSummary.ts", "../node_modules/simple-git/src/lib/parsers/parse-remote-objects.ts", "../node_modules/simple-git/src/lib/parsers/parse-remote-messages.ts", "../node_modules/simple-git/src/lib/parsers/parse-pull.ts", "../node_modules/simple-git/src/lib/parsers/parse-merge.ts", "../node_modules/simple-git/src/lib/tasks/merge.ts", "../node_modules/simple-git/src/lib/parsers/parse-push.ts", "../node_modules/simple-git/src/lib/tasks/push.ts", "../node_modules/simple-git/src/lib/tasks/show.ts", "../node_modules/simple-git/src/lib/responses/FileStatusSummary.ts", "../node_modules/simple-git/src/lib/responses/StatusSummary.ts", "../node_modules/simple-git/src/lib/tasks/status.ts", "../node_modules/simple-git/src/lib/tasks/version.ts", "../node_modules/simple-git/src/lib/simple-git-api.ts", "../node_modules/simple-git/src/lib/runners/scheduler.ts", "../node_modules/simple-git/src/lib/tasks/apply-patch.ts", "../node_modules/simple-git/src/lib/responses/BranchDeleteSummary.ts", "../node_modules/simple-git/src/lib/parsers/parse-branch-delete.ts", "../node_modules/simple-git/src/lib/responses/BranchSummary.ts", "../node_modules/simple-git/src/lib/parsers/parse-branch.ts", "../node_modules/simple-git/src/lib/tasks/branch.ts", "../node_modules/simple-git/src/lib/responses/CheckIgnore.ts", "../node_modules/simple-git/src/lib/tasks/check-ignore.ts", "../node_modules/simple-git/src/lib/tasks/clone.ts", "../node_modules/simple-git/src/lib/parsers/parse-fetch.ts", "../node_modules/simple-git/src/lib/tasks/fetch.ts", "../node_modules/simple-git/src/lib/parsers/parse-move.ts", "../node_modules/simple-git/src/lib/tasks/move.ts", "../node_modules/simple-git/src/lib/tasks/pull.ts", "../node_modules/simple-git/src/lib/responses/GetRemoteSummary.ts", "../node_modules/simple-git/src/lib/tasks/remote.ts", "../node_modules/simple-git/src/lib/tasks/stash-list.ts", "../node_modules/simple-git/src/lib/tasks/sub-module.ts", "../node_modules/simple-git/src/lib/responses/TagList.ts", "../node_modules/simple-git/src/lib/tasks/tag.ts", "../node_modules/simple-git/src/git.js", "../node_modules/simple-git/src/lib/api.ts", "../node_modules/simple-git/src/lib/errors/git-construct-error.ts", "../node_modules/simple-git/src/lib/errors/git-plugin-error.ts", "../node_modules/simple-git/src/lib/plugins/abort-plugin.ts", "../node_modules/simple-git/src/lib/plugins/block-unsafe-operations-plugin.ts", "../node_modules/simple-git/src/lib/plugins/command-config-prefixing-plugin.ts", "../node_modules/simple-git/src/lib/plugins/completion-detection.plugin.ts", "../node_modules/simple-git/src/lib/plugins/error-detection.plugin.ts", "../node_modules/simple-git/src/lib/plugins/plugin-store.ts", "../node_modules/simple-git/src/lib/plugins/progress-monitor-plugin.ts", "../node_modules/simple-git/src/lib/plugins/spawn-options-plugin.ts", "../node_modules/simple-git/src/lib/plugins/timout-plugin.ts", "../node_modules/simple-git/src/lib/plugins/suffix-paths.plugin.ts", "../node_modules/simple-git/src/lib/git-factory.ts", "../node_modules/simple-git/src/lib/runners/promise-wrapped.ts", "../node_modules/simple-git/src/esm.mjs", "../src/typings.ts", "../src/watch.ts", "../src/serve.ts", "../src/lint.ts", "../src/defaults.ts", "../src/clean.ts", "../node_modules/glob/node_modules/minimatch/src/index.ts", "../node_modules/glob/node_modules/minimatch/src/assert-valid-pattern.ts", "../node_modules/glob/node_modules/minimatch/src/brace-expressions.ts", "../node_modules/glob/node_modules/minimatch/src/unescape.ts", "../node_modules/glob/node_modules/minimatch/src/ast.ts", "../node_modules/glob/node_modules/minimatch/src/escape.ts", "../node_modules/lru-cache/src/index.ts", "../node_modules/path-scurry/src/index.ts", "../node_modules/minipass/src/index.ts", "../node_modules/glob/src/glob.ts", "../node_modules/glob/src/pattern.ts", "../node_modules/glob/src/ignore.ts", "../node_modules/glob/src/processor.ts", "../node_modules/glob/src/walker.ts", "../node_modules/glob/src/has-magic.ts", "../node_modules/glob/src/index.ts", "../node_modules/rimraf/src/opt-arg.ts", "../node_modules/rimraf/src/path-arg.ts", "../node_modules/rimraf/src/platform.ts", "../node_modules/rimraf/src/fs.ts", "../node_modules/rimraf/src/rimraf-posix.ts", "../node_modules/rimraf/src/readdir-or-error.ts", "../node_modules/rimraf/src/ignore-enoent.ts", "../node_modules/rimraf/src/rimraf-windows.ts", "../node_modules/rimraf/src/fix-eperm.ts", "../node_modules/rimraf/src/retry-busy.ts", "../node_modules/rimraf/src/rimraf-move-remove.ts", "../node_modules/rimraf/src/default-tmp.ts", "../node_modules/rimraf/src/rimraf-manual.ts", "../node_modules/rimraf/src/rimraf-native.ts", "../node_modules/rimraf/src/use-native.ts", "../node_modules/rimraf/src/index.ts", "../src/changelog.ts", "../src/cli.ts", "../node_modules/commander/esm.mjs", "../package.json"],
  "sourcesContent": ["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// node_modules/dayjs/dayjs.min.js\nvar require_dayjs_min = __commonJS({\n  \"node_modules/dayjs/dayjs.min.js\"(exports, module2) {\n    !function(t, e) {\n      \"object\" == typeof exports && \"undefined\" != typeof module2 ? module2.exports = e() : \"function\" == typeof define && define.amd ? define(e) : (t = \"undefined\" != typeof globalThis ? globalThis : t || self).dayjs = e();\n    }(exports, function() {\n      \"use strict\";\n      var t = 1e3, e = 6e4, n = 36e5, r = \"millisecond\", i = \"second\", s = \"minute\", u = \"hour\", a = \"day\", o = \"week\", c = \"month\", f = \"quarter\", h = \"year\", d = \"date\", l = \"Invalid Date\", $ = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/, y = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: \"en\", weekdays: \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"), months: \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"), ordinal: function(t2) {\n        var e2 = [\"th\", \"st\", \"nd\", \"rd\"], n2 = t2 % 100;\n        return \"[\" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + \"]\";\n      } }, m = function(t2, e2, n2) {\n        var r2 = String(t2);\n        return !r2 || r2.length >= e2 ? t2 : \"\" + Array(e2 + 1 - r2.length).join(n2) + t2;\n      }, v = { s: m, z: function(t2) {\n        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;\n        return (e2 <= 0 ? \"+\" : \"-\") + m(r2, 2, \"0\") + \":\" + m(i2, 2, \"0\");\n      }, m: function t2(e2, n2) {\n        if (e2.date() < n2.date())\n          return -t2(n2, e2);\n        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), c);\n        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);\n      }, a: function(t2) {\n        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);\n      }, p: function(t2) {\n        return { M: c, y: h, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: f }[t2] || String(t2 || \"\").toLowerCase().replace(/s$/, \"\");\n      }, u: function(t2) {\n        return void 0 === t2;\n      } }, g = \"en\", D = {};\n      D[g] = M;\n      var p = \"$isDayjsObject\", S = function(t2) {\n        return t2 instanceof _ || !(!t2 || !t2[p]);\n      }, w = function t2(e2, n2, r2) {\n        var i2;\n        if (!e2)\n          return g;\n        if (\"string\" == typeof e2) {\n          var s2 = e2.toLowerCase();\n          D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);\n          var u2 = e2.split(\"-\");\n          if (!i2 && u2.length > 1)\n            return t2(u2[0]);\n        } else {\n          var a2 = e2.name;\n          D[a2] = e2, i2 = a2;\n        }\n        return !r2 && i2 && (g = i2), i2 || !r2 && g;\n      }, O = function(t2, e2) {\n        if (S(t2))\n          return t2.clone();\n        var n2 = \"object\" == typeof e2 ? e2 : {};\n        return n2.date = t2, n2.args = arguments, new _(n2);\n      }, b = v;\n      b.l = w, b.i = S, b.w = function(t2, e2) {\n        return O(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });\n      };\n      var _ = function() {\n        function M2(t2) {\n          this.$L = w(t2.locale, null, true), this.parse(t2), this.$x = this.$x || t2.x || {}, this[p] = true;\n        }\n        var m2 = M2.prototype;\n        return m2.parse = function(t2) {\n          this.$d = function(t3) {\n            var e2 = t3.date, n2 = t3.utc;\n            if (null === e2)\n              return /* @__PURE__ */ new Date(NaN);\n            if (b.u(e2))\n              return /* @__PURE__ */ new Date();\n            if (e2 instanceof Date)\n              return new Date(e2);\n            if (\"string\" == typeof e2 && !/Z$/i.test(e2)) {\n              var r2 = e2.match($);\n              if (r2) {\n                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || \"0\").substring(0, 3);\n                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);\n              }\n            }\n            return new Date(e2);\n          }(t2), this.init();\n        }, m2.init = function() {\n          var t2 = this.$d;\n          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();\n        }, m2.$utils = function() {\n          return b;\n        }, m2.isValid = function() {\n          return !(this.$d.toString() === l);\n        }, m2.isSame = function(t2, e2) {\n          var n2 = O(t2);\n          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);\n        }, m2.isAfter = function(t2, e2) {\n          return O(t2) < this.startOf(e2);\n        }, m2.isBefore = function(t2, e2) {\n          return this.endOf(e2) < O(t2);\n        }, m2.$g = function(t2, e2, n2) {\n          return b.u(t2) ? this[e2] : this.set(n2, t2);\n        }, m2.unix = function() {\n          return Math.floor(this.valueOf() / 1e3);\n        }, m2.valueOf = function() {\n          return this.$d.getTime();\n        }, m2.startOf = function(t2, e2) {\n          var n2 = this, r2 = !!b.u(e2) || e2, f2 = b.p(t2), l2 = function(t3, e3) {\n            var i2 = b.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);\n            return r2 ? i2 : i2.endOf(a);\n          }, $2 = function(t3, e3) {\n            return b.w(n2.toDate()[t3].apply(n2.toDate(\"s\"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);\n          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = \"set\" + (this.$u ? \"UTC\" : \"\");\n          switch (f2) {\n            case h:\n              return r2 ? l2(1, 0) : l2(31, 11);\n            case c:\n              return r2 ? l2(1, M3) : l2(0, M3 + 1);\n            case o:\n              var g2 = this.$locale().weekStart || 0, D2 = (y2 < g2 ? y2 + 7 : y2) - g2;\n              return l2(r2 ? m3 - D2 : m3 + (6 - D2), M3);\n            case a:\n            case d:\n              return $2(v2 + \"Hours\", 0);\n            case u:\n              return $2(v2 + \"Minutes\", 1);\n            case s:\n              return $2(v2 + \"Seconds\", 2);\n            case i:\n              return $2(v2 + \"Milliseconds\", 3);\n            default:\n              return this.clone();\n          }\n        }, m2.endOf = function(t2) {\n          return this.startOf(t2, false);\n        }, m2.$set = function(t2, e2) {\n          var n2, o2 = b.p(t2), f2 = \"set\" + (this.$u ? \"UTC\" : \"\"), l2 = (n2 = {}, n2[a] = f2 + \"Date\", n2[d] = f2 + \"Date\", n2[c] = f2 + \"Month\", n2[h] = f2 + \"FullYear\", n2[u] = f2 + \"Hours\", n2[s] = f2 + \"Minutes\", n2[i] = f2 + \"Seconds\", n2[r] = f2 + \"Milliseconds\", n2)[o2], $2 = o2 === a ? this.$D + (e2 - this.$W) : e2;\n          if (o2 === c || o2 === h) {\n            var y2 = this.clone().set(d, 1);\n            y2.$d[l2]($2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;\n          } else\n            l2 && this.$d[l2]($2);\n          return this.init(), this;\n        }, m2.set = function(t2, e2) {\n          return this.clone().$set(t2, e2);\n        }, m2.get = function(t2) {\n          return this[b.p(t2)]();\n        }, m2.add = function(r2, f2) {\n          var d2, l2 = this;\n          r2 = Number(r2);\n          var $2 = b.p(f2), y2 = function(t2) {\n            var e2 = O(l2);\n            return b.w(e2.date(e2.date() + Math.round(t2 * r2)), l2);\n          };\n          if ($2 === c)\n            return this.set(c, this.$M + r2);\n          if ($2 === h)\n            return this.set(h, this.$y + r2);\n          if ($2 === a)\n            return y2(1);\n          if ($2 === o)\n            return y2(7);\n          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[$2] || 1, m3 = this.$d.getTime() + r2 * M3;\n          return b.w(m3, this);\n        }, m2.subtract = function(t2, e2) {\n          return this.add(-1 * t2, e2);\n        }, m2.format = function(t2) {\n          var e2 = this, n2 = this.$locale();\n          if (!this.isValid())\n            return n2.invalidDate || l;\n          var r2 = t2 || \"YYYY-MM-DDTHH:mm:ssZ\", i2 = b.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, c2 = n2.months, f2 = n2.meridiem, h2 = function(t3, n3, i3, s3) {\n            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);\n          }, d2 = function(t3) {\n            return b.s(s2 % 12 || 12, t3, \"0\");\n          }, $2 = f2 || function(t3, e3, n3) {\n            var r3 = t3 < 12 ? \"AM\" : \"PM\";\n            return n3 ? r3.toLowerCase() : r3;\n          };\n          return r2.replace(y, function(t3, r3) {\n            return r3 || function(t4) {\n              switch (t4) {\n                case \"YY\":\n                  return String(e2.$y).slice(-2);\n                case \"YYYY\":\n                  return b.s(e2.$y, 4, \"0\");\n                case \"M\":\n                  return a2 + 1;\n                case \"MM\":\n                  return b.s(a2 + 1, 2, \"0\");\n                case \"MMM\":\n                  return h2(n2.monthsShort, a2, c2, 3);\n                case \"MMMM\":\n                  return h2(c2, a2);\n                case \"D\":\n                  return e2.$D;\n                case \"DD\":\n                  return b.s(e2.$D, 2, \"0\");\n                case \"d\":\n                  return String(e2.$W);\n                case \"dd\":\n                  return h2(n2.weekdaysMin, e2.$W, o2, 2);\n                case \"ddd\":\n                  return h2(n2.weekdaysShort, e2.$W, o2, 3);\n                case \"dddd\":\n                  return o2[e2.$W];\n                case \"H\":\n                  return String(s2);\n                case \"HH\":\n                  return b.s(s2, 2, \"0\");\n                case \"h\":\n                  return d2(1);\n                case \"hh\":\n                  return d2(2);\n                case \"a\":\n                  return $2(s2, u2, true);\n                case \"A\":\n                  return $2(s2, u2, false);\n                case \"m\":\n                  return String(u2);\n                case \"mm\":\n                  return b.s(u2, 2, \"0\");\n                case \"s\":\n                  return String(e2.$s);\n                case \"ss\":\n                  return b.s(e2.$s, 2, \"0\");\n                case \"SSS\":\n                  return b.s(e2.$ms, 3, \"0\");\n                case \"Z\":\n                  return i2;\n              }\n              return null;\n            }(t3) || i2.replace(\":\", \"\");\n          });\n        }, m2.utcOffset = function() {\n          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);\n        }, m2.diff = function(r2, d2, l2) {\n          var $2, y2 = this, M3 = b.p(d2), m3 = O(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D2 = function() {\n            return b.m(y2, m3);\n          };\n          switch (M3) {\n            case h:\n              $2 = D2() / 12;\n              break;\n            case c:\n              $2 = D2();\n              break;\n            case f:\n              $2 = D2() / 3;\n              break;\n            case o:\n              $2 = (g2 - v2) / 6048e5;\n              break;\n            case a:\n              $2 = (g2 - v2) / 864e5;\n              break;\n            case u:\n              $2 = g2 / n;\n              break;\n            case s:\n              $2 = g2 / e;\n              break;\n            case i:\n              $2 = g2 / t;\n              break;\n            default:\n              $2 = g2;\n          }\n          return l2 ? $2 : b.a($2);\n        }, m2.daysInMonth = function() {\n          return this.endOf(c).$D;\n        }, m2.$locale = function() {\n          return D[this.$L];\n        }, m2.locale = function(t2, e2) {\n          if (!t2)\n            return this.$L;\n          var n2 = this.clone(), r2 = w(t2, e2, true);\n          return r2 && (n2.$L = r2), n2;\n        }, m2.clone = function() {\n          return b.w(this.$d, this);\n        }, m2.toDate = function() {\n          return new Date(this.valueOf());\n        }, m2.toJSON = function() {\n          return this.isValid() ? this.toISOString() : null;\n        }, m2.toISOString = function() {\n          return this.$d.toISOString();\n        }, m2.toString = function() {\n          return this.$d.toUTCString();\n        }, M2;\n      }(), k = _.prototype;\n      return O.prototype = k, [[\"$ms\", r], [\"$s\", i], [\"$m\", s], [\"$H\", u], [\"$W\", a], [\"$M\", c], [\"$y\", h], [\"$D\", d]].forEach(function(t2) {\n        k[t2[1]] = function(e2) {\n          return this.$g(e2, t2[0], t2[1]);\n        };\n      }), O.extend = function(t2, e2) {\n        return t2.$i || (t2(e2, _, O), t2.$i = true), O;\n      }, O.locale = w, O.isDayjs = S, O.unix = function(t2) {\n        return O(1e3 * t2);\n      }, O.en = D[g], O.Ls = D, O.p = {}, O;\n    });\n  }\n});\n\n// src/pilogger.ts\nvar pilogger_exports = {};\n__export(pilogger_exports, {\n  access: () => access,\n  accessFile: () => accessFile,\n  assert: () => assert,\n  blank: () => blank,\n  client: () => client,\n  clientFile: () => clientFile,\n  configure: () => configure,\n  console: () => console,\n  data: () => data,\n  debug: () => debug,\n  error: () => error,\n  fatal: () => fatal,\n  header: () => header,\n  headerJson: () => headerJson,\n  info: () => info,\n  logFile: () => logFile,\n  options: () => options,\n  print: () => print,\n  ring: () => ring,\n  state: () => state,\n  tags: () => tags,\n  timed: () => timed,\n  verbose: () => verbose,\n  warn: () => warn\n});\nmodule.exports = __toCommonJS(pilogger_exports);\nvar os2 = __toESM(require(\"os\"));\nvar fs = __toESM(require(\"fs\"));\nvar path = __toESM(require(\"path\"));\nvar import_dayjs = __toESM(require_dayjs_min());\n\n// node_modules/chalk/source/vendor/ansi-styles/index.js\nvar ANSI_BACKGROUND_OFFSET = 10;\nvar wrapAnsi16 = (offset = 0) => (code) => `\\x1B[${code + offset}m`;\nvar wrapAnsi256 = (offset = 0) => (code) => `\\x1B[${38 + offset};5;${code}m`;\nvar wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\x1B[${38 + offset};2;${red};${green};${blue}m`;\nvar styles = {\n  modifier: {\n    reset: [0, 0],\n    // 21 isn't widely supported and 22 does the same thing\n    bold: [1, 22],\n    dim: [2, 22],\n    italic: [3, 23],\n    underline: [4, 24],\n    overline: [53, 55],\n    inverse: [7, 27],\n    hidden: [8, 28],\n    strikethrough: [9, 29]\n  },\n  color: {\n    black: [30, 39],\n    red: [31, 39],\n    green: [32, 39],\n    yellow: [33, 39],\n    blue: [34, 39],\n    magenta: [35, 39],\n    cyan: [36, 39],\n    white: [37, 39],\n    // Bright color\n    blackBright: [90, 39],\n    gray: [90, 39],\n    // Alias of `blackBright`\n    grey: [90, 39],\n    // Alias of `blackBright`\n    redBright: [91, 39],\n    greenBright: [92, 39],\n    yellowBright: [93, 39],\n    blueBright: [94, 39],\n    magentaBright: [95, 39],\n    cyanBright: [96, 39],\n    whiteBright: [97, 39]\n  },\n  bgColor: {\n    bgBlack: [40, 49],\n    bgRed: [41, 49],\n    bgGreen: [42, 49],\n    bgYellow: [43, 49],\n    bgBlue: [44, 49],\n    bgMagenta: [45, 49],\n    bgCyan: [46, 49],\n    bgWhite: [47, 49],\n    // Bright color\n    bgBlackBright: [100, 49],\n    bgGray: [100, 49],\n    // Alias of `bgBlackBright`\n    bgGrey: [100, 49],\n    // Alias of `bgBlackBright`\n    bgRedBright: [101, 49],\n    bgGreenBright: [102, 49],\n    bgYellowBright: [103, 49],\n    bgBlueBright: [104, 49],\n    bgMagentaBright: [105, 49],\n    bgCyanBright: [106, 49],\n    bgWhiteBright: [107, 49]\n  }\n};\nvar modifierNames = Object.keys(styles.modifier);\nvar foregroundColorNames = Object.keys(styles.color);\nvar backgroundColorNames = Object.keys(styles.bgColor);\nvar colorNames = [...foregroundColorNames, ...backgroundColorNames];\nfunction assembleStyles() {\n  const codes = /* @__PURE__ */ new Map();\n  for (const [groupName, group] of Object.entries(styles)) {\n    for (const [styleName, style] of Object.entries(group)) {\n      styles[styleName] = {\n        open: `\\x1B[${style[0]}m`,\n        close: `\\x1B[${style[1]}m`\n      };\n      group[styleName] = styles[styleName];\n      codes.set(style[0], style[1]);\n    }\n    Object.defineProperty(styles, groupName, {\n      value: group,\n      enumerable: false\n    });\n  }\n  Object.defineProperty(styles, \"codes\", {\n    value: codes,\n    enumerable: false\n  });\n  styles.color.close = \"\\x1B[39m\";\n  styles.bgColor.close = \"\\x1B[49m\";\n  styles.color.ansi = wrapAnsi16();\n  styles.color.ansi256 = wrapAnsi256();\n  styles.color.ansi16m = wrapAnsi16m();\n  styles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n  styles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n  styles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n  Object.defineProperties(styles, {\n    rgbToAnsi256: {\n      value(red, green, blue) {\n        if (red === green && green === blue) {\n          if (red < 8) {\n            return 16;\n          }\n          if (red > 248) {\n            return 231;\n          }\n          return Math.round((red - 8) / 247 * 24) + 232;\n        }\n        return 16 + 36 * Math.round(red / 255 * 5) + 6 * Math.round(green / 255 * 5) + Math.round(blue / 255 * 5);\n      },\n      enumerable: false\n    },\n    hexToRgb: {\n      value(hex) {\n        const matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n        if (!matches) {\n          return [0, 0, 0];\n        }\n        let [colorString] = matches;\n        if (colorString.length === 3) {\n          colorString = [...colorString].map((character) => character + character).join(\"\");\n        }\n        const integer = Number.parseInt(colorString, 16);\n        return [\n          /* eslint-disable no-bitwise */\n          integer >> 16 & 255,\n          integer >> 8 & 255,\n          integer & 255\n          /* eslint-enable no-bitwise */\n        ];\n      },\n      enumerable: false\n    },\n    hexToAnsi256: {\n      value: (hex) => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n      enumerable: false\n    },\n    ansi256ToAnsi: {\n      value(code) {\n        if (code < 8) {\n          return 30 + code;\n        }\n        if (code < 16) {\n          return 90 + (code - 8);\n        }\n        let red;\n        let green;\n        let blue;\n        if (code >= 232) {\n          red = ((code - 232) * 10 + 8) / 255;\n          green = red;\n          blue = red;\n        } else {\n          code -= 16;\n          const remainder = code % 36;\n          red = Math.floor(code / 36) / 5;\n          green = Math.floor(remainder / 6) / 5;\n          blue = remainder % 6 / 5;\n        }\n        const value = Math.max(red, green, blue) * 2;\n        if (value === 0) {\n          return 30;\n        }\n        let result = 30 + (Math.round(blue) << 2 | Math.round(green) << 1 | Math.round(red));\n        if (value === 2) {\n          result += 60;\n        }\n        return result;\n      },\n      enumerable: false\n    },\n    rgbToAnsi: {\n      value: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n      enumerable: false\n    },\n    hexToAnsi: {\n      value: (hex) => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n      enumerable: false\n    }\n  });\n  return styles;\n}\nvar ansiStyles = assembleStyles();\nvar ansi_styles_default = ansiStyles;\n\n// node_modules/chalk/source/vendor/supports-color/index.js\nvar import_node_process = __toESM(require(\"process\"), 1);\nvar import_node_os = __toESM(require(\"os\"), 1);\nvar import_node_tty = __toESM(require(\"tty\"), 1);\nfunction hasFlag(flag, argv = globalThis.Deno ? globalThis.Deno.args : import_node_process.default.argv) {\n  const prefix = flag.startsWith(\"-\") ? \"\" : flag.length === 1 ? \"-\" : \"--\";\n  const position = argv.indexOf(prefix + flag);\n  const terminatorPosition = argv.indexOf(\"--\");\n  return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\nvar { env } = import_node_process.default;\nvar flagForceColor;\nif (hasFlag(\"no-color\") || hasFlag(\"no-colors\") || hasFlag(\"color=false\") || hasFlag(\"color=never\")) {\n  flagForceColor = 0;\n} else if (hasFlag(\"color\") || hasFlag(\"colors\") || hasFlag(\"color=true\") || hasFlag(\"color=always\")) {\n  flagForceColor = 1;\n}\nfunction envForceColor() {\n  if (\"FORCE_COLOR\" in env) {\n    if (env.FORCE_COLOR === \"true\") {\n      return 1;\n    }\n    if (env.FORCE_COLOR === \"false\") {\n      return 0;\n    }\n    return env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n  }\n}\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\nfunction _supportsColor(haveStream, { streamIsTTY, sniffFlags = true } = {}) {\n  const noFlagForceColor = envForceColor();\n  if (noFlagForceColor !== void 0) {\n    flagForceColor = noFlagForceColor;\n  }\n  const forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n  if (forceColor === 0) {\n    return 0;\n  }\n  if (sniffFlags) {\n    if (hasFlag(\"color=16m\") || hasFlag(\"color=full\") || hasFlag(\"color=truecolor\")) {\n      return 3;\n    }\n    if (hasFlag(\"color=256\")) {\n      return 2;\n    }\n  }\n  if (\"TF_BUILD\" in env && \"AGENT_NAME\" in env) {\n    return 1;\n  }\n  if (haveStream && !streamIsTTY && forceColor === void 0) {\n    return 0;\n  }\n  const min = forceColor || 0;\n  if (env.TERM === \"dumb\") {\n    return min;\n  }\n  if (import_node_process.default.platform === \"win32\") {\n    const osRelease = import_node_os.default.release().split(\".\");\n    if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n    return 1;\n  }\n  if (\"CI\" in env) {\n    if (\"GITHUB_ACTIONS\" in env || \"GITEA_ACTIONS\" in env) {\n      return 3;\n    }\n    if ([\"TRAVIS\", \"CIRCLECI\", \"APPVEYOR\", \"GITLAB_CI\", \"BUILDKITE\", \"DRONE\"].some((sign) => sign in env) || env.CI_NAME === \"codeship\") {\n      return 1;\n    }\n    return min;\n  }\n  if (\"TEAMCITY_VERSION\" in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n  if (env.COLORTERM === \"truecolor\") {\n    return 3;\n  }\n  if (env.TERM === \"xterm-kitty\") {\n    return 3;\n  }\n  if (\"TERM_PROGRAM\" in env) {\n    const version = Number.parseInt((env.TERM_PROGRAM_VERSION || \"\").split(\".\")[0], 10);\n    switch (env.TERM_PROGRAM) {\n      case \"iTerm.app\": {\n        return version >= 3 ? 3 : 2;\n      }\n      case \"Apple_Terminal\": {\n        return 2;\n      }\n    }\n  }\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n  if (\"COLORTERM\" in env) {\n    return 1;\n  }\n  return min;\n}\nfunction createSupportsColor(stream, options2 = {}) {\n  const level = _supportsColor(stream, {\n    streamIsTTY: stream && stream.isTTY,\n    ...options2\n  });\n  return translateLevel(level);\n}\nvar supportsColor = {\n  stdout: createSupportsColor({ isTTY: import_node_tty.default.isatty(1) }),\n  stderr: createSupportsColor({ isTTY: import_node_tty.default.isatty(2) })\n};\nvar supports_color_default = supportsColor;\n\n// node_modules/chalk/source/utilities.js\nfunction stringReplaceAll(string, substring, replacer) {\n  let index = string.indexOf(substring);\n  if (index === -1) {\n    return string;\n  }\n  const substringLength = substring.length;\n  let endIndex = 0;\n  let returnValue = \"\";\n  do {\n    returnValue += string.slice(endIndex, index) + substring + replacer;\n    endIndex = index + substringLength;\n    index = string.indexOf(substring, endIndex);\n  } while (index !== -1);\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}\nfunction stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n  let endIndex = 0;\n  let returnValue = \"\";\n  do {\n    const gotCR = string[index - 1] === \"\\r\";\n    returnValue += string.slice(endIndex, gotCR ? index - 1 : index) + prefix + (gotCR ? \"\\r\\n\" : \"\\n\") + postfix;\n    endIndex = index + 1;\n    index = string.indexOf(\"\\n\", endIndex);\n  } while (index !== -1);\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}\n\n// node_modules/chalk/source/index.js\nvar { stdout: stdoutColor, stderr: stderrColor } = supports_color_default;\nvar GENERATOR = Symbol(\"GENERATOR\");\nvar STYLER = Symbol(\"STYLER\");\nvar IS_EMPTY = Symbol(\"IS_EMPTY\");\nvar levelMapping = [\n  \"ansi\",\n  \"ansi\",\n  \"ansi256\",\n  \"ansi16m\"\n];\nvar styles2 = /* @__PURE__ */ Object.create(null);\nvar applyOptions = (object, options2 = {}) => {\n  if (options2.level && !(Number.isInteger(options2.level) && options2.level >= 0 && options2.level <= 3)) {\n    throw new Error(\"The `level` option should be an integer from 0 to 3\");\n  }\n  const colorLevel = stdoutColor ? stdoutColor.level : 0;\n  object.level = options2.level === void 0 ? colorLevel : options2.level;\n};\nvar Chalk = class {\n  constructor(options2) {\n    return chalkFactory(options2);\n  }\n};\nvar chalkFactory = (options2) => {\n  const chalk3 = (...strings) => strings.join(\" \");\n  applyOptions(chalk3, options2);\n  Object.setPrototypeOf(chalk3, createChalk.prototype);\n  return chalk3;\n};\nfunction createChalk(options2) {\n  return chalkFactory(options2);\n}\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\nfor (const [styleName, style] of Object.entries(ansi_styles_default)) {\n  styles2[styleName] = {\n    get() {\n      const builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n      Object.defineProperty(this, styleName, { value: builder });\n      return builder;\n    }\n  };\n}\nstyles2.visible = {\n  get() {\n    const builder = createBuilder(this, this[STYLER], true);\n    Object.defineProperty(this, \"visible\", { value: builder });\n    return builder;\n  }\n};\nvar getModelAnsi = (model, level, type, ...arguments_) => {\n  if (model === \"rgb\") {\n    if (level === \"ansi16m\") {\n      return ansi_styles_default[type].ansi16m(...arguments_);\n    }\n    if (level === \"ansi256\") {\n      return ansi_styles_default[type].ansi256(ansi_styles_default.rgbToAnsi256(...arguments_));\n    }\n    return ansi_styles_default[type].ansi(ansi_styles_default.rgbToAnsi(...arguments_));\n  }\n  if (model === \"hex\") {\n    return getModelAnsi(\"rgb\", level, type, ...ansi_styles_default.hexToRgb(...arguments_));\n  }\n  return ansi_styles_default[type][model](...arguments_);\n};\nvar usedModels = [\"rgb\", \"hex\", \"ansi256\"];\nfor (const model of usedModels) {\n  styles2[model] = {\n    get() {\n      const { level } = this;\n      return function(...arguments_) {\n        const styler = createStyler(getModelAnsi(model, levelMapping[level], \"color\", ...arguments_), ansi_styles_default.color.close, this[STYLER]);\n        return createBuilder(this, styler, this[IS_EMPTY]);\n      };\n    }\n  };\n  const bgModel = \"bg\" + model[0].toUpperCase() + model.slice(1);\n  styles2[bgModel] = {\n    get() {\n      const { level } = this;\n      return function(...arguments_) {\n        const styler = createStyler(getModelAnsi(model, levelMapping[level], \"bgColor\", ...arguments_), ansi_styles_default.bgColor.close, this[STYLER]);\n        return createBuilder(this, styler, this[IS_EMPTY]);\n      };\n    }\n  };\n}\nvar proto = Object.defineProperties(() => {\n}, {\n  ...styles2,\n  level: {\n    enumerable: true,\n    get() {\n      return this[GENERATOR].level;\n    },\n    set(level) {\n      this[GENERATOR].level = level;\n    }\n  }\n});\nvar createStyler = (open, close, parent) => {\n  let openAll;\n  let closeAll;\n  if (parent === void 0) {\n    openAll = open;\n    closeAll = close;\n  } else {\n    openAll = parent.openAll + open;\n    closeAll = close + parent.closeAll;\n  }\n  return {\n    open,\n    close,\n    openAll,\n    closeAll,\n    parent\n  };\n};\nvar createBuilder = (self2, _styler, _isEmpty) => {\n  const builder = (...arguments_) => applyStyle(builder, arguments_.length === 1 ? \"\" + arguments_[0] : arguments_.join(\" \"));\n  Object.setPrototypeOf(builder, proto);\n  builder[GENERATOR] = self2;\n  builder[STYLER] = _styler;\n  builder[IS_EMPTY] = _isEmpty;\n  return builder;\n};\nvar applyStyle = (self2, string) => {\n  if (self2.level <= 0 || !string) {\n    return self2[IS_EMPTY] ? \"\" : string;\n  }\n  let styler = self2[STYLER];\n  if (styler === void 0) {\n    return string;\n  }\n  const { openAll, closeAll } = styler;\n  if (string.includes(\"\\x1B\")) {\n    while (styler !== void 0) {\n      string = stringReplaceAll(string, styler.close, styler.open);\n      styler = styler.parent;\n    }\n  }\n  const lfIndex = string.indexOf(\"\\n\");\n  if (lfIndex !== -1) {\n    string = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n  }\n  return openAll + string + closeAll;\n};\nObject.defineProperties(createChalk.prototype, styles2);\nvar chalk = createChalk();\nvar chalkStderr = createChalk({ level: stderrColor ? stderrColor.level : 0 });\n\n// src/pilogger.ts\nvar import_console = require(\"console\");\nvar chalk2 = new Chalk({ level: 2 });\nvar ring = [];\nvar options = {\n  dateFormat: \"YYYY-MM-DD HH:mm:ss\",\n  ringLength: 100,\n  console: true,\n  timeStamp: true\n};\nvar streams = {\n  logFile: false,\n  accessFile: false,\n  clientFile: false,\n  logStream: void 0,\n  accessStream: void 0,\n  clientStream: void 0\n};\nvar tags = {\n  blank: \"\",\n  continue: \":     \",\n  info: chalk2.cyan(\"INFO: \"),\n  warn: chalk2.yellow(\"WARN: \"),\n  data: chalk2.green(\"DATA: \"),\n  error: chalk2.red(\"ERROR:\"),\n  fatal: chalk2.bold.red(\"FATAL:\"),\n  assert: chalk2.italic.bold.red(\"ASSERT:\"),\n  timed: chalk2.magentaBright(\"TIMED:\"),\n  state: chalk2.magenta(\"STATE:\"),\n  verbose: chalk2.bgGray.yellowBright(\"VERB: \"),\n  debug: chalk2.bgGray.redBright(\"DEBUG:\"),\n  console: chalk2.gray(\"CONSOLE:\")\n};\nvar inspectOptions = {\n  // options passed to nodejs console constructor\n  showHidden: false,\n  depth: 5,\n  colors: true,\n  showProxy: true,\n  maxArrayLength: 1024,\n  maxStringLength: 10240,\n  breakLength: 200,\n  compact: 64,\n  sorted: false,\n  getters: false\n};\nvar logger = new import_console.Console({\n  stdout: process.stdout,\n  stderr: process.stderr,\n  ignoreErrors: true,\n  inspectOptions\n});\nfunction stringify(message) {\n  let str = \"\";\n  try {\n    str = JSON.stringify(message);\n  } catch (e) {\n  }\n  return str;\n}\nfunction combineMessages(...messages) {\n  let msg = \"\";\n  for (const message of messages) {\n    msg += typeof message === \"object\" ? stringify(message) : message;\n    msg += \" \";\n  }\n  return msg;\n}\nfunction print(...messages) {\n  const time = (0, import_dayjs.default)(Date.now()).format(options.dateFormat);\n  if (options.console) {\n    if (options.timeStamp)\n      logger.log(time, ...messages);\n    else\n      logger.log(...messages);\n  }\n}\nfunction logFile(file) {\n  if (typeof file !== \"string\")\n    return;\n  options.logFile = file;\n  streams.logFile = true;\n  streams.logStream = fs.createWriteStream(path.resolve(options.logFile || \"\"), { flags: \"a\" });\n  if (streams.logStream) {\n    streams.logStream.on(\"error\", (e) => {\n      print(tags.error, \"Cannot open application log\", options.logFile, e);\n      streams.logFile = false;\n    });\n  }\n}\nfunction accessFile(file) {\n  if (typeof file !== \"string\")\n    return;\n  options.accessFile = file;\n  streams.accessFile = true;\n  streams.accessStream = fs.createWriteStream(path.resolve(options.accessFile), { flags: \"a\" });\n  if (streams.accessStream) {\n    streams.accessStream.on(\"error\", (e) => {\n      print(tags.error, \"Cannot open application log\", options.accessFile, e);\n      streams.accessFile = false;\n    });\n  }\n}\nfunction clientFile(file) {\n  if (typeof file !== \"string\")\n    return;\n  options.clientFile = file;\n  streams.clientFile = true;\n  streams.clientStream = fs.createWriteStream(path.resolve(options.clientFile), { flags: \"a\" });\n  if (streams.clientStream) {\n    streams.clientStream.on(\"error\", (e) => {\n      print(tags.error, \"Cannot open application log\", options.clientFile, e);\n      streams.clientFile = false;\n    });\n  }\n}\nasync function timed(t0, ...messages) {\n  if (arguments.length < 2) {\n    messages = [t0];\n    t0 = process.hrtime.bigint();\n  }\n  const t1 = process.hrtime.bigint();\n  let elapsed = 0;\n  try {\n    elapsed = parseInt((t1 - t0).toString());\n  } catch (e) {\n  }\n  elapsed = Math.round(elapsed / 1e6);\n  const time = (0, import_dayjs.default)(Date.now()).format(options.dateFormat);\n  if (options.console)\n    logger.log(time, tags.timed, `${elapsed.toLocaleString()} ms`, ...messages);\n  if (streams.logFile && streams.logStream)\n    streams.logStream.write(`${tags.timed} ${time} ${elapsed.toLocaleString()} ms ${combineMessages(...messages)}\n`);\n}\nasync function log(tag, ...messages) {\n  const time = (0, import_dayjs.default)(Date.now()).format(options.dateFormat);\n  if (tags[tag])\n    print(tags[tag], ...messages);\n  else\n    print(...messages);\n  if (streams.logFile && streams.logStream)\n    streams.logStream.write(`${time} ${tags[tag]} ${combineMessages(...messages)}\n`);\n  ring.push({ tag, time, msg: combineMessages(...messages) });\n  if (ring.length > options.ringLength)\n    ring.shift();\n}\nasync function assert(res, exp, ...messages) {\n  if (res !== exp)\n    log(\"assert\", ...messages, { res, exp });\n}\nasync function access(...messages) {\n  const time = (0, import_dayjs.default)(Date.now()).format(options.dateFormat);\n  if (streams.accessFile && streams.accessStream)\n    streams.accessStream.write(`${time} ${combineMessages(...messages)}\n`);\n}\nasync function client(...messages) {\n  const time = (0, import_dayjs.default)(Date.now()).format(options.dateFormat);\n  if (streams.clientFile && streams.clientStream)\n    streams.clientStream.write(`${time} ${combineMessages(...messages)}\n`);\n}\nfunction configure(userOptions) {\n  if (!userOptions)\n    return;\n  if (userOptions.dateFormat)\n    options.dateFormat = userOptions.dateFormat;\n  if (userOptions.ringLength)\n    options.ringLength = userOptions.ringLength;\n  if (userOptions.logFile)\n    logFile(userOptions.logFile);\n  if (userOptions.accessFile)\n    accessFile(userOptions.accessFile);\n  if (userOptions.clientFile)\n    clientFile(userOptions.clientFile);\n  if (userOptions.inspect)\n    inspectOptions = { ...inspectOptions, ...userOptions.inspect };\n  logger = new import_console.Console({\n    stdout: process.stdout,\n    stderr: process.stderr,\n    ignoreErrors: true,\n    inspectOptions\n  });\n}\nfunction header() {\n  const f = \"./package.json\";\n  if (!fs.existsSync(f))\n    return;\n  const node = JSON.parse(fs.readFileSync(f).toString());\n  process.title = node.name;\n  log(\"info\", node.name, \"version\", node.version);\n  log(\"info\", \"User:\", os2.userInfo().username, \"Platform:\", process.platform, \"Arch:\", process.arch, \"Node:\", process.version);\n  if (options.logFile && streams.logFile)\n    print(tags.state, \"Application log:\", path.resolve(options.logFile));\n  if (options.accessFile && streams.accessFile)\n    print(tags.state, \"Access log:\", path.resolve(options.accessFile));\n  if (options.clientFile && streams.clientFile)\n    print(tags.state, \"Client log:\", path.resolve(options.clientFile));\n}\nfunction headerJson() {\n  const f = \"./package.json\";\n  if (!fs.existsSync(f))\n    return;\n  const node = JSON.parse(fs.readFileSync(f).toString());\n  process.title = node.name;\n  log(\"info\", { application: node.name, version: node.version });\n  log(\"info\", { user: os2.userInfo().username, platform: process.platform, arch: process.arch, node: process.version });\n  if (options.logFile || options.accessFile || options.clientFile)\n    print(tags.state, { log: path.resolve(options.logFile || \"\"), access: path.resolve(options.accessFile || \"\"), client: path.resolve(options.clientFile || \"\") });\n}\nvar blank = (...message) => log(\"blank\", ...message);\nvar info = (...message) => log(\"info\", ...message);\nvar state = (...message) => log(\"state\", ...message);\nvar data = (...message) => log(\"data\", ...message);\nvar warn = (...message) => log(\"warn\", ...message);\nvar error = (...message) => log(\"error\", ...message);\nvar fatal = (...message) => log(\"fatal\", ...message);\nvar verbose = (...message) => log(\"verbose\", ...message);\nvar debug = (...message) => log(\"debug\", ...message);\nvar console = (...message) => log(\"console\", ...message);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  access,\n  accessFile,\n  assert,\n  blank,\n  client,\n  clientFile,\n  configure,\n  console,\n  data,\n  debug,\n  error,\n  fatal,\n  header,\n  headerJson,\n  info,\n  logFile,\n  options,\n  print,\n  ring,\n  state,\n  tags,\n  timed,\n  verbose,\n  warn\n});\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", null, null, null, "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "'use strict';\n\nconst fs = require('fs');\nconst { Readable } = require('stream');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst picomatch = require('picomatch');\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG) {\n        negative.push(picomatch(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat : stat;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath.resolve(root);\n    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return { files, depth, path };\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath.resolve(sysPath.join(path, basename));\n      entry = { path: sysPath.relative(this._root, fullPath), fullPath, basename };\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath(full);\n        const entryRealPathStats = await lstat(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\n\nmodule.exports = readdirp;\n", "/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst picomatch = require('picomatch');\nconst normalizePath = require('normalize-path');\n\n/**\n * @typedef {(testString: string) => boolean} AnymatchFn\n * @typedef {string|RegExp|AnymatchFn} AnymatchPattern\n * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher\n */\nconst BANG = '!';\nconst DEFAULT_OPTIONS = {returnIndex: false};\nconst arrify = (item) => Array.isArray(item) ? item : [item];\n\n/**\n * @param {AnymatchPattern} matcher\n * @param {object} options\n * @returns {AnymatchFn}\n */\nconst createPattern = (matcher, options) => {\n  if (typeof matcher === 'function') {\n    return matcher;\n  }\n  if (typeof matcher === 'string') {\n    const glob = picomatch(matcher, options);\n    return (string) => matcher === string || glob(string);\n  }\n  if (matcher instanceof RegExp) {\n    return (string) => matcher.test(string);\n  }\n  return (string) => false;\n};\n\n/**\n * @param {Array<Function>} patterns\n * @param {Array<Function>} negPatterns\n * @param {String|Array} args\n * @param {Boolean} returnIndex\n * @returns {boolean|number}\n */\nconst matchPatterns = (patterns, negPatterns, args, returnIndex) => {\n  const isList = Array.isArray(args);\n  const _path = isList ? args[0] : args;\n  if (!isList && typeof _path !== 'string') {\n    throw new TypeError('anymatch: second argument must be a string: got ' +\n      Object.prototype.toString.call(_path))\n  }\n  const path = normalizePath(_path, false);\n\n  for (let index = 0; index < negPatterns.length; index++) {\n    const nglob = negPatterns[index];\n    if (nglob(path)) {\n      return returnIndex ? -1 : false;\n    }\n  }\n\n  const applied = isList && [path].concat(args.slice(1));\n  for (let index = 0; index < patterns.length; index++) {\n    const pattern = patterns[index];\n    if (isList ? pattern(...applied) : pattern(path)) {\n      return returnIndex ? index : true;\n    }\n  }\n\n  return returnIndex ? -1 : false;\n};\n\n/**\n * @param {AnymatchMatcher} matchers\n * @param {Array|string} testString\n * @param {object} options\n * @returns {boolean|number|Function}\n */\nconst anymatch = (matchers, testString, options = DEFAULT_OPTIONS) => {\n  if (matchers == null) {\n    throw new TypeError('anymatch: specify first argument');\n  }\n  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;\n  const returnIndex = opts.returnIndex || false;\n\n  // Early cache for matchers.\n  const mtchers = arrify(matchers);\n  const negatedGlobs = mtchers\n    .filter(item => typeof item === 'string' && item.charAt(0) === BANG)\n    .map(item => item.slice(1))\n    .map(item => picomatch(item, opts));\n  const patterns = mtchers\n    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG))\n    .map(matcher => createPattern(matcher, opts));\n\n  if (testString == null) {\n    return (testString, ri = false) => {\n      const returnIndex = typeof ri === 'boolean' ? ri : false;\n      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n    }\n  }\n\n  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n};\n\nanymatch.default = anymatch;\nmodule.exports = anymatch;\n", "/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n", "/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n", "'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n", "'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n", "'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n", "/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n", "/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n", "/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n", "'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n", "'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n", "'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n", "'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n", "[\n\t\"3dm\",\n\t\"3ds\",\n\t\"3g2\",\n\t\"3gp\",\n\t\"7z\",\n\t\"a\",\n\t\"aac\",\n\t\"adp\",\n\t\"ai\",\n\t\"aif\",\n\t\"aiff\",\n\t\"alz\",\n\t\"ape\",\n\t\"apk\",\n\t\"appimage\",\n\t\"ar\",\n\t\"arj\",\n\t\"asf\",\n\t\"au\",\n\t\"avi\",\n\t\"bak\",\n\t\"baml\",\n\t\"bh\",\n\t\"bin\",\n\t\"bk\",\n\t\"bmp\",\n\t\"btif\",\n\t\"bz2\",\n\t\"bzip2\",\n\t\"cab\",\n\t\"caf\",\n\t\"cgm\",\n\t\"class\",\n\t\"cmx\",\n\t\"cpio\",\n\t\"cr2\",\n\t\"cur\",\n\t\"dat\",\n\t\"dcm\",\n\t\"deb\",\n\t\"dex\",\n\t\"djvu\",\n\t\"dll\",\n\t\"dmg\",\n\t\"dng\",\n\t\"doc\",\n\t\"docm\",\n\t\"docx\",\n\t\"dot\",\n\t\"dotm\",\n\t\"dra\",\n\t\"DS_Store\",\n\t\"dsk\",\n\t\"dts\",\n\t\"dtshd\",\n\t\"dvb\",\n\t\"dwg\",\n\t\"dxf\",\n\t\"ecelp4800\",\n\t\"ecelp7470\",\n\t\"ecelp9600\",\n\t\"egg\",\n\t\"eol\",\n\t\"eot\",\n\t\"epub\",\n\t\"exe\",\n\t\"f4v\",\n\t\"fbs\",\n\t\"fh\",\n\t\"fla\",\n\t\"flac\",\n\t\"flatpak\",\n\t\"fli\",\n\t\"flv\",\n\t\"fpx\",\n\t\"fst\",\n\t\"fvt\",\n\t\"g3\",\n\t\"gh\",\n\t\"gif\",\n\t\"graffle\",\n\t\"gz\",\n\t\"gzip\",\n\t\"h261\",\n\t\"h263\",\n\t\"h264\",\n\t\"icns\",\n\t\"ico\",\n\t\"ief\",\n\t\"img\",\n\t\"ipa\",\n\t\"iso\",\n\t\"jar\",\n\t\"jpeg\",\n\t\"jpg\",\n\t\"jpgv\",\n\t\"jpm\",\n\t\"jxr\",\n\t\"key\",\n\t\"ktx\",\n\t\"lha\",\n\t\"lib\",\n\t\"lvp\",\n\t\"lz\",\n\t\"lzh\",\n\t\"lzma\",\n\t\"lzo\",\n\t\"m3u\",\n\t\"m4a\",\n\t\"m4v\",\n\t\"mar\",\n\t\"mdi\",\n\t\"mht\",\n\t\"mid\",\n\t\"midi\",\n\t\"mj2\",\n\t\"mka\",\n\t\"mkv\",\n\t\"mmr\",\n\t\"mng\",\n\t\"mobi\",\n\t\"mov\",\n\t\"movie\",\n\t\"mp3\",\n\t\"mp4\",\n\t\"mp4a\",\n\t\"mpeg\",\n\t\"mpg\",\n\t\"mpga\",\n\t\"mxu\",\n\t\"nef\",\n\t\"npx\",\n\t\"numbers\",\n\t\"nupkg\",\n\t\"o\",\n\t\"odp\",\n\t\"ods\",\n\t\"odt\",\n\t\"oga\",\n\t\"ogg\",\n\t\"ogv\",\n\t\"otf\",\n\t\"ott\",\n\t\"pages\",\n\t\"pbm\",\n\t\"pcx\",\n\t\"pdb\",\n\t\"pdf\",\n\t\"pea\",\n\t\"pgm\",\n\t\"pic\",\n\t\"png\",\n\t\"pnm\",\n\t\"pot\",\n\t\"potm\",\n\t\"potx\",\n\t\"ppa\",\n\t\"ppam\",\n\t\"ppm\",\n\t\"pps\",\n\t\"ppsm\",\n\t\"ppsx\",\n\t\"ppt\",\n\t\"pptm\",\n\t\"pptx\",\n\t\"psd\",\n\t\"pya\",\n\t\"pyc\",\n\t\"pyo\",\n\t\"pyv\",\n\t\"qt\",\n\t\"rar\",\n\t\"ras\",\n\t\"raw\",\n\t\"resources\",\n\t\"rgb\",\n\t\"rip\",\n\t\"rlc\",\n\t\"rmf\",\n\t\"rmvb\",\n\t\"rpm\",\n\t\"rtf\",\n\t\"rz\",\n\t\"s3m\",\n\t\"s7z\",\n\t\"scpt\",\n\t\"sgi\",\n\t\"shar\",\n\t\"snap\",\n\t\"sil\",\n\t\"sketch\",\n\t\"slk\",\n\t\"smv\",\n\t\"snk\",\n\t\"so\",\n\t\"stl\",\n\t\"suo\",\n\t\"sub\",\n\t\"swf\",\n\t\"tar\",\n\t\"tbz\",\n\t\"tbz2\",\n\t\"tga\",\n\t\"tgz\",\n\t\"thmx\",\n\t\"tif\",\n\t\"tiff\",\n\t\"tlz\",\n\t\"ttc\",\n\t\"ttf\",\n\t\"txz\",\n\t\"udf\",\n\t\"uvh\",\n\t\"uvi\",\n\t\"uvm\",\n\t\"uvp\",\n\t\"uvs\",\n\t\"uvu\",\n\t\"viv\",\n\t\"vob\",\n\t\"war\",\n\t\"wav\",\n\t\"wax\",\n\t\"wbmp\",\n\t\"wdp\",\n\t\"weba\",\n\t\"webm\",\n\t\"webp\",\n\t\"whl\",\n\t\"wim\",\n\t\"wm\",\n\t\"wma\",\n\t\"wmv\",\n\t\"wmx\",\n\t\"woff\",\n\t\"woff2\",\n\t\"wrm\",\n\t\"wvx\",\n\t\"xbm\",\n\t\"xif\",\n\t\"xla\",\n\t\"xlam\",\n\t\"xls\",\n\t\"xlsb\",\n\t\"xlsm\",\n\t\"xlsx\",\n\t\"xlt\",\n\t\"xltm\",\n\t\"xltx\",\n\t\"xm\",\n\t\"xmind\",\n\t\"xpi\",\n\t\"xpm\",\n\t\"xwd\",\n\t\"xz\",\n\t\"z\",\n\t\"zip\",\n\t\"zipx\"\n]\n", "module.exports = require('./binary-extensions.json');\n", "'use strict';\nconst path = require('path');\nconst binaryExtensions = require('binary-extensions');\n\nconst extensions = new Set(binaryExtensions);\n\nmodule.exports = filePath => extensions.has(path.extname(filePath).slice(1).toLowerCase());\n", "'use strict';\n\nconst {sep} = require('path');\nconst {platform} = process;\nconst os = require('os');\n\nexports.EV_ALL = 'all';\nexports.EV_READY = 'ready';\nexports.EV_ADD = 'add';\nexports.EV_CHANGE = 'change';\nexports.EV_ADD_DIR = 'addDir';\nexports.EV_UNLINK = 'unlink';\nexports.EV_UNLINK_DIR = 'unlinkDir';\nexports.EV_RAW = 'raw';\nexports.EV_ERROR = 'error';\n\nexports.STR_DATA = 'data';\nexports.STR_END = 'end';\nexports.STR_CLOSE = 'close';\n\nexports.FSEVENT_CREATED = 'created';\nexports.FSEVENT_MODIFIED = 'modified';\nexports.FSEVENT_DELETED = 'deleted';\nexports.FSEVENT_MOVED = 'moved';\nexports.FSEVENT_CLONED = 'cloned';\nexports.FSEVENT_UNKNOWN = 'unknown';\nexports.FSEVENT_TYPE_FILE = 'file';\nexports.FSEVENT_TYPE_DIRECTORY = 'directory';\nexports.FSEVENT_TYPE_SYMLINK = 'symlink';\n\nexports.KEY_LISTENERS = 'listeners';\nexports.KEY_ERR = 'errHandlers';\nexports.KEY_RAW = 'rawEmitters';\nexports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];\n\nexports.DOT_SLASH = `.${sep}`;\n\nexports.BACK_SLASH_RE = /\\\\/g;\nexports.DOUBLE_SLASH_RE = /\\/\\//;\nexports.SLASH_OR_BACK_SLASH_RE = /[/\\\\]/;\nexports.DOT_RE = /\\..*\\.(sw[px])$|~$|\\.subl.*\\.tmp/;\nexports.REPLACER_RE = /^\\.[/\\\\]/;\n\nexports.SLASH = '/';\nexports.SLASH_SLASH = '//';\nexports.BRACE_START = '{';\nexports.BANG = '!';\nexports.ONE_DOT = '.';\nexports.TWO_DOTS = '..';\nexports.STAR = '*';\nexports.GLOBSTAR = '**';\nexports.ROOT_GLOBSTAR = '/**/*';\nexports.SLASH_GLOBSTAR = '/**';\nexports.DIR_SUFFIX = 'Dir';\nexports.ANYMATCH_OPTS = {dot: true};\nexports.STRING_TYPE = 'string';\nexports.FUNCTION_TYPE = 'function';\nexports.EMPTY_STR = '';\nexports.EMPTY_FN = () => {};\nexports.IDENTITY_FN = val => val;\n\nexports.isWindows = platform === 'win32';\nexports.isMacos = platform === 'darwin';\nexports.isLinux = platform === 'linux';\nexports.isIBMi = os.type() === 'OS400';\n", "'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst isBinaryPath = require('is-binary-path');\nconst {\n  isWindows,\n  isLinux,\n  EMPTY_FN,\n  EMPTY_STR,\n  KEY_LISTENERS,\n  KEY_ERR,\n  KEY_RAW,\n  HANDLER_KEYS,\n  EV_CHANGE,\n  EV_ADD,\n  EV_ADD_DIR,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  BRACE_START,\n  STAR\n} = require('./constants');\n\nconst THROTTLE_MODE_WATCH = 'watch';\n\nconst open = promisify(fs.open);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst close = promisify(fs.close);\nconst fsrealpath = promisify(fs.realpath);\n\nconst statMethods = { lstat, stat };\n\n// TODO: emit errors properly. Example: EMFILE on Macos.\nconst foreach = (val, fn) => {\n  if (val instanceof Set) {\n    val.forEach(fn);\n  } else {\n    fn(val);\n  }\n};\n\nconst addAndConvert = (main, prop, item) => {\n  let container = main[prop];\n  if (!(container instanceof Set)) {\n    main[prop] = container = new Set([container]);\n  }\n  container.add(item);\n};\n\nconst clearItem = cont => key => {\n  const set = cont[key];\n  if (set instanceof Set) {\n    set.clear();\n  } else {\n    delete cont[key];\n  }\n};\n\nconst delFromSet = (main, prop, item) => {\n  const container = main[prop];\n  if (container instanceof Set) {\n    container.delete(item);\n  } else if (container === item) {\n    delete main[prop];\n  }\n};\n\nconst isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;\n\n/**\n * @typedef {String} Path\n */\n\n// fs_watch helpers\n\n// object to hold per-process fs_watch instances\n// (may be shared across chokidar FSWatcher instances)\n\n/**\n * @typedef {Object} FsWatchContainer\n * @property {Set} listeners\n * @property {Set} errHandlers\n * @property {Set} rawEmitters\n * @property {fs.FSWatcher=} watcher\n * @property {Boolean=} watcherUnusable\n */\n\n/**\n * @type {Map<String,FsWatchContainer>}\n */\nconst FsWatchInstances = new Map();\n\n/**\n * Instantiates the fs_watch interface\n * @param {String} path to be watched\n * @param {Object} options to be passed to fs_watch\n * @param {Function} listener main event handler\n * @param {Function} errHandler emits info about errors\n * @param {Function} emitRaw emits raw event data\n * @returns {fs.FSWatcher} new fsevents instance\n */\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  const handleEvent = (rawEvent, evPath) => {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occurring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n/**\n * Helper for passing fs_watch event data to a collection of listeners\n * @param {Path} fullPath absolute path bound to fs_watch instance\n * @param {String} type listener type\n * @param {*=} val1 arguments to be passed to listeners\n * @param {*=} val2\n * @param {*=} val3\n */\nconst fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {\n  const cont = FsWatchInstances.get(fullPath);\n  if (!cont) return;\n  foreach(cont[type], (listener) => {\n    listener(val1, val2, val3);\n  });\n};\n\n/**\n * Instantiates the fs_watch interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path\n * @param {String} fullPath absolute path\n * @param {Object} options to be passed to fs_watch\n * @param {Object} handlers container for event listener functions\n */\nconst setFsWatchListener = (path, fullPath, options, handlers) => {\n  const {listener, errHandler, rawEmitter} = handlers;\n  let cont = FsWatchInstances.get(fullPath);\n\n  /** @type {fs.FSWatcher=} */\n  let watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_ERR, errHandler);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)\n    );\n    if (!watcher) return;\n    watcher.on(EV_ERROR, async (error) => {\n      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);\n      cont.watcherUnusable = true; // documented since Node 10.4.1\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (isWindows && error.code === 'EPERM') {\n        try {\n          const fd = await open(path, 'r');\n          await close(fd);\n          broadcastErr(error);\n        } catch (err) {}\n      } else {\n        broadcastErr(error);\n      }\n    });\n    cont = {\n      listeners: listener,\n      errHandlers: errHandler,\n      rawEmitters: rawEmitter,\n      watcher\n    };\n    FsWatchInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // removes this instance's listeners and closes the underlying fs_watch\n  // instance if there are no more listeners left\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_ERR, errHandler);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      // Check to protect against issue gh-730.\n      // if (cont.watcherUnusable) {\n      cont.watcher.close();\n      // }\n      FsWatchInstances.delete(fullPath);\n      HANDLER_KEYS.forEach(clearItem(cont));\n      cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n// fs_watchFile helpers\n\n// object to hold per-process fs_watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nconst FsWatchFileInstances = new Map();\n\n/**\n * Instantiates the fs_watchFile interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path to be watched\n * @param {String} fullPath absolute path\n * @param {Object} options options to be passed to fs_watchFile\n * @param {Object} handlers container for event listener functions\n * @returns {Function} closer\n */\nconst setFsWatchFileListener = (path, fullPath, options, handlers) => {\n  const {listener, rawEmitter} = handlers;\n  let cont = FsWatchFileInstances.get(fullPath);\n\n  /* eslint-disable no-unused-vars, prefer-destructuring */\n  let listeners = new Set();\n  let rawEmitters = new Set();\n\n  const copts = cont && cont.options;\n  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {\n    // \"Upgrade\" the watcher to persistence or a quicker interval.\n    // This creates some unlikely edge case issues if the user mixes\n    // settings in a very weird way, but solving for those cases\n    // doesn't seem worthwhile for the added complexity.\n    listeners = cont.listeners;\n    rawEmitters = cont.rawEmitters;\n    fs.unwatchFile(fullPath);\n    cont = undefined;\n  }\n\n  /* eslint-enable no-unused-vars, prefer-destructuring */\n\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    // TODO\n    // listeners.add(listener);\n    // rawEmitters.add(rawEmitter);\n    cont = {\n      listeners: listener,\n      rawEmitters: rawEmitter,\n      options,\n      watcher: fs.watchFile(fullPath, options, (curr, prev) => {\n        foreach(cont.rawEmitters, (rawEmitter) => {\n          rawEmitter(EV_CHANGE, fullPath, {curr, prev});\n        });\n        const currmtime = curr.mtimeMs;\n        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {\n          foreach(cont.listeners, (listener) => listener(path, curr));\n        }\n      })\n    };\n    FsWatchFileInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // Removes this instance's listeners and closes the underlying fs_watchFile\n  // instance if there are no more listeners left.\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      FsWatchFileInstances.delete(fullPath);\n      fs.unwatchFile(fullPath);\n      cont.options = cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n/**\n * @mixin\n */\nclass NodeFsHandler {\n\n/**\n * @param {import(\"../index\").FSWatcher} fsW\n */\nconstructor(fsW) {\n  this.fsw = fsW;\n  this._boundHandleError = (error) => fsW._handleError(error);\n}\n\n/**\n * Watch file for changes with fs_watchFile or fs_watch.\n * @param {String} path to file or dir\n * @param {Function} listener on fs change\n * @returns {Function} closer for the watcher instance\n */\n_watchWithNodeFs(path, listener) {\n  const opts = this.fsw.options;\n  const directory = sysPath.dirname(path);\n  const basename = sysPath.basename(path);\n  const parent = this.fsw._getWatchedDir(directory);\n  parent.add(basename);\n  const absolutePath = sysPath.resolve(path);\n  const options = {persistent: opts.persistent};\n  if (!listener) listener = EMPTY_FN;\n\n  let closer;\n  if (opts.usePolling) {\n    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?\n      opts.binaryInterval : opts.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener,\n      rawEmitter: this.fsw._emitRaw\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener,\n      errHandler: this._boundHandleError,\n      rawEmitter: this.fsw._emitRaw\n    });\n  }\n  return closer;\n}\n\n/**\n * Watch a file and emit add event if warranted.\n * @param {Path} file Path\n * @param {fs.Stats} stats result of fs_stat\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @returns {Function} closer for the watcher instance\n */\n_handleFile(file, stats, initialAdd) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const dirname = sysPath.dirname(file);\n  const basename = sysPath.basename(file);\n  const parent = this.fsw._getWatchedDir(dirname);\n  // stats is always present\n  let prevStats = stats;\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return;\n\n  const listener = async (path, newStats) => {\n    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;\n    if (!newStats || newStats.mtimeMs === 0) {\n      try {\n        const newStats = await stat(file);\n        if (this.fsw.closed) return;\n        // Check that change event was not fired because of changed only accessTime.\n        const at = newStats.atimeMs;\n        const mt = newStats.mtimeMs;\n        if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n          this.fsw._emit(EV_CHANGE, file, newStats);\n        }\n        if (isLinux && prevStats.ino !== newStats.ino) {\n          this.fsw._closeFile(path)\n          prevStats = newStats;\n          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));\n        } else {\n          prevStats = newStats;\n        }\n      } catch (error) {\n        // Fix issues where mtime is null but file is still present\n        this.fsw._remove(dirname, basename);\n      }\n      // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      // Check that change event was not fired because of changed only accessTime.\n      const at = newStats.atimeMs;\n      const mt = newStats.mtimeMs;\n      if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n        this.fsw._emit(EV_CHANGE, file, newStats);\n      }\n      prevStats = newStats;\n    }\n  }\n  // kick off the watcher\n  const closer = this._watchWithNodeFs(file, listener);\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {\n    if (!this.fsw._throttle(EV_ADD, file, 0)) return;\n    this.fsw._emit(EV_ADD, file, stats);\n  }\n\n  return closer;\n}\n\n/**\n * Handle symlinks encountered while reading a dir.\n * @param {Object} entry returned by readdirp\n * @param {String} directory path of dir being read\n * @param {String} path of this item\n * @param {String} item basename of this item\n * @returns {Promise<Boolean>} true if no more processing is needed for this entry.\n */\nasync _handleSymlink(entry, directory, path, item) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const full = entry.fullPath;\n  const dir = this.fsw._getWatchedDir(directory);\n\n  if (!this.fsw.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this.fsw._incrReadyCount();\n\n    let linkPath;\n    try {\n      linkPath = await fsrealpath(path);\n    } catch (e) {\n      this.fsw._emitReady();\n      return true;\n    }\n\n    if (this.fsw.closed) return;\n    if (dir.has(item)) {\n      if (this.fsw._symlinkPaths.get(full) !== linkPath) {\n        this.fsw._symlinkPaths.set(full, linkPath);\n        this.fsw._emit(EV_CHANGE, path, entry.stats);\n      }\n    } else {\n      dir.add(item);\n      this.fsw._symlinkPaths.set(full, linkPath);\n      this.fsw._emit(EV_ADD, path, entry.stats);\n    }\n    this.fsw._emitReady();\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this.fsw._symlinkPaths.has(full)) {\n    return true;\n  }\n\n  this.fsw._symlinkPaths.set(full, true);\n}\n\n_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {\n  // Normalize the directory name on Windows\n  directory = sysPath.join(directory, EMPTY_STR);\n\n  if (!wh.hasGlob) {\n    throttler = this.fsw._throttle('readdir', directory, 1000);\n    if (!throttler) return;\n  }\n\n  const previous = this.fsw._getWatchedDir(wh.path);\n  const current = new Set();\n\n  let stream = this.fsw._readdirp(directory, {\n    fileFilter: entry => wh.filterPath(entry),\n    directoryFilter: entry => wh.filterDir(entry),\n    depth: 0\n  }).on(STR_DATA, async (entry) => {\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    const item = entry.path;\n    let path = sysPath.join(directory, item);\n    current.add(item);\n\n    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {\n      return;\n    }\n\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    // Files that present in current directory snapshot\n    // but absent in previous are added to watch list and\n    // emit `add` event.\n    if (item === target || !target && !previous.has(item)) {\n      this.fsw._incrReadyCount();\n\n      // ensure relativeness of path is preserved in case of watcher reuse\n      path = sysPath.join(dir, sysPath.relative(dir, path));\n\n      this._addToNodeFs(path, initialAdd, wh, depth + 1);\n    }\n  }).on(EV_ERROR, this._boundHandleError);\n\n  return new Promise(resolve =>\n    stream.once(STR_END, () => {\n      if (this.fsw.closed) {\n        stream = undefined;\n        return;\n      }\n      const wasThrottled = throttler ? throttler.clear() : false;\n\n      resolve();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.getChildren().filter((item) => {\n        return item !== directory &&\n          !current.has(item) &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath.resolve(directory, item)\n          }));\n      }).forEach((item) => {\n        this.fsw._remove(directory, item);\n      });\n\n      stream = undefined;\n\n      // one more time for any missed in case changes came in extremely quickly\n      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);\n    })\n  );\n}\n\n/**\n * Read directory to add / remove files from `@watched` list and re-read it on change.\n * @param {String} dir fs path\n * @param {fs.Stats} stats\n * @param {Boolean} initialAdd\n * @param {Number} depth relative to user-supplied path\n * @param {String} target child path targeted for watch\n * @param {Object} wh Common watch helpers for this path\n * @param {String} realpath\n * @returns {Promise<Function>} closer for the watcher instance.\n */\nasync _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {\n  const parentDir = this.fsw._getWatchedDir(sysPath.dirname(dir));\n  const tracked = parentDir.has(sysPath.basename(dir));\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR, dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath.basename(dir));\n  this.fsw._getWatchedDir(dir);\n  let throttler;\n  let closer;\n\n  const oDepth = this.fsw.options.depth;\n  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {\n    if (!target) {\n      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);\n      if (this.fsw.closed) return;\n    }\n\n    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtimeMs === 0) return;\n\n      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);\n    });\n  }\n  return closer;\n}\n\n/**\n * Handle added file, directory, or glob pattern.\n * Delegates call to _handleFile / _handleDir after checks.\n * @param {String} path to file or ir\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @param {Object} priorWh depth relative to user-supplied path\n * @param {Number} depth Child path actually targeted for watch\n * @param {String=} target Child path actually targeted for watch\n * @returns {Promise}\n */\nasync _addToNodeFs(path, initialAdd, priorWh, depth, target) {\n  const ready = this.fsw._emitReady;\n  if (this.fsw._isIgnored(path) || this.fsw.closed) {\n    ready();\n    return false;\n  }\n\n  const wh = this.fsw._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = entry => priorWh.filterPath(entry);\n    wh.filterDir = entry => priorWh.filterDir(entry);\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return false;\n    }\n\n    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START);\n    let closer;\n    if (stats.isDirectory()) {\n      const absPath = sysPath.resolve(path);\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);\n      if (this.fsw.closed) return;\n      // preserve this symlink's target path\n      if (absPath !== targetPath && targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(absPath, targetPath);\n      }\n    } else if (stats.isSymbolicLink()) {\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      const parent = sysPath.dirname(wh.watchPath);\n      this.fsw._getWatchedDir(parent).add(wh.watchPath);\n      this.fsw._emit(EV_ADD, wh.watchPath, stats);\n      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);\n      if (this.fsw.closed) return;\n\n      // preserve this symlink's target path\n      if (targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(sysPath.resolve(path), targetPath);\n      }\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd);\n    }\n    ready();\n\n    this.fsw._addPathCloser(path, closer);\n    return false;\n\n  } catch (error) {\n    if (this.fsw._handleError(error)) {\n      ready();\n      return path;\n    }\n  }\n}\n\n}\n\nmodule.exports = NodeFsHandler;\n", "'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\n\nlet fsevents;\ntry {\n  fsevents = require('fsevents');\n} catch (error) {\n  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);\n}\n\nif (fsevents) {\n  // TODO: real check\n  const mtch = process.version.match(/v(\\d+)\\.(\\d+)/);\n  if (mtch && mtch[1] && mtch[2]) {\n    const maj = Number.parseInt(mtch[1], 10);\n    const min = Number.parseInt(mtch[2], 10);\n    if (maj === 8 && min < 16) {\n      fsevents = undefined;\n    }\n  }\n}\n\nconst {\n  EV_ADD,\n  EV_CHANGE,\n  EV_ADD_DIR,\n  EV_UNLINK,\n  EV_ERROR,\n  STR_DATA,\n  STR_END,\n  FSEVENT_CREATED,\n  FSEVENT_MODIFIED,\n  FSEVENT_DELETED,\n  FSEVENT_MOVED,\n  // FSEVENT_CLONED,\n  FSEVENT_UNKNOWN,\n  FSEVENT_TYPE_FILE,\n  FSEVENT_TYPE_DIRECTORY,\n  FSEVENT_TYPE_SYMLINK,\n\n  ROOT_GLOBSTAR,\n  DIR_SUFFIX,\n  DOT_SLASH,\n  FUNCTION_TYPE,\n  EMPTY_FN,\n  IDENTITY_FN\n} = require('./constants');\n\nconst Depth = (value) => isNaN(value) ? {} : {depth: value};\n\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\nconst statMethods = { stat, lstat };\n\n/**\n * @typedef {String} Path\n */\n\n/**\n * @typedef {Object} FsEventsWatchContainer\n * @property {Set<Function>} listeners\n * @property {Function} rawEmitter\n * @property {{stop: Function}} watcher\n */\n\n// fsevents instance helper functions\n/**\n * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)\n * @type {Map<Path,FsEventsWatchContainer>}\n */\nconst FSEventsWatchers = new Map();\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nconst consolidateThreshhold = 10;\n\nconst wrongEventFlags = new Set([\n  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n]);\n\n/**\n * Instantiates the fsevents interface\n * @param {Path} path path to be watched\n * @param {Function} callback called when fsevents is bound and ready\n * @returns {{stop: Function}} new fsevents instance\n */\nconst createFSEventsInstance = (path, callback) => {\n  const stop = fsevents.watch(path, callback);\n  return {stop};\n};\n\n/**\n * Instantiates the fsevents interface or binds listeners to an existing one covering\n * the same file tree.\n * @param {Path} path           - to be watched\n * @param {Path} realPath       - real path for symlinks\n * @param {Function} listener   - called when fsevents emits events\n * @param {Function} rawEmitter - passes data to listeners of the 'raw' event\n * @returns {Function} closer\n */\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  let watchPath = sysPath.extname(realPath) ? sysPath.dirname(realPath) : realPath;\n\n  const parentPath = sysPath.dirname(watchPath);\n  let cont = FSEventsWatchers.get(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  const resolvedPath = sysPath.resolve(path);\n  const hasSymlink = resolvedPath !== realPath;\n\n  const filteredListener = (fullPath, flags, info) => {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath.sep)\n    ) listener(fullPath, flags, info);\n  };\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  let watchedParent = false;\n  for (const watchedPath of FSEventsWatchers.keys()) {\n    if (realPath.indexOf(sysPath.resolve(watchedPath) + sysPath.sep) === 0) {\n      watchPath = watchedPath;\n      cont = FSEventsWatchers.get(watchPath);\n      watchedParent = true;\n      break;\n    }\n  }\n\n  if (cont || watchedParent) {\n    cont.listeners.add(filteredListener);\n  } else {\n    cont = {\n      listeners: new Set([filteredListener]),\n      rawEmitter,\n      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {\n        if (!cont.listeners.size) return;\n        const info = fsevents.getInfo(fullPath, flags);\n        cont.listeners.forEach(list => {\n          list(fullPath, flags, info);\n        });\n\n        cont.rawEmitter(info.event, fullPath, info);\n      })\n    };\n    FSEventsWatchers.set(watchPath, cont);\n  }\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return () => {\n    const lst = cont.listeners;\n\n    lst.delete(filteredListener);\n    if (!lst.size) {\n      FSEventsWatchers.delete(watchPath);\n      if (cont.watcher) return cont.watcher.stop().then(() => {\n        cont.rawEmitter = cont.watcher = undefined;\n        Object.freeze(cont);\n      });\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nconst couldConsolidate = (path) => {\n  let count = 0;\n  for (const watchPath of FSEventsWatchers.keys()) {\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// returns boolean indicating whether fsevents can be used\nconst canUse = () => fsevents && FSEventsWatchers.size < 128;\n\n// determines subdirectory traversal levels from root to path\nconst calcDepth = (path, root) => {\n  let i = 0;\n  while (!path.indexOf(root) && (path = sysPath.dirname(path)) !== root) i++;\n  return i;\n};\n\n// returns boolean indicating whether the fsevents' event info has the same type\n// as the one returned by fs.stat\nconst sameTypes = (info, stats) => (\n  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||\n  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||\n  info.type === FSEVENT_TYPE_FILE && stats.isFile()\n)\n\n/**\n * @mixin\n */\nclass FsEventsHandler {\n\n/**\n * @param {import('../index').FSWatcher} fsw\n */\nconstructor(fsw) {\n  this.fsw = fsw;\n}\ncheckIgnored(path, stats) {\n  const ipaths = this.fsw._ignoredPaths;\n  if (this.fsw._isIgnored(path, stats)) {\n    ipaths.add(path);\n    if (stats && stats.isDirectory()) {\n      ipaths.add(path + ROOT_GLOBSTAR);\n    }\n    return true;\n  }\n\n  ipaths.delete(path);\n  ipaths.delete(path + ROOT_GLOBSTAR);\n}\n\naddOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  const event = watchedDir.has(item) ? EV_CHANGE : EV_ADD;\n  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n}\n\nasync checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  try {\n    const stats = await stat(path)\n    if (this.fsw.closed) return;\n    if (sameTypes(info, stats)) {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  } catch (error) {\n    if (error.code === 'EACCES') {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  }\n}\n\nhandleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  if (this.fsw.closed || this.checkIgnored(path)) return;\n\n  if (event === EV_UNLINK) {\n    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY\n    // suppress unlink events on never before seen files\n    if (isDirectory || watchedDir.has(item)) {\n      this.fsw._remove(parent, item, isDirectory);\n    }\n  } else {\n    if (event === EV_ADD) {\n      // track new directories\n      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);\n\n      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {\n        // push symlinks back to the top of the stack to get handled\n        const curDepth = opts.depth === undefined ?\n          undefined : calcDepth(fullPath, realPath) + 1;\n        return this._addToFsEvents(path, false, true, curDepth);\n      }\n\n      // track new paths\n      // (other than symlinks being followed, which will be tracked soon)\n      this.fsw._getWatchedDir(parent).add(item);\n    }\n    /**\n     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}\n     */\n    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;\n    this.fsw._emit(eventName, path);\n    if (eventName === EV_ADD_DIR) this._addToFsEvents(path, false, true);\n  }\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} watchPath  - file/dir path to be watched with fsevents\n * @param {String} realPath   - real path (in case of symlinks)\n * @param {Function} transform  - path transformer\n * @param {Function} globFilter - path filter in case a glob pattern was provided\n * @returns {Function} closer for the watcher instance\n*/\n_watchWithFsEvents(watchPath, realPath, transform, globFilter) {\n  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;\n  const opts = this.fsw.options;\n  const watchCallback = async (fullPath, flags, info) => {\n    if (this.fsw.closed) return;\n    if (\n      opts.depth !== undefined &&\n      calcDepth(fullPath, realPath) > opts.depth\n    ) return;\n    const path = transform(sysPath.join(\n      watchPath, sysPath.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    const parent = sysPath.dirname(path);\n    const item = sysPath.basename(path);\n    const watchedDir = this.fsw._getWatchedDir(\n      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent\n    );\n\n    // correct for wrong events emitted\n    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {\n      if (typeof opts.ignored === FUNCTION_TYPE) {\n        let stats;\n        try {\n          stats = await stat(path);\n        } catch (error) {}\n        if (this.fsw.closed) return;\n        if (this.checkIgnored(path, stats)) return;\n        if (sameTypes(info, stats)) {\n          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        } else {\n          this.handleEvent(EV_UNLINK, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        }\n      } else {\n        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    } else {\n      switch (info.event) {\n      case FSEVENT_CREATED:\n      case FSEVENT_MODIFIED:\n        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      case FSEVENT_DELETED:\n      case FSEVENT_MOVED:\n        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    }\n  };\n\n  const closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.fsw._emitRaw\n  );\n\n  this.fsw._emitReady();\n  return closer;\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} linkPath path to symlink\n * @param {String} fullPath absolute path to the symlink\n * @param {Function} transform pre-existing path transformer\n * @param {Number} curDepth level of subdirectories traversed to where symlink is\n * @returns {Promise<void>}\n */\nasync _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;\n\n  this.fsw._symlinkPaths.set(fullPath, true);\n  this.fsw._incrReadyCount();\n\n  try {\n    const linkTarget = await realpath(linkPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(linkTarget)) {\n      return this.fsw._emitReady();\n    }\n\n    this.fsw._incrReadyCount();\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, (path) => {\n      let aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== DOT_SLASH) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== DOT_SLASH) {\n        aliasedPath = sysPath.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  } catch(error) {\n    if (this.fsw._handleError(error)) {\n      return this.fsw._emitReady();\n    }\n  }\n}\n\n/**\n *\n * @param {Path} newPath\n * @param {fs.Stats} stats\n */\nemitAdd(newPath, stats, processPath, opts, forceAdd) {\n  const pp = processPath(newPath);\n  const isDir = stats.isDirectory();\n  const dirObj = this.fsw._getWatchedDir(sysPath.dirname(pp));\n  const base = sysPath.basename(pp);\n\n  // ensure empty dirs get tracked\n  if (isDir) this.fsw._getWatchedDir(pp);\n  if (dirObj.has(base)) return;\n  dirObj.add(base);\n\n  if (!opts.ignoreInitial || forceAdd === true) {\n    this.fsw._emit(isDir ? EV_ADD_DIR : EV_ADD, pp, stats);\n  }\n}\n\ninitWatch(realPath, path, wh, processPath) {\n  if (this.fsw.closed) return;\n  const closer = this._watchWithFsEvents(\n    wh.watchPath,\n    sysPath.resolve(realPath || wh.watchPath),\n    processPath,\n    wh.globFilter\n  );\n  this.fsw._addPathCloser(path, closer);\n}\n\n/**\n * Handle added path with fsevents\n * @param {String} path file/dir path or glob pattern\n * @param {Function|Boolean=} transform converts working path to what the user expects\n * @param {Boolean=} forceAdd ensure add is emitted\n * @param {Number=} priorDepth Level of subdirectories already traversed.\n * @returns {Promise<void>}\n */\nasync _addToFsEvents(path, transform, forceAdd, priorDepth) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const opts = this.fsw.options;\n  const processPath = typeof transform === FUNCTION_TYPE ? transform : IDENTITY_FN;\n\n  const wh = this.fsw._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      throw null;\n    }\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > opts.depth) return;\n\n      // scan the contents of the dir\n      this.fsw._readdirp(wh.watchPath, {\n        fileFilter: entry => wh.filterPath(entry),\n        directoryFilter: entry => wh.filterDir(entry),\n        ...Depth(opts.depth - (priorDepth || 0))\n      }).on(STR_DATA, (entry) => {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (this.fsw.closed) {\n          return;\n        }\n        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;\n\n        const joinedPath = sysPath.join(wh.watchPath, entry.path);\n        const {fullPath} = entry;\n\n        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          const curDepth = opts.depth === undefined ?\n            undefined : calcDepth(joinedPath, sysPath.resolve(wh.watchPath)) + 1;\n\n          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);\n        }\n      }).on(EV_ERROR, EMPTY_FN).on(STR_END, () => {\n        this.fsw._emitReady();\n      });\n    } else {\n      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);\n      this.fsw._emitReady();\n    }\n  } catch (error) {\n    if (!error || this.fsw._handleError(error)) {\n      // TODO: Strange thing: \"should not choke on an ignored watch path\" will be failed without 2 ready calls -__-\n      this.fsw._emitReady();\n      this.fsw._emitReady();\n    }\n  }\n\n  if (opts.persistent && forceAdd !== true) {\n    if (typeof transform === FUNCTION_TYPE) {\n      // realpath has already been resolved\n      this.initWatch(undefined, path, wh, processPath);\n    } else {\n      let realPath;\n      try {\n        realPath = await realpath(wh.watchPath);\n      } catch (e) {}\n      this.initWatch(realPath, path, wh, processPath);\n    }\n  }\n}\n\n}\n\nmodule.exports = FsEventsHandler;\nmodule.exports.canUse = canUse;\n", "'use strict';\n\nconst { EventEmitter } = require('events');\nconst fs = require('fs');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst readdirp = require('readdirp');\nconst anymatch = require('anymatch').default;\nconst globParent = require('glob-parent');\nconst isGlob = require('is-glob');\nconst braces = require('braces');\nconst normalizePath = require('normalize-path');\n\nconst NodeFsHandler = require('./lib/nodefs-handler');\nconst FsEventsHandler = require('./lib/fsevents-handler');\nconst {\n  EV_ALL,\n  EV_READY,\n  EV_ADD,\n  EV_CHANGE,\n  EV_UNLINK,\n  EV_ADD_DIR,\n  EV_UNLINK_DIR,\n  EV_RAW,\n  EV_ERROR,\n\n  STR_CLOSE,\n  STR_END,\n\n  BACK_SLASH_RE,\n  DOUBLE_SLASH_RE,\n  SLASH_OR_BACK_SLASH_RE,\n  DOT_RE,\n  REPLACER_RE,\n\n  SLASH,\n  SLASH_SLASH,\n  BRACE_START,\n  BANG,\n  ONE_DOT,\n  TWO_DOTS,\n  GLOBSTAR,\n  SLASH_GLOBSTAR,\n  ANYMATCH_OPTS,\n  STRING_TYPE,\n  FUNCTION_TYPE,\n  EMPTY_STR,\n  EMPTY_FN,\n\n  isWindows,\n  isMacos,\n  isIBMi\n} = require('./lib/constants');\n\nconst stat = promisify(fs.stat);\nconst readdir = promisify(fs.readdir);\n\n/**\n * @typedef {String} Path\n * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName\n * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType\n */\n\n/**\n *\n * @typedef {Object} WatchHelpers\n * @property {Boolean} followSymlinks\n * @property {'stat'|'lstat'} statMethod\n * @property {Path} path\n * @property {Path} watchPath\n * @property {Function} entryPath\n * @property {Boolean} hasGlob\n * @property {Object} globFilter\n * @property {Function} filterPath\n * @property {Function} filterDir\n */\n\nconst arrify = (value = []) => Array.isArray(value) ? value : [value];\nconst flatten = (list, result = []) => {\n  list.forEach(item => {\n    if (Array.isArray(item)) {\n      flatten(item, result);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nconst unifyPaths = (paths_) => {\n  /**\n   * @type {Array<String>}\n   */\n  const paths = flatten(arrify(paths_));\n  if (!paths.every(p => typeof p === STRING_TYPE)) {\n    throw new TypeError(`Non-string provided as watch path: ${paths}`);\n  }\n  return paths.map(normalizePathToUnix);\n};\n\n// If SLASH_SLASH occurs at the beginning of path, it is not replaced\n//     because \"//StoragePC/DrivePool/Movies\" is a valid network path\nconst toUnix = (string) => {\n  let str = string.replace(BACK_SLASH_RE, SLASH);\n  let prepend = false;\n  if (str.startsWith(SLASH_SLASH)) {\n    prepend = true;\n  }\n  while (str.match(DOUBLE_SLASH_RE)) {\n    str = str.replace(DOUBLE_SLASH_RE, SLASH);\n  }\n  if (prepend) {\n    str = SLASH + str;\n  }\n  return str;\n};\n\n// Our version of upath.normalize\n// TODO: this is not equal to path-normalize module - investigate why\nconst normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));\n\nconst normalizeIgnored = (cwd = EMPTY_STR) => (path) => {\n  if (typeof path !== STRING_TYPE) return path;\n  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));\n};\n\nconst getAbsolutePath = (path, cwd) => {\n  if (sysPath.isAbsolute(path)) {\n    return path;\n  }\n  if (path.startsWith(BANG)) {\n    return BANG + sysPath.join(cwd, path.slice(1));\n  }\n  return sysPath.join(cwd, path);\n};\n\nconst undef = (opts, key) => opts[key] === undefined;\n\n/**\n * Directory entry.\n * @property {Path} path\n * @property {Set<Path>} items\n */\nclass DirEntry {\n  /**\n   * @param {Path} dir\n   * @param {Function} removeWatcher\n   */\n  constructor(dir, removeWatcher) {\n    this.path = dir;\n    this._removeWatcher = removeWatcher;\n    /** @type {Set<Path>} */\n    this.items = new Set();\n  }\n\n  add(item) {\n    const {items} = this;\n    if (!items) return;\n    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);\n  }\n\n  async remove(item) {\n    const {items} = this;\n    if (!items) return;\n    items.delete(item);\n    if (items.size > 0) return;\n\n    const dir = this.path;\n    try {\n      await readdir(dir);\n    } catch (err) {\n      if (this._removeWatcher) {\n        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));\n      }\n    }\n  }\n\n  has(item) {\n    const {items} = this;\n    if (!items) return;\n    return items.has(item);\n  }\n\n  /**\n   * @returns {Array<String>}\n   */\n  getChildren() {\n    const {items} = this;\n    if (!items) return;\n    return [...items.values()];\n  }\n\n  dispose() {\n    this.items.clear();\n    delete this.path;\n    delete this._removeWatcher;\n    delete this.items;\n    Object.freeze(this);\n  }\n}\n\nconst STAT_METHOD_F = 'stat';\nconst STAT_METHOD_L = 'lstat';\nclass WatchHelper {\n  constructor(path, watchPath, follow, fsw) {\n    this.fsw = fsw;\n    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);\n    this.watchPath = watchPath;\n    this.fullWatchPath = sysPath.resolve(watchPath);\n    this.hasGlob = watchPath !== path;\n    /** @type {object|boolean} */\n    if (path === EMPTY_STR) this.hasGlob = false;\n    this.globSymlink = this.hasGlob && follow ? undefined : false;\n    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;\n    this.dirParts = this.getDirParts(path);\n    this.dirParts.forEach((parts) => {\n      if (parts.length > 1) parts.pop();\n    });\n    this.followSymlinks = follow;\n    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;\n  }\n\n  checkGlobSymlink(entry) {\n    // only need to resolve once\n    // first entry should always have entry.parentDir === EMPTY_STR\n    if (this.globSymlink === undefined) {\n      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?\n        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};\n    }\n\n    if (this.globSymlink) {\n      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);\n    }\n\n    return entry.fullPath;\n  }\n\n  entryPath(entry) {\n    return sysPath.join(this.watchPath,\n      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))\n    );\n  }\n\n  filterPath(entry) {\n    const {stats} = entry;\n    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);\n    const resolvedPath = this.entryPath(entry);\n    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?\n      this.globFilter(resolvedPath) : true;\n    return matchesGlob &&\n      this.fsw._isntIgnored(resolvedPath, stats) &&\n      this.fsw._hasReadPermissions(stats);\n  }\n\n  getDirParts(path) {\n    if (!this.hasGlob) return [];\n    const parts = [];\n    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];\n    expandedPath.forEach((path) => {\n      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));\n    });\n    return parts;\n  }\n\n  filterDir(entry) {\n    if (this.hasGlob) {\n      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));\n      let globstar = false;\n      this.unmatchedGlob = !this.dirParts.some((parts) => {\n        return parts.every((part, i) => {\n          if (part === GLOBSTAR) globstar = true;\n          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);\n        });\n      });\n    }\n    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);\n  }\n}\n\n/**\n * Watches files & directories for changes. Emitted events:\n * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`\n *\n *     new FSWatcher()\n *       .add(directories)\n *       .on('add', path => log('File', path, 'was added'))\n */\nclass FSWatcher extends EventEmitter {\n// Not indenting methods for history sake; for now.\nconstructor(_opts) {\n  super();\n\n  const opts = {};\n  if (_opts) Object.assign(opts, _opts); // for frozen objects\n\n  /** @type {Map<String, DirEntry>} */\n  this._watched = new Map();\n  /** @type {Map<String, Array>} */\n  this._closers = new Map();\n  /** @type {Set<String>} */\n  this._ignoredPaths = new Set();\n\n  /** @type {Map<ThrottleType, Map>} */\n  this._throttled = new Map();\n\n  /** @type {Map<Path, String|Boolean>} */\n  this._symlinkPaths = new Map();\n\n  this._streams = new Set();\n  this.closed = false;\n\n  // Set up default options.\n  if (undef(opts, 'persistent')) opts.persistent = true;\n  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;\n  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;\n  if (undef(opts, 'interval')) opts.interval = 100;\n  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;\n  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;\n  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;\n\n  // Enable fsevents on OS X when polling isn't explicitly enabled.\n  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;\n\n  // If we can't use fsevents, ensure the options reflect it's disabled.\n  const canUseFsEvents = FsEventsHandler.canUse();\n  if (!canUseFsEvents) opts.useFsEvents = false;\n\n  // Use polling on Mac if not using fsevents.\n  // Other platforms use non-polling fs_watch.\n  if (undef(opts, 'usePolling') && !opts.useFsEvents) {\n    opts.usePolling = isMacos;\n  }\n\n  // Always default to polling on IBM i because fs.watch() is not available on IBM i.\n  if(isIBMi) {\n    opts.usePolling = true;\n  }\n\n  // Global override (useful for end-developers that need to force polling for all\n  // instances of chokidar, regardless of usage/dependency depth)\n  const envPoll = process.env.CHOKIDAR_USEPOLLING;\n  if (envPoll !== undefined) {\n    const envLower = envPoll.toLowerCase();\n\n    if (envLower === 'false' || envLower === '0') {\n      opts.usePolling = false;\n    } else if (envLower === 'true' || envLower === '1') {\n      opts.usePolling = true;\n    } else {\n      opts.usePolling = !!envLower;\n    }\n  }\n  const envInterval = process.env.CHOKIDAR_INTERVAL;\n  if (envInterval) {\n    opts.interval = Number.parseInt(envInterval, 10);\n  }\n\n  // Editor atomic write normalization enabled by default with fs.watch\n  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;\n  if (opts.atomic) this._pendingUnlinks = new Map();\n\n  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;\n\n  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;\n  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};\n  const awf = opts.awaitWriteFinish;\n  if (awf) {\n    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;\n    if (!awf.pollInterval) awf.pollInterval = 100;\n    this._pendingWrites = new Map();\n  }\n  if (opts.ignored) opts.ignored = arrify(opts.ignored);\n\n  let readyCalls = 0;\n  this._emitReady = () => {\n    readyCalls++;\n    if (readyCalls >= this._readyCount) {\n      this._emitReady = EMPTY_FN;\n      this._readyEmitted = true;\n      // use process.nextTick to allow time for listener to be bound\n      process.nextTick(() => this.emit(EV_READY));\n    }\n  };\n  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);\n  this._readyEmitted = false;\n  this.options = opts;\n\n  // Initialize with proper watcher.\n  if (opts.useFsEvents) {\n    this._fsEventsHandler = new FsEventsHandler(this);\n  } else {\n    this._nodeFsHandler = new NodeFsHandler(this);\n  }\n\n  // You\u2019re frozen when your heart\u2019s not open.\n  Object.freeze(opts);\n}\n\n// Public methods\n\n/**\n * Adds paths to be watched on an existing FSWatcher instance\n * @param {Path|Array<Path>} paths_\n * @param {String=} _origAdd private; for handling non-existent paths to be watched\n * @param {Boolean=} _internal private; indicates a non-user add\n * @returns {FSWatcher} for chaining\n */\nadd(paths_, _origAdd, _internal) {\n  const {cwd, disableGlobbing} = this.options;\n  this.closed = false;\n  let paths = unifyPaths(paths_);\n  if (cwd) {\n    paths = paths.map((path) => {\n      const absPath = getAbsolutePath(path, cwd);\n\n      // Check `path` instead of `absPath` because the cwd portion can't be a glob\n      if (disableGlobbing || !isGlob(path)) {\n        return absPath;\n      }\n      return normalizePath(absPath);\n    });\n  }\n\n  // set aside negated glob strings\n  paths = paths.filter((path) => {\n    if (path.startsWith(BANG)) {\n      this._ignoredPaths.add(path.slice(1));\n      return false;\n    }\n\n    // if a path is being added that was previously ignored, stop ignoring it\n    this._ignoredPaths.delete(path);\n    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n\n    return true;\n  });\n\n  if (this.options.useFsEvents && this._fsEventsHandler) {\n    if (!this._readyCount) this._readyCount = paths.length;\n    if (this.options.persistent) this._readyCount *= 2;\n    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));\n  } else {\n    if (!this._readyCount) this._readyCount = 0;\n    this._readyCount += paths.length;\n    Promise.all(\n      paths.map(async path => {\n        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);\n        if (res) this._emitReady();\n        return res;\n      })\n    ).then(results => {\n      if (this.closed) return;\n      results.filter(item => item).forEach(item => {\n        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));\n      });\n    });\n  }\n\n  return this;\n}\n\n/**\n * Close watchers or start ignoring events from specified paths.\n * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs\n * @returns {FSWatcher} for chaining\n*/\nunwatch(paths_) {\n  if (this.closed) return this;\n  const paths = unifyPaths(paths_);\n  const {cwd} = this.options;\n\n  paths.forEach((path) => {\n    // convert to absolute path unless relative path already matches\n    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {\n      if (cwd) path = sysPath.join(cwd, path);\n      path = sysPath.resolve(path);\n    }\n\n    this._closePath(path);\n\n    this._ignoredPaths.add(path);\n    if (this._watched.has(path)) {\n      this._ignoredPaths.add(path + SLASH_GLOBSTAR);\n    }\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n  });\n\n  return this;\n}\n\n/**\n * Close watchers and remove all listeners from watched paths.\n * @returns {Promise<void>}.\n*/\nclose() {\n  if (this.closed) return this._closePromise;\n  this.closed = true;\n\n  // Memory management.\n  this.removeAllListeners();\n  const closers = [];\n  this._closers.forEach(closerList => closerList.forEach(closer => {\n    const promise = closer();\n    if (promise instanceof Promise) closers.push(promise);\n  }));\n  this._streams.forEach(stream => stream.destroy());\n  this._userIgnored = undefined;\n  this._readyCount = 0;\n  this._readyEmitted = false;\n  this._watched.forEach(dirent => dirent.dispose());\n  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {\n    this[`_${key}`].clear();\n  });\n\n  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();\n  return this._closePromise;\n}\n\n/**\n * Expose list of watched paths\n * @returns {Object} for chaining\n*/\ngetWatched() {\n  const watchList = {};\n  this._watched.forEach((entry, dir) => {\n    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;\n    watchList[key || ONE_DOT] = entry.getChildren().sort();\n  });\n  return watchList;\n}\n\nemitWithAll(event, args) {\n  this.emit(...args);\n  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);\n}\n\n// Common helpers\n// --------------\n\n/**\n * Normalize and emit events.\n * Calling _emit DOES NOT MEAN emit() would be called!\n * @param {EventName} event Type of event\n * @param {Path} path File or directory path\n * @param {*=} val1 arguments to be passed with event\n * @param {*=} val2\n * @param {*=} val3\n * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\nasync _emit(event, path, val1, val2, val3) {\n  if (this.closed) return;\n\n  const opts = this.options;\n  if (isWindows) path = sysPath.normalize(path);\n  if (opts.cwd) path = sysPath.relative(opts.cwd, path);\n  /** @type Array<any> */\n  const args = [event, path];\n  if (val3 !== undefined) args.push(val1, val2, val3);\n  else if (val2 !== undefined) args.push(val1, val2);\n  else if (val1 !== undefined) args.push(val1);\n\n  const awf = opts.awaitWriteFinish;\n  let pw;\n  if (awf && (pw = this._pendingWrites.get(path))) {\n    pw.lastChange = new Date();\n    return this;\n  }\n\n  if (opts.atomic) {\n    if (event === EV_UNLINK) {\n      this._pendingUnlinks.set(path, args);\n      setTimeout(() => {\n        this._pendingUnlinks.forEach((entry, path) => {\n          this.emit(...entry);\n          this.emit(EV_ALL, ...entry);\n          this._pendingUnlinks.delete(path);\n        });\n      }, typeof opts.atomic === 'number' ? opts.atomic : 100);\n      return this;\n    }\n    if (event === EV_ADD && this._pendingUnlinks.has(path)) {\n      event = args[0] = EV_CHANGE;\n      this._pendingUnlinks.delete(path);\n    }\n  }\n\n  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {\n    const awfEmit = (err, stats) => {\n      if (err) {\n        event = args[0] = EV_ERROR;\n        args[1] = err;\n        this.emitWithAll(event, args);\n      } else if (stats) {\n        // if stats doesn't exist the file must have been deleted\n        if (args.length > 2) {\n          args[2] = stats;\n        } else {\n          args.push(stats);\n        }\n        this.emitWithAll(event, args);\n      }\n    };\n\n    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);\n    return this;\n  }\n\n  if (event === EV_CHANGE) {\n    const isThrottled = !this._throttle(EV_CHANGE, path, 50);\n    if (isThrottled) return this;\n  }\n\n  if (opts.alwaysStat && val1 === undefined &&\n    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)\n  ) {\n    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;\n    let stats;\n    try {\n      stats = await stat(fullPath);\n    } catch (err) {}\n    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'\n    if (!stats || this.closed) return;\n    args.push(stats);\n  }\n  this.emitWithAll(event, args);\n\n  return this;\n}\n\n/**\n * Common handler for errors\n * @param {Error} error\n * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\n_handleError(error) {\n  const code = error && error.code;\n  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&\n    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))\n  ) {\n    this.emit(EV_ERROR, error);\n  }\n  return error || this.closed;\n}\n\n/**\n * Helper utility for throttling\n * @param {ThrottleType} actionType type being throttled\n * @param {Path} path being acted upon\n * @param {Number} timeout duration of time to suppress duplicate actions\n * @returns {Object|false} tracking object or false if action should be suppressed\n */\n_throttle(actionType, path, timeout) {\n  if (!this._throttled.has(actionType)) {\n    this._throttled.set(actionType, new Map());\n  }\n\n  /** @type {Map<Path, Object>} */\n  const action = this._throttled.get(actionType);\n  /** @type {Object} */\n  const actionPath = action.get(path);\n\n  if (actionPath) {\n    actionPath.count++;\n    return false;\n  }\n\n  let timeoutObject;\n  const clear = () => {\n    const item = action.get(path);\n    const count = item ? item.count : 0;\n    action.delete(path);\n    clearTimeout(timeoutObject);\n    if (item) clearTimeout(item.timeoutObject);\n    return count;\n  };\n  timeoutObject = setTimeout(clear, timeout);\n  const thr = {timeoutObject, clear, count: 0};\n  action.set(path, thr);\n  return thr;\n}\n\n_incrReadyCount() {\n  return this._readyCount++;\n}\n\n/**\n * Awaits write operation to finish.\n * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.\n * @param {Path} path being acted upon\n * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished\n * @param {EventName} event\n * @param {Function} awfEmit Callback to be called when ready for event to be emitted.\n */\n_awaitWriteFinish(path, threshold, event, awfEmit) {\n  let timeoutHandler;\n\n  let fullPath = path;\n  if (this.options.cwd && !sysPath.isAbsolute(path)) {\n    fullPath = sysPath.join(this.options.cwd, path);\n  }\n\n  const now = new Date();\n\n  const awaitWriteFinish = (prevStat) => {\n    fs.stat(fullPath, (err, curStat) => {\n      if (err || !this._pendingWrites.has(path)) {\n        if (err && err.code !== 'ENOENT') awfEmit(err);\n        return;\n      }\n\n      const now = Number(new Date());\n\n      if (prevStat && curStat.size !== prevStat.size) {\n        this._pendingWrites.get(path).lastChange = now;\n      }\n      const pw = this._pendingWrites.get(path);\n      const df = now - pw.lastChange;\n\n      if (df >= threshold) {\n        this._pendingWrites.delete(path);\n        awfEmit(undefined, curStat);\n      } else {\n        timeoutHandler = setTimeout(\n          awaitWriteFinish,\n          this.options.awaitWriteFinish.pollInterval,\n          curStat\n        );\n      }\n    });\n  };\n\n  if (!this._pendingWrites.has(path)) {\n    this._pendingWrites.set(path, {\n      lastChange: now,\n      cancelWait: () => {\n        this._pendingWrites.delete(path);\n        clearTimeout(timeoutHandler);\n        return event;\n      }\n    });\n    timeoutHandler = setTimeout(\n      awaitWriteFinish,\n      this.options.awaitWriteFinish.pollInterval\n    );\n  }\n}\n\n_getGlobIgnored() {\n  return [...this._ignoredPaths.values()];\n}\n\n/**\n * Determines whether user has asked to ignore this path.\n * @param {Path} path filepath or dir\n * @param {fs.Stats=} stats result of fs.stat\n * @returns {Boolean}\n */\n_isIgnored(path, stats) {\n  if (this.options.atomic && DOT_RE.test(path)) return true;\n  if (!this._userIgnored) {\n    const {cwd} = this.options;\n    const ign = this.options.ignored;\n\n    const ignored = ign && ign.map(normalizeIgnored(cwd));\n    const paths = arrify(ignored)\n      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))\n      .map((path) => path + SLASH_GLOBSTAR);\n    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);\n    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);\n  }\n\n  return this._userIgnored([path, stats]);\n}\n\n_isntIgnored(path, stat) {\n  return !this._isIgnored(path, stat);\n}\n\n/**\n * Provides a set of common helpers and properties relating to symlink and glob handling.\n * @param {Path} path file, directory, or glob pattern being watched\n * @param {Number=} depth at any depth > 0, this isn't a glob\n * @returns {WatchHelper} object containing helpers for this path\n */\n_getWatchHelpers(path, depth) {\n  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);\n  const follow = this.options.followSymlinks;\n\n  return new WatchHelper(path, watchPath, follow, this);\n}\n\n// Directory helpers\n// -----------------\n\n/**\n * Provides directory tracking objects\n * @param {String} directory path of the directory\n * @returns {DirEntry} the directory's tracking object\n */\n_getWatchedDir(directory) {\n  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);\n  const dir = sysPath.resolve(directory);\n  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));\n  return this._watched.get(dir);\n}\n\n// File helpers\n// ------------\n\n/**\n * Check for read permissions.\n * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405\n * @param {fs.Stats} stats - object, result of fs_stat\n * @returns {Boolean} indicates whether the file can be read\n*/\n_hasReadPermissions(stats) {\n  if (this.options.ignorePermissionErrors) return true;\n\n  // stats.mode may be bigint\n  const md = stats && Number.parseInt(stats.mode, 10);\n  const st = md & 0o777;\n  const it = Number.parseInt(st.toString(8)[0], 10);\n  return Boolean(4 & it);\n}\n\n/**\n * Handles emitting unlink events for\n * files and directories, and via recursion, for\n * files and directories within directories that are unlinked\n * @param {String} directory within which the following item is located\n * @param {String} item      base path of item/directory\n * @returns {void}\n*/\n_remove(directory, item, isDirectory) {\n  // if what is being deleted is a directory, get that directory's paths\n  // for recursive deleting and cleaning of watched object\n  // if it is not a directory, nestedDirectoryChildren will be empty array\n  const path = sysPath.join(directory, item);\n  const fullPath = sysPath.resolve(path);\n  isDirectory = isDirectory != null\n    ? isDirectory\n    : this._watched.has(path) || this._watched.has(fullPath);\n\n  // prevent duplicate handling in case of arriving here nearly simultaneously\n  // via multiple paths (such as _handleFile and _handleDir)\n  if (!this._throttle('remove', path, 100)) return;\n\n  // if the only watched file is removed, watch for its return\n  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {\n    this.add(directory, item, true);\n  }\n\n  // This will create a new entry in the watched object in either case\n  // so we got to do the directory check beforehand\n  const wp = this._getWatchedDir(path);\n  const nestedDirectoryChildren = wp.getChildren();\n\n  // Recursively remove children directories / files.\n  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));\n\n  // Check if item was on the watched list and remove it\n  const parent = this._getWatchedDir(directory);\n  const wasTracked = parent.has(item);\n  parent.remove(item);\n\n  // Fixes issue #1042 -> Relative paths were detected and added as symlinks\n  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),\n  // but never removed from the map in case the path was deleted.\n  // This leads to an incorrect state if the path was recreated:\n  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553\n  if (this._symlinkPaths.has(fullPath)) {\n    this._symlinkPaths.delete(fullPath);\n  }\n\n  // If we wait for this file to be fully written, cancel the wait.\n  let relPath = path;\n  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);\n  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {\n    const event = this._pendingWrites.get(relPath).cancelWait();\n    if (event === EV_ADD) return;\n  }\n\n  // The Entry will either be a directory that just got removed\n  // or a bogus entry to a file, in either case we have to remove it\n  this._watched.delete(path);\n  this._watched.delete(fullPath);\n  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;\n  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);\n\n  // Avoid conflicts if we later create another file with the same name\n  if (!this.options.useFsEvents) {\n    this._closePath(path);\n  }\n}\n\n/**\n * Closes all watchers for a path\n * @param {Path} path\n */\n_closePath(path) {\n  this._closeFile(path)\n  const dir = sysPath.dirname(path);\n  this._getWatchedDir(dir).remove(sysPath.basename(path));\n}\n\n/**\n * Closes only file-specific watchers\n * @param {Path} path\n */\n_closeFile(path) {\n  const closers = this._closers.get(path);\n  if (!closers) return;\n  closers.forEach(closer => closer());\n  this._closers.delete(path);\n}\n\n/**\n *\n * @param {Path} path\n * @param {Function} closer\n */\n_addPathCloser(path, closer) {\n  if (!closer) return;\n  let list = this._closers.get(path);\n  if (!list) {\n    list = [];\n    this._closers.set(path, list);\n  }\n  list.push(closer);\n}\n\n_readdirp(root, opts) {\n  if (this.closed) return;\n  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};\n  let stream = readdirp(root, options);\n  this._streams.add(stream);\n  stream.once(STR_CLOSE, () => {\n    stream = undefined;\n  });\n  stream.once(STR_END, () => {\n    if (stream) {\n      this._streams.delete(stream);\n      stream = undefined;\n    }\n  });\n  return stream;\n}\n\n}\n\n// Export FSWatcher class\nexports.FSWatcher = FSWatcher;\n\n/**\n * Instantiates watcher with paths to be tracked.\n * @param {String|Array<String>} paths file/directory paths and/or globs\n * @param {Object=} options chokidar opts\n * @returns an instance of FSWatcher for chaining.\n */\nconst watch = (paths, options) => {\n  const watcher = new FSWatcher(options);\n  watcher.add(paths);\n  return watcher;\n};\n\nexports.watch = watch;\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));", "/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n * @class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   * @constructor\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n", "const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n", "const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter(cmd => !cmd._hidden);\n    if (cmd._hasImplicitHelpCommand()) {\n      // Create a command matching the implicit help command.\n      const [, helpName, helpArgs] = cmd._helpCommandnameAndArgs.match(/([^ ]+) *(.*)/);\n      const helpCommand = cmd.createCommand(helpName)\n        .helpOption(false);\n      helpCommand.description(cmd._helpCommandDescription);\n      if (helpArgs) helpCommand.arguments(helpArgs);\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns number\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short ? option.short.replace(/^-/, '') : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Implicit help\n    const showShortHelpFlag = cmd._hasHelpOption && cmd._helpShortFlag && !cmd._findOption(cmd._helpShortFlag);\n    const showLongHelpFlag = cmd._hasHelpOption && !cmd._findOption(cmd._helpLongFlag);\n    if (showShortHelpFlag || showLongHelpFlag) {\n      let helpOption;\n      if (!showShortHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpLongFlag, cmd._helpDescription);\n      } else if (!showLongHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpShortFlag, cmd._helpDescription);\n      } else {\n        helpOption = cmd.createOption(cmd._helpFlags, cmd._helpDescription);\n      }\n      visibleOptions.push(helpOption);\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      const visibleOptions = ancestorCmd.options.filter((option) => !option.hidden);\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach(argument => {\n        argument.description = argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find(argument => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments.map(arg => humanReadableArgName(arg)).join(' ');\n    return cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '');\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(max, helper.subcommandTerm(command).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(max, helper.argumentTerm(argument).length);\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault = option.required || option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(`default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`);\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(`default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`);\n    }\n    if (extraInfo.length > 0) {\n      const extraDescripton = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescripton}`;\n      }\n      return extraDescripton;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth || 80;\n    const itemIndentWidth = 2;\n    const itemSeparatorWidth = 2; // between term and description\n    function formatItem(term, description) {\n      if (description) {\n        const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;\n        return helper.wrap(fullText, helpWidth - itemIndentWidth, termWidth + itemSeparatorWidth);\n      }\n      return term;\n    }\n    function formatList(textArray) {\n      return textArray.join('\\n').replace(/^/gm, ' '.repeat(itemIndentWidth));\n    }\n\n    // Usage\n    let output = [`Usage: ${helper.commandUsage(cmd)}`, ''];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([helper.wrap(commandDescription, helpWidth, 0), '']);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return formatItem(helper.argumentTerm(argument), helper.argumentDescription(argument));\n    });\n    if (argumentList.length > 0) {\n      output = output.concat(['Arguments:', formatList(argumentList), '']);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n    });\n    if (optionList.length > 0) {\n      output = output.concat(['Options:', formatList(optionList), '']);\n    }\n\n    if (this.showGlobalOptions) {\n      const globalOptionList = helper.visibleGlobalOptions(cmd).map((option) => {\n        return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n      });\n      if (globalOptionList.length > 0) {\n        output = output.concat(['Global Options:', formatList(globalOptionList), '']);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return formatItem(helper.subcommandTerm(cmd), helper.subcommandDescription(cmd));\n    });\n    if (commandList.length > 0) {\n      output = output.concat(['Commands:', formatList(commandList), '']);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper)\n    );\n  }\n\n  /**\n   * Wrap the given string to width characters per line, with lines after the first indented.\n   * Do not wrap if insufficient room for wrapping (minColumnWidth), or string is manually formatted.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @param {number} indent\n   * @param {number} [minColumnWidth=40]\n   * @return {string}\n   *\n   */\n\n  wrap(str, width, indent, minColumnWidth = 40) {\n    // Full \\s characters, minus the linefeeds.\n    const indents = ' \\\\f\\\\t\\\\v\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff';\n    // Detect manually wrapped and indented strings by searching for line break followed by spaces.\n    const manualIndent = new RegExp(`[\\\\n][${indents}]+`);\n    if (str.match(manualIndent)) return str;\n    // Do not wrap if not enough room for a wrapped column of text (as could end up with a word per line).\n    const columnWidth = width - indent;\n    if (columnWidth < minColumnWidth) return str;\n\n    const leadingStr = str.slice(0, indent);\n    const columnText = str.slice(indent).replace('\\r\\n', '\\n');\n    const indentString = ' '.repeat(indent);\n    const zeroWidthSpace = '\\u200B';\n    const breaks = `\\\\s${zeroWidthSpace}`;\n    // Match line end (so empty lines don't collapse),\n    // or as much text as will fit in column, or excess text up to first break.\n    const regex = new RegExp(`\\n|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`, 'g');\n    const lines = columnText.match(regex) || [];\n    return leadingStr + lines.map((line, i) => {\n      if (line === '\\n') return ''; // preserve empty lines\n      return ((i > 0) ? indentString : '') + line.trimEnd();\n    }).join('\\n');\n  }\n}\n\nexports.Help = Help;\n", "const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag;\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {string | string[]} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {Object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as a object attribute key.\n   *\n   * @return {string}\n   * @api private\n   */\n\n  attributeName() {\n    return camelcase(this.name().replace(/^no-/, ''));\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @api private\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @api private\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach(option => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = (preset !== undefined) ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @api private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @api private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // Use original very loose parsing to maintain backwards compatibility for now,\n  // which allowed for example unintended `-sw, --short-word` [sic].\n  const flagParts = flags.split(/[ |,]+/);\n  if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1])) shortFlag = flagParts.shift();\n  longFlag = flagParts.shift();\n  // Add support for lone short flag without significantly changing parsing!\n  if (!shortFlag && /^-[^-]$/.test(longFlag)) {\n    shortFlag = longFlag;\n    longFlag = undefined;\n  }\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.splitOptionFlags = splitOptionFlags;\nexports.DualOptions = DualOptions;\n", "const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau\u2013Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance) return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map(candidate => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map(candidate => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n", "const EventEmitter = require('events').EventEmitter;\nconst childProcess = require('child_process');\nconst path = require('path');\nconst fs = require('fs');\nconst process = require('process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help } = require('./help.js');\nconst { Option, splitOptionFlags, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = true;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {boolean | string} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n\n    // see .configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      getOutHelpWidth: () => process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () => process.stderr.isTTY ? process.stderr.columns : undefined,\n      outputError: (str, write) => write(str)\n    };\n\n    this._hidden = false;\n    this._hasHelpOption = true;\n    this._helpFlags = '-h, --help';\n    this._helpDescription = 'display help for command';\n    this._helpShortFlag = '-h';\n    this._helpLongFlag = '--help';\n    this._addImplicitHelpCommand = undefined; // Deliberately undefined, not decided whether true or false\n    this._helpCommandName = 'help';\n    this._helpCommandnameAndArgs = 'help [command]';\n    this._helpCommandDescription = 'display help for command';\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._hasHelpOption = sourceCommand._hasHelpOption;\n    this._helpFlags = sourceCommand._helpFlags;\n    this._helpDescription = sourceCommand._helpDescription;\n    this._helpShortFlag = sourceCommand._helpShortFlag;\n    this._helpLongFlag = sourceCommand._helpLongFlag;\n    this._helpCommandName = sourceCommand._helpCommandName;\n    this._helpCommandnameAndArgs = sourceCommand._helpCommandnameAndArgs;\n    this._helpCommandDescription = sourceCommand._helpCommandDescription;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue = sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @api private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {Object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this.commands.push(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // functions to change where being written, stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // matching functions to specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // functions based on what is being written out\n   *     outputError(str, write) // used for displaying errors, and not used for displaying help\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {boolean|string} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {Object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this.commands.push(cmd);\n    cmd.parent = this;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {Function|*} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names.trim().split(/ +/).forEach((detail) => {\n      this.argument(detail);\n    });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(`only the last argument can be variadic '${previousArgument.name()}'`);\n    }\n    if (argument.required && argument.defaultValue !== undefined && argument.parseArg === undefined) {\n      throw new Error(`a default value for a required argument is never used: '${argument.name()}'`);\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Override default decision whether to add implicit help command.\n   *\n   *    addHelpCommand() // force on\n   *    addHelpCommand(false); // force off\n   *    addHelpCommand('help [cmd]', 'display help for [cmd]'); // force on with custom details\n   *\n   * @return {Command} `this` command for chaining\n   */\n\n  addHelpCommand(enableOrNameAndArgs, description) {\n    if (enableOrNameAndArgs === false) {\n      this._addImplicitHelpCommand = false;\n    } else {\n      this._addImplicitHelpCommand = true;\n      if (typeof enableOrNameAndArgs === 'string') {\n        this._helpCommandName = enableOrNameAndArgs.split(' ')[0];\n        this._helpCommandnameAndArgs = enableOrNameAndArgs;\n      }\n      this._helpCommandDescription = description || this._helpCommandDescription;\n    }\n    return this;\n  }\n\n  /**\n   * @return {boolean}\n   * @api private\n   */\n\n  _hasImplicitHelpCommand() {\n    if (this._addImplicitHelpCommand === undefined) {\n      return this.commands.length && !this._actionHandler && !this._findCommand('help');\n    }\n    return this._addImplicitHelpCommand;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @api private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {Option | Argument} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @api private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(name, option.defaultValue === undefined ? true : option.defaultValue, 'default');\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // register the option\n    this.options.push(option);\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @api private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error('To add an Option object use addOption() instead of option() or requiredOption()');\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('-p, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {Function|*} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n  * Add a required option which must have a value after parsing. This usually means\n  * the option must be specified on the command line. (Otherwise the same as .option().)\n  *\n  * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n  *\n  * @param {string} flags\n  * @param {string} [description]\n  * @param {Function|*} [parseArg] - custom option processing function or default value\n  * @param {*} [defaultValue]\n  * @return {Command} `this` command for chaining\n  */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx({ mandatory: true }, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {Boolean} [combine=true] - if `true` or omitted, an optional value can be specified directly after the flag.\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {Boolean} [allowUnknown=true] - if `true` or omitted, no error will be thrown\n   * for unknown options.\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {Boolean} [allowExcess=true] - if `true` or omitted, no error will be thrown\n   * for excess arguments.\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {Boolean} [positional=true]\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {Boolean} [passThrough=true]\n   * for unknown options.\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    if (!!this.parent && passThrough && !this.parent._enablePositionalOptions) {\n      throw new Error('passThroughOptions can not be used without turning on enablePositionalOptions for parent command(s)');\n    }\n    return this;\n  }\n\n  /**\n    * Whether to store option values as properties on command object,\n    * or store separately (specify false). In both cases the option values can be accessed using .opts().\n    *\n    * @param {boolean} [storeAsProperties=true]\n    * @return {Command} `this` command for chaining\n    */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    // if (Object.keys(this._optionValues).length) {\n    //   throw new Error('call .storeOptionsAsProperties() before setting option values');\n    // }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {Object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {Object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n    * Store option value and where the value came from.\n    *\n    * @param {string} key\n    * @param {Object} value\n    * @param {string} source - expected values are default/config/env/cli/implied\n    * @return {Command} `this` command for chaining\n    */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n    * Get source of option value.\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n    * Get source of option value. See also .optsWithGlobals().\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @api private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // Default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n      // @ts-ignore: unknown property\n      if (process.versions && process.versions.electron) {\n        parseOptions.from = 'electron';\n      }\n    }\n    this.rawArgs = argv.slice();\n\n    // make it a little easier for callers by supporting various argv conventions\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      default:\n        throw new Error(`unexpected parse option { from: '${parseOptions.from}' }`);\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath) this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * program.parse(process.argv);\n   * program.parse(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {Object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async. Returns a Promise.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * await program.parseAsync(process.argv);\n   * await program.parseAsync(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {Object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @api private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find(ext => fs.existsSync(`${localBin}${ext}`));\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile = subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch (err) {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(path.dirname(resolvedScriptPath), executableDir);\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(this._scriptPath, path.extname(this._scriptPath));\n        if (legacyName !== this._name) {\n          localFile = findFile(executableDir, `${legacyName}-${subcommand._name}`);\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) { // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        // @ts-ignore\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    // Suppressing the exit if exitCallback defined is a bit messy and of limited use, but does allow process to stay running!\n    const exitCallback = this._exitCallback;\n    if (!exitCallback) {\n      proc.on('close', process.exit.bind(process));\n    } else {\n      proc.on('close', () => {\n        exitCallback(new CommanderError(process.exitCode || 0, 'commander.executeSubCommandAsync', '(close)'));\n      });\n    }\n    proc.on('error', (err) => {\n      // @ts-ignore\n      if (err.code === 'ENOENT') {\n        const executableDirMessage = executableDir\n          ? `searched for local subcommand relative to directory '${executableDir}'`\n          : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n        const executableMissing = `'${executableFile}' does not exist\n - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n        throw new Error(executableMissing);\n      // @ts-ignore\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(1, 'commander.executeSubCommandAsync', '(error)');\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @api private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(promiseChain, subCommand, 'preSubcommand');\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @api private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(subcommandName, [], [\n      this._helpLongFlag || this._helpShortFlag\n    ]);\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @api private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (this.registeredArguments.length > 0 && this.registeredArguments[this.registeredArguments.length - 1].variadic) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @api private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(argument, value, previous, invalidValueMessage);\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {Promise|undefined} promise\n   * @param {Function} fn\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter(cmd => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach(hookedCommand => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @api private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (this._hasImplicitHelpCommand() && operands[0] === this._helpCommandName) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      outputHelpIfRequested(this, unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(this._defaultCommandName, operands, unknown);\n    }\n    if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    outputHelpIfRequested(this, parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () => this._actionHandler(this.processedArgs));\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) { // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @api private\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(cmd => cmd._name === name || cmd._aliases.includes(name));\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @api private\n   */\n\n  _findOption(arg) {\n    return this.options.find(option => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (anOption.mandatory && (cmd.getOptionValue(anOption.attributeName()) === undefined)) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @api private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter(\n      (option) => {\n        const optionKey = option.attributeName();\n        if (this.getOptionValue(optionKey) === undefined) {\n          return false;\n        }\n        return this.getOptionValueSource(optionKey) !== 'default';\n      }\n    );\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName())\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {String[]} argv\n   * @return {{operands: String[], unknown: String[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else { // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (option.required || (option.optional && this._combineFlagAndOptionalValue)) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if ((this._enablePositionalOptions || this._passThroughOptions) && operands.length === 0 && unknown.length === 0) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (arg === this._helpCommandName && this._hasImplicitHelpCommand()) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] = key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {}\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {Object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(`${message}\\n`, this._outputConfiguration.writeErr);\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @api private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (this.getOptionValue(optionKey) === undefined || ['default', 'config', 'env'].includes(this.getOptionValueSource(optionKey))) {\n          if (option.required || option.optional) { // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else { // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @api private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return this.getOptionValue(optionKey) !== undefined && !['default', 'implied'].includes(this.getOptionValueSource(optionKey));\n    };\n    this.options\n      .filter(option => (option.implied !== undefined) &&\n        hasCustomOptionValue(option.attributeName()) &&\n        dualHelper.valueFromOption(this.getOptionValue(option.attributeName()), option))\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter(impliedKey => !hasCustomOptionValue(impliedKey))\n          .forEach(impliedKey => {\n            this.setOptionValueWithSource(impliedKey, option.implied[impliedKey], 'implied');\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @api private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @api private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(target => target.negate && optionKey === target.attributeName());\n      const positiveOption = this.options.find(target => !target.negate && optionKey === target.attributeName());\n      if (negativeOption && (\n        (negativeOption.presetArg === undefined && optionValue === false) ||\n        (negativeOption.presetArg !== undefined && optionValue === negativeOption.presetArg)\n      )) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @api private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      let command = this;\n      do {\n        const moreFlags = command.createHelp().visibleOptions(command)\n          .filter(option => option.long)\n          .map(option => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @api private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = (expected === 1) ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @api private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp().visibleCommands(this).forEach((command) => {\n        candidateNames.push(command.name());\n        // just visible alias\n        if (command.alias()) candidateNames.push(command.alias());\n      });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {this | string | undefined} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName(); // [sic] not defined in constructor, partly legacy, partly only needed at root\n    this.options.push(versionOption);\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {Object} [argsDescription]\n   * @return {string|Command}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined) return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {string|Command}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    let command = this;\n    if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {string[]|Command}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {String|Command}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return [].concat(\n        (this.options.length || this._hasHelpOption ? '[options]' : []),\n        (this.commands.length ? '[command]' : []),\n        (this.registeredArguments.length ? args : [])\n      ).join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {string|null|Command}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    if (helper.helpWidth === undefined) {\n      helper.helpWidth = (contextOptions && contextOptions.error) ? this._outputConfiguration.getErrHelpWidth() : this._outputConfiguration.getOutHelpWidth();\n    }\n    return helper.formatHelp(this, helper);\n  }\n\n  /**\n   * @api private\n   */\n\n  _getHelpContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const context = { error: !!contextOptions.error };\n    let write;\n    if (context.error) {\n      write = (arg) => this._outputConfiguration.writeErr(arg);\n    } else {\n      write = (arg) => this._outputConfiguration.writeOut(arg);\n    }\n    context.write = contextOptions.write || write;\n    context.command = this;\n    return context;\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n    const context = this._getHelpContext(contextOptions);\n\n    this._getCommandAndAncestors().reverse().forEach(command => command.emit('beforeAllHelp', context));\n    this.emit('beforeHelp', context);\n\n    let helpInformation = this.helpInformation(context);\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (typeof helpInformation !== 'string' && !Buffer.isBuffer(helpInformation)) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    context.write(helpInformation);\n\n    if (this._helpLongFlag) {\n      this.emit(this._helpLongFlag); // deprecated\n    }\n    this.emit('afterHelp', context);\n    this._getCommandAndAncestors().forEach(command => command.emit('afterAllHelp', context));\n  }\n\n  /**\n   * You can pass in flags and a description to override the help\n   * flags and help description for your command. Pass in false to\n   * disable the built-in help option.\n   *\n   * @param {string | boolean} [flags]\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    if (typeof flags === 'boolean') {\n      this._hasHelpOption = flags;\n      return this;\n    }\n    this._helpFlags = flags || this._helpFlags;\n    this._helpDescription = description || this._helpDescription;\n\n    const helpFlags = splitOptionFlags(this._helpFlags);\n    this._helpShortFlag = helpFlags.shortFlag;\n    this._helpLongFlag = helpFlags.longFlag;\n\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = process.exitCode || 0;\n    if (exitCode === 0 && contextOptions && typeof contextOptions !== 'function' && contextOptions.error) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {string | Function} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n}\n\n/**\n * Output help information if help flags specified\n *\n * @param {Command} cmd - command to output help for\n * @param {Array} args - array of options to search for help flags\n * @api private\n */\n\nfunction outputHelpIfRequested(cmd, args) {\n  const helpOption = cmd._hasHelpOption && args.find(arg => arg === cmd._helpLongFlag || arg === cmd._helpShortFlag);\n  if (helpOption) {\n    cmd.outputHelp();\n    // (Do not have all displayed text available so only passing placeholder.)\n    cmd._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\nexports.Command = Command;\n", "const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\nexports.program = exports; // More explicit access to global command.\n// createArgument, createCommand, and createOption are implicitly available as they are methods on program.\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n", "import * as fs from 'fs';\nimport * as log from '@vladmandic/pilogger';\nimport * as compile from './compile';\nimport * as watch from './watch';\nimport * as serve from './serve';\nimport * as lint from './lint';\nimport * as typedoc from './typedoc';\nimport * as typings from './typings';\nimport * as helpers from './helpers';\nimport { defaults } from './defaults';\nimport * as clean from './clean';\nimport * as changelog from './changelog';\nimport * as cli from './cli';\nimport type { Config, Targets, Steps } from './interfaces';\nimport * as app from '../package.json';\n\nexport { Config, Targets, Steps } from './interfaces';\n\n/*\nprocess.on('SIGINT', () => {\n  log.info('Build exiting...');\n  process.exit(0);\n});\n\nprocess.on('unhandledRejection', (err) => {\n  if (!err) log.fatal('Rejection', 'no error message');\n  else log.fatal('Rejection', err['message'] || err);\n  process.exit(1);\n});\n\nprocess.on('uncaughtException', (err) => {\n  log.fatal('Exception', err?.message || err || 'no error message');\n  process.exit(1);\n});\n*/\n\n/**\n * Class Build\n */\nexport class Build {\n  /**\n   * Command line params when used in Cli mode\n   */\n  params = { debug: false, config: '', generate: false, profile: '' };\n\n  /**\n   * Contains version strings of all build tools\n   * @property `build` semver version string\n   * @property `esbuild` semver version string\n   * @property `typescript` semver version string\n   * @property `typedoc` semver version string\n   * @property `eslint` semver version string\n   */\n  toolchain = { build: 'version', esbuild: 'version', typescript: 'version', typedoc: 'version', eslint: 'version' };\n\n  /**\n   * Contains detected available configuration\n   * @property `config` name of the parsed config file\n   * @property `tsconfig` is `tsconfig.json` present?\n   * @property `eslintrc` is `eslintrc.json` present?\n   * @property `git` is this a valid git repository?\n   */\n  environment = { config: <string | undefined>undefined, package: <string | undefined>undefined, tsconfig: <boolean>false, eslintrc: <boolean>false, git: <boolean>false };\n\n  /**\n   * Contains detected application information\n   * @property `name` application name\n   * @property `version` application version\n   */\n  application = { name: '', version: '' };\n\n  /**\n   * Contains parsed application package.json file\n   */\n  package: Record<string, unknown>;\n\n  /**\n   * Contains currently active build configuration\n   *\n   * Configuration is combined from:\n   * - Build defaults\n   * - Parsing optional `build.json` or user specified config file\n   * - Parsing optional `tsconfig.json`\n   * - Parsing optional `eslintrc.json`\n   * - Parsing optional `typedoc.json`\n   *\n   * @property `log` control build logging\n   * @property `clean` control location cleaning at the beggining of build process\n   * @property `lint` configuration for project linting\n   * @property `changelog` configuration for changelog generation\n   * @property `build` configuration for project build step and all individual targets which includes: **build**, **bundle**, **typedoc**, **typings**\n   * @property `serve` configuration for http/https web server used in dev build profile\n   * @property `watch` configuration for file/folder watcher used in dev build profile\n   * @property `typescript` override compiler configuration for typescript\n   */\n  // @ts-ignore ignore string enum mismatches when reading from json file\n  config: Config = { ...defaults };\n\n  /**\n   * Initializes Build class with all parsed configurations\n   *\n   * @param config {@link Config} Optional configuration options overrides\n   */\n  constructor(config?: Partial<Config>) {\n    this.config = this.updateConfig(helpers.merge(defaults), config);\n    // reset defaults to emtpy project\n    this.config.profiles = {};\n    this.config.clean.locations = [];\n    this.config.lint.locations = [];\n    this.config.watch.locations = [];\n    this.config.build.targets = [];\n    const tsconfig = fs.existsSync('tsconfig.json');\n    const eslintrc = fs.existsSync('.eslintrc.json');\n    const git = fs.existsSync('.git') && fs.existsSync('.git/config');\n    this.package = this.packageJson();\n    this.toolchain = { build: app.version, esbuild: compile.version, typescript: typings.version, typedoc: typedoc.version, eslint: lint.version };\n    this.environment = { ...this.environment, tsconfig, eslintrc, git };\n    this.application = { name: this.package['name'] as string, version: this.package['version'] as string };\n    log.configure({ inspect: { breakLength: 265 } });\n    // log.ringLength = 1000; // increase log ring buffer\n    log.options.console = this.config.log.console;\n    if (this.config.log.enabled && this.config.log.output && this.config.log.output !== '') log.logFile(this.config.log.output);\n  }\n\n  updateConfig = (config, options = {}) => {\n    // set defaults\n    let local = helpers.merge(config);\n    if (fs.existsSync('.build.json')) { // add options from parsed build.json\n      const data = fs.readFileSync('.build.json');\n      if (local.build?.targets) local.build.targets = [];\n      local = helpers.merge(local, JSON.parse(data.toString()));\n      this.environment.config = '.build.json';\n    }\n    if (fs.existsSync('build.json')) { // add options from parsed build.json\n      const data = fs.readFileSync('build.json');\n      if (local.build?.targets) local.build.targets = [];\n      local = helpers.merge(local, JSON.parse(data.toString()));\n      this.environment.config = 'build.json';\n    }\n    if (Object.keys(options).length) local = helpers.merge(local, options);\n    for (const profile of Object.keys(local.profiles)) local.profiles[profile] = [...new Set([...Object.values(local.profiles[profile])])]; // deduplicate profile steps\n    return local;\n  };\n\n  packageJson = () => {\n    if (!fs.existsSync('package.json')) {\n      log.error('Package definition not found:', 'package.json');\n      process.exit(1);\n    }\n    const data = fs.readFileSync('package.json');\n    const json = JSON.parse(data.toString());\n    this.environment.package = 'package.json';\n    return json;\n  };\n\n  /**\n   * Runs build pipeline for specified profile\n   *\n   * @param profile Profile type, e.g. \"production\" or \"development\"\n   * @param config {@link Config} Optional configuration options overrides\n   * @returns Object containing all messages\n   */\n  async run(profile: string, config: Partial<Config> = {}) {\n    this.config = this.updateConfig(this.config, config);\n    helpers.info(profile, this.application, this.environment, this.toolchain);\n    if (!this.config.profiles[profile]) {\n      log.error('Cannot find profile:', profile, 'available:', Object.keys(this.config.profiles));\n      return {};\n    }\n    const steps = Object.values(this.config.profiles[profile]);\n    log.info('Build:', { profile, steps });\n    if (this.config.log.debug) log.data('Configuration:', this.config);\n    let urls: string[] = [];\n    for (const step of steps) {\n      switch (step) {\n        case 'clean': await clean.run(this.config); break;\n        case 'compile': await compile.run(this.config, steps, profile); break;\n        case 'lint': await lint.run(this.config); break;\n        case 'changelog': await changelog.run(this.config, this.packageJson()); break;\n        case 'serve': urls = await serve.start(this.config); break;\n        case 'watch': await watch.start(this.config, steps); break;\n        case 'typings': break; // triggered as compile step per target\n        case 'typedoc': break; // triggered as compile step per target\n        default: log.warn('Build: unknown step', step);\n      }\n    }\n    if (steps.includes('serve')) log.info('Listening...', urls);\n    else log.info('Done...');\n    return helpers.results();\n  }\n\n  async clean() { return clean.run(this.config); }\n  async lint() { return lint.run(this.config); }\n  async changelog() { return changelog.run(this.config, this.packageJson()); }\n  async serve() { return serve.start(this.config); }\n  async compile(steps: Array<Steps>) { return compile.run(this.config, steps, ''); }\n  async watch(steps: Array<Steps>) { return watch.start(this.config, steps); }\n  async typings(target: Targets) { return typings.run(this.config, target); }\n  async typedoc(target: Targets) { return typedoc.run(this.config, target); }\n}\n\nif (require.main === module) {\n  cli.run();\n}\n", "import * as log from '@vladmandic/pilogger';\nimport * as esbuild from 'esbuild';\nimport * as helpers from './helpers';\nimport * as typedoc from './typedoc';\nimport * as typings from './typings';\n\nexport const version = esbuild.version;\n\nlet busy = false;\n\nasync function getStats(json) {\n  const stats = { modules: 0, moduleBytes: 0, imports: 0, importBytes: 0, outputBytes: 0, outputFiles: '' };\n  if (json && json.metafile?.inputs && json.metafile?.outputs) {\n    for (const [key, val] of Object.entries(json.metafile.inputs)) {\n      if (key.startsWith('node_modules')) {\n        stats.modules += 1;\n        stats.moduleBytes += (val as Record<string, number>)['bytes'] as number;\n      } else {\n        stats.imports += 1;\n        stats.importBytes += (val as Record<string, number>)['bytes'];\n      }\n    }\n    const files: Array<string> = [];\n    for (const [key, val] of Object.entries(json.metafile.outputs)) {\n      if (!key.endsWith('.map')) {\n        files.push(key);\n        stats.outputBytes += (val as Record<string, number>)['bytes'];\n      }\n    }\n    stats.outputFiles = files.join(', ');\n  }\n  return stats;\n}\n\n// rebuild on file change\nexport async function run(config, steps, profile) {\n  if (busy) {\n    log.state('Build:', { busy });\n    setTimeout(() => run(config, steps, profile), 1000);\n    return;\n  }\n  busy = true;\n  if (!config || !config.build || !config.build.targets || config.build.targets.length === 0) {\n    log.warn('Build: no targets');\n  }\n  for (const entry of config.build.targets) {\n    if (!entry.input || !entry.output) {\n      log.error('Build incomplete configuration:', { input: entry.input, output: entry.output });\n      continue;\n    }\n    const options = helpers.merge(config.build.global, config.build[profile], entry); // combine all options\n    options.metafile = true; // force metadata output\n    delete options.input; // set later as entrypoint\n    delete options.output; // set later as outfile\n    delete options.name; // logical name only\n    delete options.typings; // used by typings\n    delete options.typedoc; // used by tyepdoc\n    if (typeof options.minify !== 'undefined') {\n      options.minifyWhitespace = options.minify;\n      options.minifyIdentifiers = options.minify;\n      options.minifySyntax = options.minify;\n      delete options.minify;\n    }\n    options.entryPoints = [entry.input]; // set entrypoints\n    options.outfile = entry.output; // set output\n    if (!options.platform) options.platform = options.format === 'cjs' ? 'node' : 'browser'; // autodetect platform if not set\n    if (!options.external) options.external = entry.external || []; // set external if not existing\n    if (!options.external.includes('@vladmandic/build')) options.external.push('@vladmandic/build'); // exclude build itself\n    if (config.log.debug) log.data('ESBuild Options:', options);\n    let ok = true;\n    try {\n      const meta = await esbuild.build(options);\n      if (config.log.debug) log.data('ESBuild Metadata:', meta);\n      const stats = await getStats(meta);\n      log.state('Compile:', { name: entry.name || '', format: options.format, platform: options.platform, input: entry.input, output: stats.outputFiles, files: stats.imports, inputBytes: stats.importBytes, outputBytes: stats.outputBytes });\n    } catch (err) {\n      log.error('Compile:', { name: entry.name || '', format: options.format, platform: options.platform, input: entry.input }, { errors: (err as Record<string, string>)['errors'] || err });\n      ok = false;\n    }\n    if (ok && steps.includes('typings') && entry.typings && entry.typings !== '') await typings.run(config, entry);\n    if (ok && steps.includes('typedoc') && entry.typedoc && entry.typedoc !== '') await typedoc.run(config, entry);\n  }\n  busy = false;\n}\n", "import * as log from '@vladmandic/pilogger';\n\nexport function merge(...objects) {\n  const isObject = (obj) => obj && typeof obj === 'object';\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj || {}).forEach((key) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n      // eslint-disable-next-line no-param-reassign\n      if (Array.isArray(pVal) && Array.isArray(oVal)) prev[key] = pVal.concat(...oVal);\n      // eslint-disable-next-line no-param-reassign\n      else if (isObject(pVal) && isObject(oVal)) prev[key] = merge(pVal, oVal);\n      // eslint-disable-next-line no-param-reassign\n      else prev[key] = oVal;\n    });\n    return prev;\n  }, {});\n}\n\nexport const info = (type, application, environment, toolchain) => {\n  log.info('Application:', application);\n  log.info('Environment:', { profile: type, ...environment });\n  log.info('Toolchain:', toolchain);\n  // log.data('Configuration:', config);\n};\n\nexport const results = () => {\n  const ansiRegex = ({ onlyFirst = false } = {}) => {\n    const pattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\n    return new RegExp(pattern, onlyFirst ? undefined : 'g');\n  };\n  const res: Record<string, unknown>[] = [];\n  let facility = '';\n  for (const line of log.ring) {\n    let json: Record<string, unknown> = {};\n    try {\n      const obj = line.msg.match(/{(.*)}/);\n      json = obj ? JSON.parse(obj[0]) : { msg: line.msg };\n    } catch {\n      json = { msg: line.msg };\n    }\n    if (json.msg) json.msg = (json['msg'] as string).replace(ansiRegex(), '');\n    const facilityStr = line.msg.match(/(.*): /);\n    const facilityExists = facilityStr && facilityStr.length > 1 ? facilityStr[1] : null;\n    facility = facilityExists ? facilityExists.toLowerCase() : facility;\n    res.push({ facility, level: line.tag, ...json });\n  }\n  return res;\n};\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as log from '@vladmandic/pilogger';\nimport * as TypeDoc from 'typedoc';\nimport SimpleGit from 'simple-git';\n// import * as process from 'process'; // internal\n\nconst git = SimpleGit();\n\nexport const version = TypeDoc.Application.VERSION;\n\nconst defaults = {\n  excludePrivate: true,\n  excludeExternals: true,\n  excludeProtected: true,\n  excludeInternal: true,\n  disableSources: false,\n  gitRevision: 'main',\n  hideGenerator: 'true',\n  readme: 'none', // 'README.md',\n  includeVersion: true,\n  entryPoints: [],\n  exclude: [],\n  externalPattern: ['node_modules/'],\n  // githubPages: true,\n  logLevel: 'Verbose',\n  // logger: 'none',\n  validation: {\n    notExported: true,\n    invalidLink: true,\n  },\n};\n\nexport async function run(config, entry) {\n  try {\n    const branch = await git.branchLocal();\n    if (branch && branch.current) defaults.gitRevision = branch.current;\n  } catch { /**/ }\n\n  const td = await TypeDoc.Application.bootstrap({ entryPoints: [entry.input] });\n  td.options.addReader(new TypeDoc.TSConfigReader());\n  td.options.addReader(new TypeDoc.TypeDocReader());\n  // td.bootstrap({ entryPoints: [entry.input] }); // initialize td.options with default values\n  const localTSdefaults = { ...config.typescript };\n  if (localTSdefaults.emitDeclarationOnly) delete localTSdefaults.emitDeclarationOnly;\n  // @ts-ignore private options\n  for (const [key, val] of Object.entries(localTSdefaults)) td.options._compilerOptions[key] = val; // override TypeDoc TS compileOptions\n  for (const [key, val] of Object.entries(defaults)) td.options.setValue(key, val); // override TypeDoc options\n  td.options.setValue('entryPoints', [entry.input]);\n  td.options.setValue('out', entry.typedoc);\n  // @ts-ignore private options\n  if (td.options._fileNames.length === 0) td.options._fileNames = [entry.input]; // normally its an expanded list based on tsconfig.json:inputs\n\n  // const theme = path.join(__dirname, '../typedoc-theme');\n  // td.options.setValue('theme', fs.existsSync(theme) ? theme : 'typedoc-theme');\n  if (config.log.debug) log.data('TypeDoc Options:', td.options);\n\n  if (config.generate) {\n    if (fs.existsSync('typedoc.json')) log.warn('Generate config file exists:', ['typedoc.json']);\n    else {\n      // @ts-ignore private options\n      fs.writeFileSync('typedoc.json', JSON.stringify(td.options._values, null, 2));\n      log.info('Generate config file:', ['typedoc.json']);\n    }\n  }\n\n  // log.data(td.options);\n  td.logger.warn = log.warn;\n  td.logger.error = log.error;\n  td.logger.verbose = config.log.debug ? log.data : () => { /***/ }; // remove extra logging\n\n  td.logger.warn = () => { /***/ }; // remove extra logging\n  const project = await td.convert();\n  td.logger.warn = log.warn;\n  if (!project) {\n    log.error('TypeDoc: convert returned empty project');\n    return;\n  }\n  if (td.logger.hasErrors() || td.logger.hasWarnings()) log.warn('TypeDoc:', { errors: td.logger.errorCount, warnings: td.logger.warningCount });\n\n  // capture stdout messages\n  td.logger.log = () => { /***/ }; // remove extra logging\n  const stdout = process.stdout.write;\n  const stderr = process.stderr.write;\n  const msgs: Array<string> = [];\n  const errs: Array<string> = [];\n  process.stdout.write = (...msg) => (msgs.push(...msg) as unknown as boolean);\n  process.stderr.write = (...msg) => (errs.push(...msg) as unknown as boolean);\n  const result = project ? await td.generateDocs(project, entry.typedoc) : null;\n  process.stdout.write = stdout;\n  process.stderr.write = stderr;\n  for (const msg of errs) {\n    const lines = typeof msg === 'string' ? msg.split('\\n') : [];\n    if (lines[0]) log.warn('TypeDoc:', { msg: lines[0] });\n  }\n  for (const msg of msgs) {\n    const lines = typeof msg === 'string' ? msg.split('\\n') : [];\n    if (lines.length > 0 && lines[1].length > 0) log.warn(lines[1].replace(/\\u001b[^m]*?m/g, ''));\n  }\n\n  const generated = fs.existsSync(path.join(entry.typedoc, 'index.html'));\n  if (result) log.warn('TypeDoc:', result);\n  else log.state('TypeDoc:', { input: entry.input, output: entry.typedoc, objects: project.children?.length, generated });\n  if (typeof project.children === 'undefined') log.warn('TypeDoc:', 'no output generated');\n}\n", "const cache = new WeakMap<String, string[]>();\n\nexport function pathspec(...paths: string[]) {\n   const key = new String(paths);\n   cache.set(key, paths);\n\n   return key as string;\n}\n\nexport function isPathSpec(path: string | unknown): path is string {\n   return path instanceof String && cache.has(path);\n}\n\nexport function toPaths(pathSpec: string): string[] {\n   return cache.get(pathSpec) || [];\n}\n", "import type { SimpleGitTask } from '../types';\n\n/**\n * The `GitError` is thrown when the underlying `git` process throws a\n * fatal exception (eg an `ENOENT` exception when attempting to use a\n * non-writable directory as the root for your repo), and acts as the\n * base class for more specific errors thrown by the parsing of the\n * git response or errors in the configuration of the task about to\n * be run.\n *\n * When an exception is thrown, pending tasks in the same instance will\n * not be executed. The recommended way to run a series of tasks that\n * can independently fail without needing to prevent future tasks from\n * running is to catch them individually:\n *\n * ```typescript\n import { gitP, SimpleGit, GitError, PullResult } from 'simple-git';\n\n function catchTask (e: GitError) {\n   return e.\n }\n\n const git = gitP(repoWorkingDir);\n const pulled: PullResult | GitError = await git.pull().catch(catchTask);\n const pushed: string | GitError = await git.pushTags().catch(catchTask);\n ```\n */\nexport class GitError extends Error {\n   constructor(\n      public task?: SimpleGitTask<any>,\n      message?: string\n   ) {\n      super(message);\n      Object.setPrototypeOf(this, new.target.prototype);\n   }\n}\n", "import { GitError } from './git-error';\n\n/**\n * The `GitResponseError` is the wrapper for a parsed response that is treated as\n * a fatal error, for example attempting a `merge` can leave the repo in a corrupted\n * state when there are conflicts so the task will reject rather than resolve.\n *\n * For example, catching the merge conflict exception:\n *\n * ```typescript\n import { gitP, SimpleGit, GitResponseError, MergeSummary } from 'simple-git';\n\n const git = gitP(repoRoot);\n const mergeOptions: string[] = ['--no-ff', 'other-branch'];\n const mergeSummary: MergeSummary = await git.merge(mergeOptions)\n      .catch((e: GitResponseError<MergeSummary>) => e.git);\n\n if (mergeSummary.failed) {\n   // deal with the error\n }\n ```\n */\nexport class GitResponseError<T = any> extends GitError {\n   constructor(\n      /**\n       * `.git` access the parsed response that is treated as being an error\n       */\n      public readonly git: T,\n      message?: string\n   ) {\n      super(undefined, message || String(git));\n   }\n}\n", "import { GitError } from './git-error';\n\n/**\n * The `TaskConfigurationError` is thrown when a command was incorrectly\n * configured. An error of this kind means that no attempt was made to\n * run your command through the underlying `git` binary.\n *\n * Check the `.message` property for more detail on why your configuration\n * resulted in an error.\n */\nexport class TaskConfigurationError extends GitError {\n   constructor(message?: string) {\n      super(undefined, message);\n   }\n}\n", "import { exists, FOLDER } from '@kwsites/file-exists';\nimport { Maybe } from '../types';\n\nexport const NULL = '\\0';\n\nexport const NOOP: (...args: any[]) => void = () => {};\n\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nexport function asFunction<T extends () => any>(source: T | any): T {\n   return typeof source === 'function' ? source : NOOP;\n}\n\n/**\n * Determines whether the supplied argument is both a function, and is not\n * the `NOOP` function.\n */\nexport function isUserFunction<T extends Function>(source: T | any): source is T {\n   return typeof source === 'function' && source !== NOOP;\n}\n\nexport function splitOn(input: string, char: string): [string, string] {\n   const index = input.indexOf(char);\n   if (index <= 0) {\n      return [input, ''];\n   }\n\n   return [input.substr(0, index), input.substr(index + 1)];\n}\n\nexport function first<T extends any[]>(input: T, offset?: number): Maybe<T[number]>;\nexport function first<T extends IArguments>(input: T, offset?: number): Maybe<unknown>;\nexport function first(input: any[] | IArguments, offset = 0): Maybe<unknown> {\n   return isArrayLike(input) && input.length > offset ? input[offset] : undefined;\n}\n\nexport function last<T extends any[]>(input: T, offset?: number): Maybe<T[number]>;\nexport function last<T extends IArguments>(input: T, offset?: number): Maybe<unknown>;\nexport function last<T>(input: T, offset?: number): Maybe<unknown>;\nexport function last(input: unknown, offset = 0) {\n   if (isArrayLike(input) && input.length > offset) {\n      return input[input.length - 1 - offset];\n   }\n}\n\ntype ArrayLike<T = any> = T[] | IArguments | { [index: number]: T; length: number };\n\nfunction isArrayLike(input: any): input is ArrayLike {\n   return !!(input && typeof input.length === 'number');\n}\n\nexport function toLinesWithContent(input = '', trimmed = true, separator = '\\n'): string[] {\n   return input.split(separator).reduce((output, line) => {\n      const lineContent = trimmed ? line.trim() : line;\n      if (lineContent) {\n         output.push(lineContent);\n      }\n      return output;\n   }, [] as string[]);\n}\n\ntype LineWithContentCallback<T = void> = (line: string) => T;\n\nexport function forEachLineWithContent<T>(\n   input: string,\n   callback: LineWithContentCallback<T>\n): T[] {\n   return toLinesWithContent(input, true).map((line) => callback(line));\n}\n\nexport function folderExists(path: string): boolean {\n   return exists(path, FOLDER);\n}\n\n/**\n * Adds `item` into the `target` `Array` or `Set` when it is not already present and returns the `item`.\n */\nexport function append<T>(target: T[] | Set<T>, item: T): typeof item {\n   if (Array.isArray(target)) {\n      if (!target.includes(item)) {\n         target.push(item);\n      }\n   } else {\n      target.add(item);\n   }\n   return item;\n}\n\n/**\n * Adds `item` into the `target` `Array` when it is not already present and returns the `target`.\n */\nexport function including<T>(target: T[], item: T): typeof target {\n   if (Array.isArray(target) && !target.includes(item)) {\n      target.push(item);\n   }\n\n   return target;\n}\n\nexport function remove<T>(target: Set<T> | T[], item: T): T {\n   if (Array.isArray(target)) {\n      const index = target.indexOf(item);\n      if (index >= 0) {\n         target.splice(index, 1);\n      }\n   } else {\n      target.delete(item);\n   }\n   return item;\n}\n\nexport const objectToString = Object.prototype.toString.call.bind(Object.prototype.toString) as (\n   input: any\n) => string;\n\nexport function asArray<T>(source: T | T[]): T[] {\n   return Array.isArray(source) ? source : [source];\n}\n\nexport function asStringArray<T>(source: T | T[]): string[] {\n   return asArray(source).map(String);\n}\n\nexport function asNumber(source: string | null | undefined, onNaN = 0) {\n   if (source == null) {\n      return onNaN;\n   }\n\n   const num = parseInt(source, 10);\n   return isNaN(num) ? onNaN : num;\n}\n\nexport function prefixedArray<T>(input: T[], prefix: T): T[] {\n   const output: T[] = [];\n   for (let i = 0, max = input.length; i < max; i++) {\n      output.push(prefix, input[i]);\n   }\n   return output;\n}\n\nexport function bufferToString(input: Buffer | Buffer[]): string {\n   return (Array.isArray(input) ? Buffer.concat(input) : input).toString('utf-8');\n}\n\n/**\n * Get a new object from a source object with only the listed properties.\n */\nexport function pick(source: Record<string, any>, properties: string[]) {\n   return Object.assign(\n      {},\n      ...properties.map((property) => (property in source ? { [property]: source[property] } : {}))\n   );\n}\n\nexport function delay(duration = 0): Promise<void> {\n   return new Promise((done) => setTimeout(done, duration));\n}\n", "import { Maybe, Options, Primitives } from '../types';\nimport { objectToString } from './util';\nimport { isPathSpec } from '../args/pathspec';\n\nexport interface ArgumentFilterPredicate<T> {\n   (input: any): input is T;\n}\n\nexport function filterType<T, K>(\n   input: K,\n   filter: ArgumentFilterPredicate<T>\n): K extends T ? T : undefined;\nexport function filterType<T, K>(input: K, filter: ArgumentFilterPredicate<T>, def: T): T;\nexport function filterType<T, K>(input: K, filter: ArgumentFilterPredicate<T>, def?: T): Maybe<T> {\n   if (filter(input)) {\n      return input;\n   }\n   return arguments.length > 2 ? def : undefined;\n}\n\nexport const filterArray: ArgumentFilterPredicate<Array<any>> = (input): input is Array<any> => {\n   return Array.isArray(input);\n};\n\nexport function filterPrimitives(\n   input: unknown,\n   omit?: Array<'boolean' | 'string' | 'number'>\n): input is Primitives {\n   const type = isPathSpec(input) ? 'string' : typeof input;\n\n   return (\n      /number|string|boolean/.test(type) &&\n      (!omit || !omit.includes(type as 'boolean' | 'string' | 'number'))\n   );\n}\n\nexport const filterString: ArgumentFilterPredicate<string> = (input): input is string => {\n   return typeof input === 'string';\n};\n\nexport const filterStringArray: ArgumentFilterPredicate<string[]> = (input): input is string[] => {\n   return Array.isArray(input) && input.every(filterString);\n};\n\nexport const filterStringOrStringArray: ArgumentFilterPredicate<string | string[]> = (\n   input\n): input is string | string[] => {\n   return filterString(input) || (Array.isArray(input) && input.every(filterString));\n};\n\nexport function filterPlainObject<T extends Options>(input: T | unknown): input is T;\nexport function filterPlainObject<T extends Object>(input: T | unknown): input is T {\n   return !!input && objectToString(input) === '[object Object]';\n}\n\nexport function filterFunction(input: unknown): input is Function {\n   return typeof input === 'function';\n}\n\nexport const filterHasLength: ArgumentFilterPredicate<{ length: number }> = (\n   input\n): input is { length: number } => {\n   if (input == null || 'number|boolean|function'.includes(typeof input)) {\n      return false;\n   }\n   return Array.isArray(input) || typeof input === 'string' || typeof input.length === 'number';\n};\n", "/**\n * Known process exit codes used by the task parsers to determine whether an error\n * was one they can automatically handle\n */\nexport enum ExitCodes {\n   SUCCESS,\n   ERROR,\n   NOT_FOUND = -2,\n   UNCLEAN = 128,\n}\n", "import { TaskResponseFormat } from '../types';\n\nexport class GitOutputStreams<T extends TaskResponseFormat = Buffer> {\n   constructor(\n      public readonly stdOut: T,\n      public readonly stdErr: T\n   ) {}\n\n   asStrings(): GitOutputStreams<string> {\n      return new GitOutputStreams(this.stdOut.toString('utf8'), this.stdErr.toString('utf8'));\n   }\n}\n", "export class LineParser<T> {\n   protected matches: string[] = [];\n\n   private _regExp: RegExp[];\n\n   constructor(\n      regExp: RegExp | RegExp[],\n      useMatches?: (target: T, match: string[]) => boolean | void\n   ) {\n      this._regExp = Array.isArray(regExp) ? regExp : [regExp];\n      if (useMatches) {\n         this.useMatches = useMatches;\n      }\n   }\n\n   parse = (line: (offset: number) => string | undefined, target: T): boolean => {\n      this.resetMatches();\n\n      if (!this._regExp.every((reg, index) => this.addMatch(reg, index, line(index)))) {\n         return false;\n      }\n\n      return this.useMatches(target, this.prepareMatches()) !== false;\n   };\n\n   // @ts-ignore\n   protected useMatches(target: T, match: string[]): boolean | void {\n      throw new Error(`LineParser:useMatches not implemented`);\n   }\n\n   protected resetMatches() {\n      this.matches.length = 0;\n   }\n\n   protected prepareMatches() {\n      return this.matches;\n   }\n\n   protected addMatch(reg: RegExp, index: number, line?: string) {\n      const matched = line && reg.exec(line);\n      if (matched) {\n         this.pushMatch(index, matched);\n      }\n\n      return !!matched;\n   }\n\n   protected pushMatch(_index: number, matched: string[]) {\n      this.matches.push(...matched.slice(1));\n   }\n}\n\nexport class RemoteLineParser<T> extends LineParser<T> {\n   protected addMatch(reg: RegExp, index: number, line?: string): boolean {\n      return /^remote:\\s/.test(String(line)) && super.addMatch(reg, index, line);\n   }\n\n   protected pushMatch(index: number, matched: string[]) {\n      if (index > 0 || matched.length > 1) {\n         super.pushMatch(index, matched);\n      }\n   }\n}\n", "import { SimpleGitOptions } from '../types';\n\nconst defaultOptions: Omit<SimpleGitOptions, 'baseDir'> = {\n   binary: 'git',\n   maxConcurrentProcesses: 5,\n   config: [],\n   trimmed: false,\n};\n\nexport function createInstanceConfig(\n   ...options: Array<Partial<SimpleGitOptions> | undefined>\n): SimpleGitOptions {\n   const baseDir = process.cwd();\n   const config: SimpleGitOptions = Object.assign(\n      { baseDir, ...defaultOptions },\n      ...options.filter((o) => typeof o === 'object' && o)\n   );\n\n   config.baseDir = config.baseDir || baseDir;\n   config.trimmed = config.trimmed === true;\n\n   return config;\n}\n", "import {\n   filterArray,\n   filterFunction,\n   filterPlainObject,\n   filterPrimitives,\n   filterType,\n} from './argument-filters';\nimport { asFunction, isUserFunction, last } from './util';\nimport { Maybe, Options, OptionsValues } from '../types';\nimport { isPathSpec } from '../args/pathspec';\n\nexport function appendTaskOptions<T extends Options = Options>(\n   options: Maybe<T>,\n   commands: string[] = []\n): string[] {\n   if (!filterPlainObject<Options>(options)) {\n      return commands;\n   }\n\n   return Object.keys(options).reduce((commands: string[], key: string) => {\n      const value: OptionsValues = options[key];\n\n      if (isPathSpec(value)) {\n         commands.push(value);\n      } else if (filterPrimitives(value, ['boolean'])) {\n         commands.push(key + '=' + value);\n      } else {\n         commands.push(key);\n      }\n\n      return commands;\n   }, commands);\n}\n\nexport function getTrailingOptions(\n   args: IArguments,\n   initialPrimitive = 0,\n   objectOnly = false\n): string[] {\n   const command: string[] = [];\n\n   for (let i = 0, max = initialPrimitive < 0 ? args.length : initialPrimitive; i < max; i++) {\n      if ('string|number'.includes(typeof args[i])) {\n         command.push(String(args[i]));\n      }\n   }\n\n   appendTaskOptions(trailingOptionsArgument(args), command);\n   if (!objectOnly) {\n      command.push(...trailingArrayArgument(args));\n   }\n\n   return command;\n}\n\nfunction trailingArrayArgument(args: IArguments) {\n   const hasTrailingCallback = typeof last(args) === 'function';\n   return filterType(last(args, hasTrailingCallback ? 1 : 0), filterArray, []);\n}\n\n/**\n * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument\n * if there is one. When not found, the return value is null.\n */\nexport function trailingOptionsArgument(args: IArguments): Maybe<Options> {\n   const hasTrailingCallback = filterFunction(last(args));\n   return filterType(last(args, hasTrailingCallback ? 1 : 0), filterPlainObject);\n}\n\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nexport function trailingFunctionArgument(\n   args: unknown[] | IArguments | unknown,\n   includeNoop = true\n): Maybe<(...args: any[]) => unknown> {\n   const callback = asFunction(last(args));\n   return includeNoop || isUserFunction(callback) ? callback : undefined;\n}\n", "import type { MaybeArray, TaskParser, TaskResponseFormat } from '../types';\nimport { GitOutputStreams } from './git-output-streams';\nimport { LineParser } from './line-parser';\nimport { asArray, toLinesWithContent } from './util';\n\nexport function callTaskParser<INPUT extends TaskResponseFormat, RESPONSE>(\n   parser: TaskParser<INPUT, RESPONSE>,\n   streams: GitOutputStreams<INPUT>\n) {\n   return parser(streams.stdOut, streams.stdErr);\n}\n\nexport function parseStringResponse<T>(\n   result: T,\n   parsers: LineParser<T>[],\n   texts: MaybeArray<string>,\n   trim = true\n): T {\n   asArray(texts).forEach((text) => {\n      for (let lines = toLinesWithContent(text, trim), i = 0, max = lines.length; i < max; i++) {\n         const line = (offset = 0) => {\n            if (i + offset >= max) {\n               return;\n            }\n            return lines[i + offset];\n         };\n\n         parsers.some(({ parse }) => parse(line, result));\n      }\n   });\n\n   return result;\n}\n", "export * from './argument-filters';\nexport * from './exit-codes';\nexport * from './git-output-streams';\nexport * from './line-parser';\nexport * from './simple-git-options';\nexport * from './task-options';\nexport * from './task-parser';\nexport * from './util';\n", "import { ExitCodes } from '../utils';\nimport { Maybe, StringTask } from '../types';\n\nexport enum CheckRepoActions {\n   BARE = 'bare',\n   IN_TREE = 'tree',\n   IS_REPO_ROOT = 'root',\n}\n\nconst onError: StringTask<boolean>['onError'] = ({ exitCode }, error, done, fail) => {\n   if (exitCode === ExitCodes.UNCLEAN && isNotRepoMessage(error)) {\n      return done(Buffer.from('false'));\n   }\n\n   fail(error);\n};\n\nconst parser: StringTask<boolean>['parser'] = (text) => {\n   return text.trim() === 'true';\n};\n\nexport function checkIsRepoTask(action: Maybe<CheckRepoActions>): StringTask<boolean> {\n   switch (action) {\n      case CheckRepoActions.BARE:\n         return checkIsBareRepoTask();\n      case CheckRepoActions.IS_REPO_ROOT:\n         return checkIsRepoRootTask();\n   }\n\n   const commands = ['rev-parse', '--is-inside-work-tree'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser,\n   };\n}\n\nexport function checkIsRepoRootTask(): StringTask<boolean> {\n   const commands = ['rev-parse', '--git-dir'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser(path) {\n         return /^\\.(git)?$/.test(path.trim());\n      },\n   };\n}\n\nexport function checkIsBareRepoTask(): StringTask<boolean> {\n   const commands = ['rev-parse', '--is-bare-repository'];\n\n   return {\n      commands,\n      format: 'utf-8',\n      onError,\n      parser,\n   };\n}\n\nfunction isNotRepoMessage(error: Error): boolean {\n   return /(Not a git repository|Kein Git-Repository)/i.test(String(error));\n}\n", "import { CleanSummary } from '../../../typings';\nimport { toLinesWithContent } from '../utils';\n\nexport class CleanResponse implements CleanSummary {\n   public paths: string[] = [];\n   public files: string[] = [];\n   public folders: string[] = [];\n\n   constructor(public readonly dryRun: boolean) {}\n}\n\nconst removalRegexp = /^[a-z]+\\s*/i;\nconst dryRunRemovalRegexp = /^[a-z]+\\s+[a-z]+\\s*/i;\nconst isFolderRegexp = /\\/$/;\n\nexport function cleanSummaryParser(dryRun: boolean, text: string): CleanSummary {\n   const summary = new CleanResponse(dryRun);\n   const regexp = dryRun ? dryRunRemovalRegexp : removalRegexp;\n\n   toLinesWithContent(text).forEach((line) => {\n      const removed = line.replace(regexp, '');\n\n      summary.paths.push(removed);\n      (isFolderRegexp.test(removed) ? summary.folders : summary.files).push(removed);\n   });\n\n   return summary;\n}\n", "import { TaskConfigurationError } from '../errors/task-configuration-error';\nimport type { BufferTask, EmptyTaskParser, SimpleGitTask, StringTask } from '../types';\n\nexport const EMPTY_COMMANDS: [] = [];\n\nexport type EmptyTask = {\n   commands: typeof EMPTY_COMMANDS;\n   format: 'empty';\n   parser: EmptyTaskParser;\n   onError?: undefined;\n};\n\nexport function adhocExecTask(parser: EmptyTaskParser): EmptyTask {\n   return {\n      commands: EMPTY_COMMANDS,\n      format: 'empty',\n      parser,\n   };\n}\n\nexport function configurationErrorTask(error: Error | string): EmptyTask {\n   return {\n      commands: EMPTY_COMMANDS,\n      format: 'empty',\n      parser() {\n         throw typeof error === 'string' ? new TaskConfigurationError(error) : error;\n      },\n   };\n}\n\nexport function straightThroughStringTask(commands: string[], trimmed = false): StringTask<string> {\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text) {\n         return trimmed ? String(text).trim() : text;\n      },\n   };\n}\n\nexport function straightThroughBufferTask(commands: string[]): BufferTask<any> {\n   return {\n      commands,\n      format: 'buffer',\n      parser(buffer) {\n         return buffer;\n      },\n   };\n}\n\nexport function isBufferTask<R>(task: SimpleGitTask<R>): task is BufferTask<R> {\n   return task.format === 'buffer';\n}\n\nexport function isEmptyTask<R>(task: SimpleGitTask<R>): task is EmptyTask {\n   return task.format === 'empty' || !task.commands.length;\n}\n", "import { CleanSummary } from '../../../typings';\nimport { cleanSummaryParser } from '../responses/CleanSummary';\nimport { Maybe, StringTask } from '../types';\nimport { asStringArray } from '../utils';\nimport { configurationErrorTask } from './task';\n\nexport const CONFIG_ERROR_INTERACTIVE_MODE = 'Git clean interactive mode is not supported';\nexport const CONFIG_ERROR_MODE_REQUIRED = 'Git clean mode parameter (\"n\" or \"f\") is required';\nexport const CONFIG_ERROR_UNKNOWN_OPTION = 'Git clean unknown option found in: ';\n\n/**\n * All supported option switches available for use in a `git.clean` operation\n */\nexport enum CleanOptions {\n   DRY_RUN = 'n',\n   FORCE = 'f',\n   IGNORED_INCLUDED = 'x',\n   IGNORED_ONLY = 'X',\n   EXCLUDING = 'e',\n   QUIET = 'q',\n   RECURSIVE = 'd',\n}\n\n/**\n * The two modes `git.clean` can run in - one of these must be supplied in order\n * for the command to not throw a `TaskConfigurationError`\n */\nexport type CleanMode = CleanOptions.FORCE | CleanOptions.DRY_RUN;\n\nconst CleanOptionValues: Set<string> = new Set([\n   'i',\n   ...asStringArray(Object.values(CleanOptions as any)),\n]);\n\nexport function cleanWithOptionsTask(mode: CleanMode | string, customArgs: string[]) {\n   const { cleanMode, options, valid } = getCleanOptions(mode);\n\n   if (!cleanMode) {\n      return configurationErrorTask(CONFIG_ERROR_MODE_REQUIRED);\n   }\n\n   if (!valid.options) {\n      return configurationErrorTask(CONFIG_ERROR_UNKNOWN_OPTION + JSON.stringify(mode));\n   }\n\n   options.push(...customArgs);\n\n   if (options.some(isInteractiveMode)) {\n      return configurationErrorTask(CONFIG_ERROR_INTERACTIVE_MODE);\n   }\n\n   return cleanTask(cleanMode, options);\n}\n\nexport function cleanTask(mode: CleanMode, customArgs: string[]): StringTask<CleanSummary> {\n   const commands: string[] = ['clean', `-${mode}`, ...customArgs];\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): CleanSummary {\n         return cleanSummaryParser(mode === CleanOptions.DRY_RUN, text);\n      },\n   };\n}\n\nexport function isCleanOptionsArray(input: string[]): input is CleanOptions[] {\n   return Array.isArray(input) && input.every((test) => CleanOptionValues.has(test));\n}\n\nfunction getCleanOptions(input: string) {\n   let cleanMode: Maybe<CleanMode>;\n   let options: string[] = [];\n   let valid = { cleanMode: false, options: true };\n\n   input\n      .replace(/[^a-z]i/g, '')\n      .split('')\n      .forEach((char) => {\n         if (isCleanMode(char)) {\n            cleanMode = char;\n            valid.cleanMode = true;\n         } else {\n            valid.options = valid.options && isKnownOption((options[options.length] = `-${char}`));\n         }\n      });\n\n   return {\n      cleanMode,\n      options,\n      valid,\n   };\n}\n\nfunction isCleanMode(cleanMode?: string): cleanMode is CleanMode {\n   return cleanMode === CleanOptions.FORCE || cleanMode === CleanOptions.DRY_RUN;\n}\n\nfunction isKnownOption(option: string): boolean {\n   return /^-[a-z]$/i.test(option) && CleanOptionValues.has(option.charAt(1));\n}\n\nfunction isInteractiveMode(option: string): boolean {\n   if (/^-[^\\-]/.test(option)) {\n      return option.indexOf('i') > 0;\n   }\n\n   return option === '--interactive';\n}\n", "import { ConfigGetResult, ConfigListSummary, ConfigValues } from '../../../typings';\nimport { last, splitOn } from '../utils';\n\nexport class ConfigList implements ConfigListSummary {\n   public files: string[] = [];\n   public values: { [fileName: string]: ConfigValues } = Object.create(null);\n\n   private _all: ConfigValues | undefined;\n\n   public get all(): ConfigValues {\n      if (!this._all) {\n         this._all = this.files.reduce((all: ConfigValues, file: string) => {\n            return Object.assign(all, this.values[file]);\n         }, {});\n      }\n\n      return this._all;\n   }\n\n   public addFile(file: string): ConfigValues {\n      if (!(file in this.values)) {\n         const latest = last(this.files);\n         this.values[file] = latest ? Object.create(this.values[latest]) : {};\n\n         this.files.push(file);\n      }\n\n      return this.values[file];\n   }\n\n   public addValue(file: string, key: string, value: string) {\n      const values = this.addFile(file);\n\n      if (!values.hasOwnProperty(key)) {\n         values[key] = value;\n      } else if (Array.isArray(values[key])) {\n         (values[key] as string[]).push(value);\n      } else {\n         values[key] = [values[key] as string, value];\n      }\n\n      this._all = undefined;\n   }\n}\n\nexport function configListParser(text: string): ConfigList {\n   const config = new ConfigList();\n\n   for (const item of configParser(text)) {\n      config.addValue(item.file, String(item.key), item.value);\n   }\n\n   return config;\n}\n\nexport function configGetParser(text: string, key: string): ConfigGetResult {\n   let value: string | null = null;\n   const values: string[] = [];\n   const scopes: Map<string, string[]> = new Map();\n\n   for (const item of configParser(text, key)) {\n      if (item.key !== key) {\n         continue;\n      }\n\n      values.push((value = item.value));\n\n      if (!scopes.has(item.file)) {\n         scopes.set(item.file, []);\n      }\n\n      scopes.get(item.file)!.push(value);\n   }\n\n   return {\n      key,\n      paths: Array.from(scopes.keys()),\n      scopes,\n      value,\n      values,\n   };\n}\n\nfunction configFilePath(filePath: string): string {\n   return filePath.replace(/^(file):/, '');\n}\n\nfunction* configParser(text: string, requestedKey: string | null = null) {\n   const lines = text.split('\\0');\n\n   for (let i = 0, max = lines.length - 1; i < max; ) {\n      const file = configFilePath(lines[i++]);\n\n      let value = lines[i++];\n      let key = requestedKey;\n\n      if (value.includes('\\n')) {\n         const line = splitOn(value, '\\n');\n         key = line[0];\n         value = line[1];\n      }\n\n      yield { file, key, value };\n   }\n}\n", "import type { ConfigGetResult, ConfigListSummary, SimpleGit } from '../../../typings';\nimport { configGetParser, configListParser } from '../responses/ConfigList';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport type { StringTask } from '../types';\nimport { trailingFunctionArgument } from '../utils';\n\nexport enum GitConfigScope {\n   system = 'system',\n   global = 'global',\n   local = 'local',\n   worktree = 'worktree',\n}\n\nfunction asConfigScope<T extends GitConfigScope | undefined>(\n   scope: GitConfigScope | unknown,\n   fallback: T\n): GitConfigScope | T {\n   if (typeof scope === 'string' && GitConfigScope.hasOwnProperty(scope)) {\n      return scope as GitConfigScope;\n   }\n   return fallback;\n}\n\nfunction addConfigTask(\n   key: string,\n   value: string,\n   append: boolean,\n   scope: GitConfigScope\n): StringTask<string> {\n   const commands: string[] = ['config', `--${scope}`];\n\n   if (append) {\n      commands.push('--add');\n   }\n\n   commands.push(key, value);\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): string {\n         return text;\n      },\n   };\n}\n\nfunction getConfigTask(key: string, scope?: GitConfigScope): StringTask<ConfigGetResult> {\n   const commands: string[] = ['config', '--null', '--show-origin', '--get-all', key];\n\n   if (scope) {\n      commands.splice(1, 0, `--${scope}`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text) {\n         return configGetParser(text, key);\n      },\n   };\n}\n\nfunction listConfigTask(scope?: GitConfigScope): StringTask<ConfigListSummary> {\n   const commands = ['config', '--list', '--show-origin', '--null'];\n\n   if (scope) {\n      commands.push(`--${scope}`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string) {\n         return configListParser(text);\n      },\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'addConfig' | 'getConfig' | 'listConfig'> {\n   return {\n      addConfig(this: SimpleGitApi, key: string, value: string, ...rest: unknown[]) {\n         return this._runTask(\n            addConfigTask(\n               key,\n               value,\n               rest[0] === true,\n               asConfigScope(rest[1], GitConfigScope.local)\n            ),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      getConfig(this: SimpleGitApi, key: string, scope?: GitConfigScope) {\n         return this._runTask(\n            getConfigTask(key, asConfigScope(scope, undefined)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      listConfig(this: SimpleGitApi, ...rest: unknown[]) {\n         return this._runTask(\n            listConfigTask(asConfigScope(rest[0], undefined)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n", "import { GrepResult, SimpleGit } from '../../../typings';\nimport { SimpleGitApi } from '../simple-git-api';\nimport {\n   asNumber,\n   forEachLineWithContent,\n   getTrailingOptions,\n   NULL,\n   prefixedArray,\n   trailingFunctionArgument,\n} from '../utils';\n\nimport { configurationErrorTask } from './task';\n\nconst disallowedOptions = ['-h'];\n\nconst Query = Symbol('grepQuery');\n\nexport interface GitGrepQuery extends Iterable<string> {\n   /** Adds one or more terms to be grouped as an \"and\" to any other terms */\n   and(...and: string[]): this;\n\n   /** Adds one or more search terms - git.grep will \"or\" this to other terms */\n   param(...param: string[]): this;\n}\n\nclass GrepQuery implements GitGrepQuery {\n   private [Query]: string[] = [];\n\n   *[Symbol.iterator]() {\n      for (const query of this[Query]) {\n         yield query;\n      }\n   }\n\n   and(...and: string[]) {\n      and.length && this[Query].push('--and', '(', ...prefixedArray(and, '-e'), ')');\n      return this;\n   }\n\n   param(...param: string[]) {\n      this[Query].push(...prefixedArray(param, '-e'));\n      return this;\n   }\n}\n\n/**\n * Creates a new builder for a `git.grep` query with optional params\n */\nexport function grepQueryBuilder(...params: string[]): GitGrepQuery {\n   return new GrepQuery().param(...params);\n}\n\nfunction parseGrep(grep: string): GrepResult {\n   const paths: GrepResult['paths'] = new Set<string>();\n   const results: GrepResult['results'] = {};\n\n   forEachLineWithContent(grep, (input) => {\n      const [path, line, preview] = input.split(NULL);\n      paths.add(path);\n      (results[path] = results[path] || []).push({\n         line: asNumber(line),\n         path,\n         preview,\n      });\n   });\n\n   return {\n      paths,\n      results,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'grep'> {\n   return {\n      grep(this: SimpleGitApi, searchTerm: string | GitGrepQuery) {\n         const then = trailingFunctionArgument(arguments);\n         const options = getTrailingOptions(arguments);\n\n         for (const option of disallowedOptions) {\n            if (options.includes(option)) {\n               return this._runTask(\n                  configurationErrorTask(`git.grep: use of \"${option}\" is not supported.`),\n                  then\n               );\n            }\n         }\n\n         if (typeof searchTerm === 'string') {\n            searchTerm = grepQueryBuilder().param(searchTerm);\n         }\n\n         const commands = ['grep', '--null', '-n', '--full-name', ...options, ...searchTerm];\n\n         return this._runTask(\n            {\n               commands,\n               format: 'utf-8',\n               parser(stdOut) {\n                  return parseGrep(stdOut);\n               },\n            },\n            then\n         );\n      },\n   };\n}\n", "import { straightThroughStringTask } from './task';\nimport { Maybe, OptionFlags, Options } from '../types';\n\nexport enum ResetMode {\n   MIXED = 'mixed',\n   SOFT = 'soft',\n   HARD = 'hard',\n   MERGE = 'merge',\n   KEEP = 'keep',\n}\n\nconst ResetModes = Array.from(Object.values(ResetMode));\n\nexport type ResetOptions = Options &\n   OptionFlags<'-q' | '--quiet' | '--no-quiet' | '--pathspec-from-nul'> &\n   OptionFlags<'--pathspec-from-file', string>;\n\nexport function resetTask(mode: Maybe<ResetMode>, customArgs: string[]) {\n   const commands: string[] = ['reset'];\n   if (isValidResetMode(mode)) {\n      commands.push(`--${mode}`);\n   }\n   commands.push(...customArgs);\n\n   return straightThroughStringTask(commands);\n}\n\nexport function getResetMode(mode: ResetMode | any): Maybe<ResetMode> {\n   if (isValidResetMode(mode)) {\n      return mode;\n   }\n\n   switch (typeof mode) {\n      case 'string':\n      case 'undefined':\n         return ResetMode.SOFT;\n   }\n\n   return;\n}\n\nfunction isValidResetMode(mode: ResetMode | any): mode is ResetMode {\n   return ResetModes.includes(mode);\n}\n", "import debug, { Debugger } from 'debug';\nimport {\n   append,\n   filterHasLength,\n   filterString,\n   filterType,\n   NOOP,\n   objectToString,\n   remove,\n} from './utils';\nimport { Maybe } from './types';\n\ndebug.formatters.L = (value: any) => String(filterHasLength(value) ? value.length : '-');\ndebug.formatters.B = (value: Buffer) => {\n   if (Buffer.isBuffer(value)) {\n      return value.toString('utf8');\n   }\n   return objectToString(value);\n};\n\ntype OutputLoggingHandler = (message: string, ...args: any[]) => void;\n\nfunction createLog() {\n   return debug('simple-git');\n}\n\nexport interface OutputLogger extends OutputLoggingHandler {\n   readonly label: string;\n\n   info: OutputLoggingHandler;\n   step(nextStep?: string): OutputLogger;\n   sibling(name: string): OutputLogger;\n}\n\nfunction prefixedLogger(\n   to: Debugger,\n   prefix: string,\n   forward?: OutputLoggingHandler\n): OutputLoggingHandler {\n   if (!prefix || !String(prefix).replace(/\\s*/, '')) {\n      return !forward\n         ? to\n         : (message, ...args) => {\n              to(message, ...args);\n              forward(message, ...args);\n           };\n   }\n\n   return (message, ...args) => {\n      to(`%s ${message}`, prefix, ...args);\n      if (forward) {\n         forward(message, ...args);\n      }\n   };\n}\n\nfunction childLoggerName(\n   name: Maybe<string>,\n   childDebugger: Maybe<Debugger>,\n   { namespace: parentNamespace }: Debugger\n): string {\n   if (typeof name === 'string') {\n      return name;\n   }\n   const childNamespace = (childDebugger && childDebugger.namespace) || '';\n\n   if (childNamespace.startsWith(parentNamespace)) {\n      return childNamespace.substr(parentNamespace.length + 1);\n   }\n\n   return childNamespace || parentNamespace;\n}\n\nexport function createLogger(\n   label: string,\n   verbose?: string | Debugger,\n   initialStep?: string,\n   infoDebugger = createLog()\n): OutputLogger {\n   const labelPrefix = (label && `[${label}]`) || '';\n\n   const spawned: OutputLogger[] = [];\n   const debugDebugger: Maybe<Debugger> =\n      typeof verbose === 'string' ? infoDebugger.extend(verbose) : verbose;\n   const key = childLoggerName(filterType(verbose, filterString), debugDebugger, infoDebugger);\n\n   return step(initialStep);\n\n   function sibling(name: string, initial?: string) {\n      return append(\n         spawned,\n         createLogger(label, key.replace(/^[^:]+/, name), initial, infoDebugger)\n      );\n   }\n\n   function step(phase?: string) {\n      const stepPrefix = (phase && `[${phase}]`) || '';\n      const debug = (debugDebugger && prefixedLogger(debugDebugger, stepPrefix)) || NOOP;\n      const info = prefixedLogger(infoDebugger, `${labelPrefix} ${stepPrefix}`, debug);\n\n      return Object.assign(debugDebugger ? debug : info, {\n         label,\n         sibling,\n         info,\n         step,\n      });\n   }\n}\n\n/**\n * The `GitLogger` is used by the main `SimpleGit` runner to handle logging\n * any warnings or errors.\n */\nexport class GitLogger {\n   public error: OutputLoggingHandler;\n\n   public warn: OutputLoggingHandler;\n\n   constructor(private _out: Debugger = createLog()) {\n      this.error = prefixedLogger(_out, '[ERROR]');\n      this.warn = prefixedLogger(_out, '[WARN]');\n   }\n\n   silent(silence = false) {\n      if (silence !== this._out.enabled) {\n         return;\n      }\n\n      const { namespace } = this._out;\n      const env = (process.env.DEBUG || '').split(',').filter((s) => !!s);\n      const hasOn = env.includes(namespace);\n      const hasOff = env.includes(`-${namespace}`);\n\n      // enabling the log\n      if (!silence) {\n         if (hasOff) {\n            remove(env, `-${namespace}`);\n         } else {\n            env.push(namespace);\n         }\n      } else {\n         if (hasOn) {\n            remove(env, namespace);\n         } else {\n            env.push(`-${namespace}`);\n         }\n      }\n\n      debug.enable(env.join(','));\n   }\n}\n", "import { SimpleGitTask } from '../types';\nimport { GitError } from '../errors/git-error';\nimport { createLogger, OutputLogger } from '../git-logger';\n\ntype AnySimpleGitTask = SimpleGitTask<any>;\n\ntype TaskInProgress = {\n   name: string;\n   logger: OutputLogger;\n   task: AnySimpleGitTask;\n};\n\nexport class TasksPendingQueue {\n   private _queue: Map<AnySimpleGitTask, TaskInProgress> = new Map();\n\n   constructor(private logLabel = 'GitExecutor') {}\n\n   private withProgress(task: AnySimpleGitTask) {\n      return this._queue.get(task);\n   }\n\n   private createProgress(task: AnySimpleGitTask): TaskInProgress {\n      const name = TasksPendingQueue.getName(task.commands[0]);\n      const logger = createLogger(this.logLabel, name);\n\n      return {\n         task,\n         logger,\n         name,\n      };\n   }\n\n   push(task: AnySimpleGitTask): TaskInProgress {\n      const progress = this.createProgress(task);\n      progress.logger('Adding task to the queue, commands = %o', task.commands);\n\n      this._queue.set(task, progress);\n\n      return progress;\n   }\n\n   fatal(err: GitError) {\n      for (const [task, { logger }] of Array.from(this._queue.entries())) {\n         if (task === err.task) {\n            logger.info(`Failed %o`, err);\n            logger(\n               `Fatal exception, any as-yet un-started tasks run through this executor will not be attempted`\n            );\n         } else {\n            logger.info(\n               `A fatal exception occurred in a previous task, the queue has been purged: %o`,\n               err.message\n            );\n         }\n\n         this.complete(task);\n      }\n\n      if (this._queue.size !== 0) {\n         throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`);\n      }\n   }\n\n   complete(task: AnySimpleGitTask) {\n      const progress = this.withProgress(task);\n      if (progress) {\n         this._queue.delete(task);\n      }\n   }\n\n   attempt(task: AnySimpleGitTask): TaskInProgress {\n      const progress = this.withProgress(task);\n      if (!progress) {\n         throw new GitError(undefined, 'TasksPendingQueue: attempt called for an unknown task');\n      }\n      progress.logger('Starting task');\n\n      return progress;\n   }\n\n   static getName(name = 'empty') {\n      return `task:${name}:${++TasksPendingQueue.counter}`;\n   }\n\n   private static counter = 0;\n}\n", "import { spawn, SpawnOptions } from 'child_process';\nimport { GitError } from '../errors/git-error';\nimport { OutputLogger } from '../git-logger';\nimport { PluginStore } from '../plugins';\nimport { EmptyTask, isBufferTask, isEmptyTask } from '../tasks/task';\nimport {\n   GitExecutorResult,\n   Maybe,\n   outputHandler,\n   RunnableTask,\n   SimpleGitExecutor,\n   SimpleGitTask,\n} from '../types';\nimport { callTaskParser, first, GitOutputStreams, objectToString } from '../utils';\nimport { Scheduler } from './scheduler';\nimport { TasksPendingQueue } from './tasks-pending-queue';\n\nexport class GitExecutorChain implements SimpleGitExecutor {\n   private _chain: Promise<any> = Promise.resolve();\n   private _queue = new TasksPendingQueue();\n   private _cwd: string | undefined;\n\n   public get binary() {\n      return this._executor.binary;\n   }\n\n   public get cwd() {\n      return this._cwd || this._executor.cwd;\n   }\n\n   public set cwd(cwd: string) {\n      this._cwd = cwd;\n   }\n\n   public get env() {\n      return this._executor.env;\n   }\n\n   public get outputHandler() {\n      return this._executor.outputHandler;\n   }\n\n   constructor(\n      private _executor: SimpleGitExecutor,\n      private _scheduler: Scheduler,\n      private _plugins: PluginStore\n   ) {}\n\n   public chain() {\n      return this;\n   }\n\n   public push<R>(task: SimpleGitTask<R>): Promise<R> {\n      this._queue.push(task);\n\n      return (this._chain = this._chain.then(() => this.attemptTask(task)));\n   }\n\n   private async attemptTask<R>(task: SimpleGitTask<R>): Promise<void | R> {\n      const onScheduleComplete = await this._scheduler.next();\n      const onQueueComplete = () => this._queue.complete(task);\n\n      try {\n         const { logger } = this._queue.attempt(task);\n         return (await (isEmptyTask(task)\n            ? this.attemptEmptyTask(task, logger)\n            : this.attemptRemoteTask(task, logger))) as R;\n      } catch (e) {\n         throw this.onFatalException(task, e as Error);\n      } finally {\n         onQueueComplete();\n         onScheduleComplete();\n      }\n   }\n\n   private onFatalException<R>(task: SimpleGitTask<R>, e: Error) {\n      const gitError =\n         e instanceof GitError ? Object.assign(e, { task }) : new GitError(task, e && String(e));\n\n      this._chain = Promise.resolve();\n      this._queue.fatal(gitError);\n\n      return gitError;\n   }\n\n   private async attemptRemoteTask<R>(task: RunnableTask<R>, logger: OutputLogger) {\n      const args = this._plugins.exec(\n         'spawn.args',\n         [...task.commands],\n         pluginContext(task, task.commands)\n      );\n\n      const raw = await this.gitResponse(\n         task,\n         this.binary,\n         args,\n         this.outputHandler,\n         logger.step('SPAWN')\n      );\n      const outputStreams = await this.handleTaskData(task, args, raw, logger.step('HANDLE'));\n\n      logger(`passing response to task's parser as a %s`, task.format);\n\n      if (isBufferTask(task)) {\n         return callTaskParser(task.parser, outputStreams);\n      }\n\n      return callTaskParser(task.parser, outputStreams.asStrings());\n   }\n\n   private async attemptEmptyTask(task: EmptyTask, logger: OutputLogger) {\n      logger(`empty task bypassing child process to call to task's parser`);\n      return task.parser(this);\n   }\n\n   private handleTaskData<R>(\n      task: SimpleGitTask<R>,\n      args: string[],\n      result: GitExecutorResult,\n      logger: OutputLogger\n   ): Promise<GitOutputStreams> {\n      const { exitCode, rejection, stdOut, stdErr } = result;\n\n      return new Promise((done, fail) => {\n         logger(`Preparing to handle process response exitCode=%d stdOut=`, exitCode);\n\n         const { error } = this._plugins.exec(\n            'task.error',\n            { error: rejection },\n            {\n               ...pluginContext(task, args),\n               ...result,\n            }\n         );\n\n         if (error && task.onError) {\n            logger.info(`exitCode=%s handling with custom error handler`);\n\n            return task.onError(\n               result,\n               error,\n               (newStdOut) => {\n                  logger.info(`custom error handler treated as success`);\n                  logger(`custom error returned a %s`, objectToString(newStdOut));\n\n                  done(\n                     new GitOutputStreams(\n                        Array.isArray(newStdOut) ? Buffer.concat(newStdOut) : newStdOut,\n                        Buffer.concat(stdErr)\n                     )\n                  );\n               },\n               fail\n            );\n         }\n\n         if (error) {\n            logger.info(\n               `handling as error: exitCode=%s stdErr=%s rejection=%o`,\n               exitCode,\n               stdErr.length,\n               rejection\n            );\n            return fail(error);\n         }\n\n         logger.info(`retrieving task output complete`);\n         done(new GitOutputStreams(Buffer.concat(stdOut), Buffer.concat(stdErr)));\n      });\n   }\n\n   private async gitResponse<R>(\n      task: SimpleGitTask<R>,\n      command: string,\n      args: string[],\n      outputHandler: Maybe<outputHandler>,\n      logger: OutputLogger\n   ): Promise<GitExecutorResult> {\n      const outputLogger = logger.sibling('output');\n      const spawnOptions: SpawnOptions = this._plugins.exec(\n         'spawn.options',\n         {\n            cwd: this.cwd,\n            env: this.env,\n            windowsHide: true,\n         },\n         pluginContext(task, task.commands)\n      );\n\n      return new Promise((done) => {\n         const stdOut: Buffer[] = [];\n         const stdErr: Buffer[] = [];\n\n         logger.info(`%s %o`, command, args);\n         logger('%O', spawnOptions);\n\n         let rejection = this._beforeSpawn(task, args);\n         if (rejection) {\n            return done({\n               stdOut,\n               stdErr,\n               exitCode: 9901,\n               rejection,\n            });\n         }\n\n         this._plugins.exec('spawn.before', undefined, {\n            ...pluginContext(task, args),\n            kill(reason) {\n               rejection = reason || rejection;\n            },\n         });\n\n         const spawned = spawn(command, args, spawnOptions);\n\n         spawned.stdout!.on(\n            'data',\n            onDataReceived(stdOut, 'stdOut', logger, outputLogger.step('stdOut'))\n         );\n         spawned.stderr!.on(\n            'data',\n            onDataReceived(stdErr, 'stdErr', logger, outputLogger.step('stdErr'))\n         );\n\n         spawned.on('error', onErrorReceived(stdErr, logger));\n\n         if (outputHandler) {\n            logger(`Passing child process stdOut/stdErr to custom outputHandler`);\n            outputHandler(command, spawned.stdout!, spawned.stderr!, [...args]);\n         }\n\n         this._plugins.exec('spawn.after', undefined, {\n            ...pluginContext(task, args),\n            spawned,\n            close(exitCode: number, reason?: Error) {\n               done({\n                  stdOut,\n                  stdErr,\n                  exitCode,\n                  rejection: rejection || reason,\n               });\n            },\n            kill(reason: Error) {\n               if (spawned.killed) {\n                  return;\n               }\n\n               rejection = reason;\n               spawned.kill('SIGINT');\n            },\n         });\n      });\n   }\n\n   private _beforeSpawn<R>(task: SimpleGitTask<R>, args: string[]) {\n      let rejection: Maybe<Error>;\n      this._plugins.exec('spawn.before', undefined, {\n         ...pluginContext(task, args),\n         kill(reason) {\n            rejection = reason || rejection;\n         },\n      });\n\n      return rejection;\n   }\n}\n\nfunction pluginContext<R>(task: SimpleGitTask<R>, commands: string[]) {\n   return {\n      method: first(task.commands) || '',\n      commands,\n   };\n}\n\nfunction onErrorReceived(target: Buffer[], logger: OutputLogger) {\n   return (err: Error) => {\n      logger(`[ERROR] child process exception %o`, err);\n      target.push(Buffer.from(String(err.stack), 'ascii'));\n   };\n}\n\nfunction onDataReceived(\n   target: Buffer[],\n   name: string,\n   logger: OutputLogger,\n   output: OutputLogger\n) {\n   return (buffer: Buffer) => {\n      logger(`%s received %L bytes`, name, buffer);\n      output(`%B`, buffer);\n      target.push(buffer);\n   };\n}\n", "import type { PluginStore } from '../plugins';\nimport type { GitExecutorEnv, outputHandler, SimpleGitExecutor, SimpleGitTask } from '../types';\n\nimport { GitExecutorChain } from './git-executor-chain';\nimport { Scheduler } from './scheduler';\n\nexport class GitExecutor implements SimpleGitExecutor {\n   private _chain = new GitExecutorChain(this, this._scheduler, this._plugins);\n\n   public env: GitExecutorEnv;\n   public outputHandler?: outputHandler;\n\n   constructor(\n      public binary: string = 'git',\n      public cwd: string,\n      private _scheduler: Scheduler,\n      private _plugins: PluginStore\n   ) {}\n\n   chain(): SimpleGitExecutor {\n      return new GitExecutorChain(this, this._scheduler, this._plugins);\n   }\n\n   push<R>(task: SimpleGitTask<R>): Promise<R> {\n      return this._chain.push(task);\n   }\n}\n", "import { GitError } from './errors/git-error';\nimport { GitResponseError } from './errors/git-response-error';\nimport { SimpleGitTask, SimpleGitTaskCallback } from './types';\nimport { NOOP } from './utils';\n\nexport function taskCallback<R>(\n   task: SimpleGitTask<R>,\n   response: Promise<R>,\n   callback: SimpleGitTaskCallback<R> = NOOP\n) {\n   const onSuccess = (data: R) => {\n      callback(null, data);\n   };\n\n   const onError = (err: GitError | GitResponseError) => {\n      if (err?.task === task) {\n         callback(\n            err instanceof GitResponseError ? addDeprecationNoticeToError(err) : err,\n            undefined as any\n         );\n      }\n   };\n\n   response.then(onSuccess, onError);\n}\n\nfunction addDeprecationNoticeToError(err: GitResponseError) {\n   let log = (name: string) => {\n      console.warn(\n         `simple-git deprecation notice: accessing GitResponseError.${name} should be GitResponseError.git.${name}, this will no longer be available in version 3`\n      );\n      log = NOOP;\n   };\n\n   return Object.create(err, Object.getOwnPropertyNames(err.git).reduce(descriptorReducer, {}));\n\n   function descriptorReducer(all: PropertyDescriptorMap, name: string): typeof all {\n      if (name in err) {\n         return all;\n      }\n\n      all[name] = {\n         enumerable: false,\n         configurable: false,\n         get() {\n            log(name);\n            return err.git[name];\n         },\n      };\n\n      return all;\n   }\n}\n", "import { folderExists } from '../utils';\nimport { SimpleGitExecutor } from '../types';\nimport { adhocExecTask } from './task';\n\nexport function changeWorkingDirectoryTask(directory: string, root?: SimpleGitExecutor) {\n   return adhocExecTask((instance: SimpleGitExecutor) => {\n      if (!folderExists(directory)) {\n         throw new Error(`Git.cwd: cannot change to non-directory \"${directory}\"`);\n      }\n\n      return ((root || instance).cwd = directory);\n   });\n}\n", "import type { SimpleGit } from '../../../typings';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport { getTrailingOptions, remove, trailingFunctionArgument } from '../utils';\nimport { straightThroughStringTask } from './task';\n\nfunction checkoutTask(args: string[]) {\n   const commands = ['checkout', ...args];\n   if (commands[1] === '-b' && commands.includes('-B')) {\n      commands[1] = remove(commands, '-B');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport default function (): Pick<SimpleGit, 'checkout' | 'checkoutBranch' | 'checkoutLocalBranch'> {\n   return {\n      checkout(this: SimpleGitApi) {\n         return this._runTask(\n            checkoutTask(getTrailingOptions(arguments, 1)),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      checkoutBranch(this: SimpleGitApi, branchName, startPoint) {\n         return this._runTask(\n            checkoutTask(['-b', branchName, startPoint, ...getTrailingOptions(arguments)]),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      checkoutLocalBranch(this: SimpleGitApi, branchName) {\n         return this._runTask(\n            checkoutTask(['-b', branchName, ...getTrailingOptions(arguments)]),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n", "import { CommitResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<CommitResult>[] = [\n   new LineParser(/^\\[([^\\s]+)( \\([^)]+\\))? ([^\\]]+)/, (result, [branch, root, commit]) => {\n      result.branch = branch;\n      result.commit = commit;\n      result.root = !!root;\n   }),\n   new LineParser(/\\s*Author:\\s(.+)/i, (result, [author]) => {\n      const parts = author.split('<');\n      const email = parts.pop();\n\n      if (!email || !email.includes('@')) {\n         return;\n      }\n\n      result.author = {\n         email: email.substr(0, email.length - 1),\n         name: parts.join('<').trim(),\n      };\n   }),\n   new LineParser(\n      /(\\d+)[^,]*(?:,\\s*(\\d+)[^,]*)(?:,\\s*(\\d+))/g,\n      (result, [changes, insertions, deletions]) => {\n         result.summary.changes = parseInt(changes, 10) || 0;\n         result.summary.insertions = parseInt(insertions, 10) || 0;\n         result.summary.deletions = parseInt(deletions, 10) || 0;\n      }\n   ),\n   new LineParser(\n      /^(\\d+)[^,]*(?:,\\s*(\\d+)[^(]+\\(([+-]))?/,\n      (result, [changes, lines, direction]) => {\n         result.summary.changes = parseInt(changes, 10) || 0;\n         const count = parseInt(lines, 10) || 0;\n         if (direction === '-') {\n            result.summary.deletions = count;\n         } else if (direction === '+') {\n            result.summary.insertions = count;\n         }\n      }\n   ),\n];\n\nexport function parseCommitResult(stdOut: string): CommitResult {\n   const result: CommitResult = {\n      author: null,\n      branch: '',\n      commit: '',\n      root: false,\n      summary: {\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n      },\n   };\n   return parseStringResponse(result, parsers, stdOut);\n}\n", "import type { CommitResult, SimpleGit } from '../../../typings';\nimport type { SimpleGitApi } from '../simple-git-api';\nimport type { StringTask } from '../types';\nimport { parseCommitResult } from '../parsers/parse-commit';\nimport {\n   asArray,\n   filterArray,\n   filterStringOrStringArray,\n   filterType,\n   getTrailingOptions,\n   prefixedArray,\n   trailingFunctionArgument,\n} from '../utils';\nimport { configurationErrorTask } from './task';\n\nexport function commitTask(\n   message: string[],\n   files: string[],\n   customArgs: string[]\n): StringTask<CommitResult> {\n   const commands: string[] = [\n      '-c',\n      'core.abbrev=40',\n      'commit',\n      ...prefixedArray(message, '-m'),\n      ...files,\n      ...customArgs,\n   ];\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: parseCommitResult,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'commit'> {\n   return {\n      commit(this: SimpleGitApi, message: string | string[], ...rest: unknown[]) {\n         const next = trailingFunctionArgument(arguments);\n         const task =\n            rejectDeprecatedSignatures(message) ||\n            commitTask(\n               asArray(message),\n               asArray(filterType(rest[0], filterStringOrStringArray, [])),\n               [...filterType(rest[1], filterArray, []), ...getTrailingOptions(arguments, 0, true)]\n            );\n\n         return this._runTask(task, next);\n      },\n   };\n\n   function rejectDeprecatedSignatures(message?: unknown) {\n      return (\n         !filterStringOrStringArray(message) &&\n         configurationErrorTask(\n            `git.commit: requires the commit message to be supplied as a string/string[]`\n         )\n      );\n   }\n}\n", "import { Response, SimpleGit } from '../../../typings';\nimport { SimpleGitApi } from '../simple-git-api';\nimport { trailingFunctionArgument } from '../utils';\nimport { straightThroughStringTask } from './task';\n\nexport default function (): Pick<SimpleGit, 'firstCommit'> {\n   return {\n      firstCommit(this: SimpleGitApi): Response<string> {\n         return this._runTask(\n            straightThroughStringTask(['rev-list', '--max-parents=0', 'HEAD'], true),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n", "import { straightThroughStringTask } from './task';\nimport { StringTask } from '../types';\n\n/**\n * Task used by `git.hashObject`\n */\nexport function hashObjectTask(filePath: string, write: boolean): StringTask<string> {\n   const commands = ['hash-object', filePath];\n   if (write) {\n      commands.push('-w');\n   }\n\n   return straightThroughStringTask(commands, true);\n}\n", "import { InitResult } from '../../../typings';\n\nexport class InitSummary implements InitResult {\n   constructor(\n      public readonly bare: boolean,\n      public readonly path: string,\n      public readonly existing: boolean,\n      public readonly gitDir: string\n   ) {}\n}\n\nconst initResponseRegex = /^Init.+ repository in (.+)$/;\nconst reInitResponseRegex = /^Rein.+ in (.+)$/;\n\nexport function parseInit(bare: boolean, path: string, text: string) {\n   const response = String(text).trim();\n   let result;\n\n   if ((result = initResponseRegex.exec(response))) {\n      return new InitSummary(bare, path, false, result[1]);\n   }\n\n   if ((result = reInitResponseRegex.exec(response))) {\n      return new InitSummary(bare, path, true, result[1]);\n   }\n\n   let gitDir = '';\n   const tokens = response.split(' ');\n   while (tokens.length) {\n      const token = tokens.shift();\n      if (token === 'in') {\n         gitDir = tokens.join(' ');\n         break;\n      }\n   }\n\n   return new InitSummary(bare, path, /^re/i.test(response), gitDir);\n}\n", "import { InitResult } from '../../../typings';\nimport { parseInit } from '../responses/InitSummary';\nimport { StringTask } from '../types';\n\nconst bareCommand = '--bare';\n\nfunction hasBareCommand(command: string[]) {\n   return command.includes(bareCommand);\n}\n\nexport function initTask(bare = false, path: string, customArgs: string[]): StringTask<InitResult> {\n   const commands = ['init', ...customArgs];\n   if (bare && !hasBareCommand(commands)) {\n      commands.splice(1, 0, bareCommand);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(text: string): InitResult {\n         return parseInit(commands.includes('--bare'), path, text);\n      },\n   };\n}\n", "export enum LogFormat {\n   NONE = '',\n   STAT = '--stat',\n   NUM_STAT = '--numstat',\n   NAME_ONLY = '--name-only',\n   NAME_STATUS = '--name-status',\n}\n\nconst logFormatRegex = /^--(stat|numstat|name-only|name-status)(=|$)/;\n\nexport function logFormatFromCommand(customArgs: string[]) {\n   for (let i = 0; i < customArgs.length; i++) {\n      const format = logFormatRegex.exec(customArgs[i]);\n      if (format) {\n         return `--${format[1]}` as LogFormat;\n      }\n   }\n\n   return LogFormat.NONE;\n}\n\nexport function isLogFormat(customArg: string | unknown) {\n   return logFormatRegex.test(customArg as string);\n}\n", "import { DiffResult, DiffResultBinaryFile, DiffResultTextFile } from '../../../typings';\n\n/***\n * The DiffSummary is returned as a response to getting `git().status()`\n */\nexport class DiffSummary implements DiffResult {\n   changed = 0;\n   deletions = 0;\n   insertions = 0;\n\n   files: Array<DiffResultTextFile | DiffResultBinaryFile> = [];\n}\n", "import { DiffResult } from '../../../typings';\nimport { LogFormat } from '../args/log-format';\nimport { DiffSummary } from '../responses/DiffSummary';\nimport { asNumber, LineParser, parseStringResponse } from '../utils';\n\nconst statParser = [\n   new LineParser<DiffResult>(\n      /(.+)\\s+\\|\\s+(\\d+)(\\s+[+\\-]+)?$/,\n      (result, [file, changes, alterations = '']) => {\n         result.files.push({\n            file: file.trim(),\n            changes: asNumber(changes),\n            insertions: alterations.replace(/[^+]/g, '').length,\n            deletions: alterations.replace(/[^-]/g, '').length,\n            binary: false,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(\n      /(.+) \\|\\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,\n      (result, [file, before, after]) => {\n         result.files.push({\n            file: file.trim(),\n            before: asNumber(before),\n            after: asNumber(after),\n            binary: true,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(\n      /(\\d+) files? changed\\s*((?:, \\d+ [^,]+){0,2})/,\n      (result, [changed, summary]) => {\n         const inserted = /(\\d+) i/.exec(summary);\n         const deleted = /(\\d+) d/.exec(summary);\n\n         result.changed = asNumber(changed);\n         result.insertions = asNumber(inserted?.[1]);\n         result.deletions = asNumber(deleted?.[1]);\n      }\n   ),\n];\n\nconst numStatParser = [\n   new LineParser<DiffResult>(\n      /(\\d+)\\t(\\d+)\\t(.+)$/,\n      (result, [changesInsert, changesDelete, file]) => {\n         const insertions = asNumber(changesInsert);\n         const deletions = asNumber(changesDelete);\n\n         result.changed++;\n         result.insertions += insertions;\n         result.deletions += deletions;\n\n         result.files.push({\n            file,\n            changes: insertions + deletions,\n            insertions,\n            deletions,\n            binary: false,\n         });\n      }\n   ),\n   new LineParser<DiffResult>(/-\\t-\\t(.+)$/, (result, [file]) => {\n      result.changed++;\n\n      result.files.push({\n         file,\n         after: 0,\n         before: 0,\n         binary: true,\n      });\n   }),\n];\n\nconst nameOnlyParser = [\n   new LineParser<DiffResult>(/(.+)$/, (result, [file]) => {\n      result.changed++;\n      result.files.push({\n         file,\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n         binary: false,\n      });\n   }),\n];\n\nconst nameStatusParser = [\n   new LineParser<DiffResult>(/([ACDMRTUXB])\\s*(.+)$/, (result, [_status, file]) => {\n      result.changed++;\n      result.files.push({\n         file,\n         changes: 0,\n         insertions: 0,\n         deletions: 0,\n         binary: false,\n      });\n   }),\n];\n\nconst diffSummaryParsers: Record<LogFormat, LineParser<DiffResult>[]> = {\n   [LogFormat.NONE]: statParser,\n   [LogFormat.STAT]: statParser,\n   [LogFormat.NUM_STAT]: numStatParser,\n   [LogFormat.NAME_STATUS]: nameStatusParser,\n   [LogFormat.NAME_ONLY]: nameOnlyParser,\n};\n\nexport function getDiffParser(format = LogFormat.NONE) {\n   const parser = diffSummaryParsers[format];\n\n   return (stdOut: string) => parseStringResponse(new DiffSummary(), parser, stdOut, false);\n}\n", "import { ListLogLine, LogResult } from '../../../typings';\nimport { toLinesWithContent } from '../utils';\nimport { getDiffParser } from './parse-diff-summary';\nimport { LogFormat } from '../args/log-format';\n\nexport const START_BOUNDARY = '\u00F2\u00F2\u00F2\u00F2\u00F2\u00F2 ';\n\nexport const COMMIT_BOUNDARY = ' \u00F2\u00F2';\n\nexport const SPLITTER = ' \u00F2 ';\n\nconst defaultFieldNames = ['hash', 'date', 'message', 'refs', 'author_name', 'author_email'];\n\nfunction lineBuilder(tokens: string[], fields: string[]): any {\n   return fields.reduce(\n      (line, field, index) => {\n         line[field] = tokens[index] || '';\n         return line;\n      },\n      Object.create({ diff: null }) as any\n   );\n}\n\nexport function createListLogSummaryParser<T = any>(\n   splitter = SPLITTER,\n   fields = defaultFieldNames,\n   logFormat = LogFormat.NONE\n) {\n   const parseDiffResult = getDiffParser(logFormat);\n\n   return function (stdOut: string): LogResult<T> {\n      const all: ReadonlyArray<T & ListLogLine> = toLinesWithContent(\n         stdOut,\n         true,\n         START_BOUNDARY\n      ).map(function (item) {\n         const lineDetail = item.trim().split(COMMIT_BOUNDARY);\n         const listLogLine: T & ListLogLine = lineBuilder(\n            lineDetail[0].trim().split(splitter),\n            fields\n         );\n\n         if (lineDetail.length > 1 && !!lineDetail[1].trim()) {\n            listLogLine.diff = parseDiffResult(lineDetail[1]);\n         }\n\n         return listLogLine;\n      });\n\n      return {\n         all,\n         latest: (all.length && all[0]) || null,\n         total: all.length,\n      };\n   };\n}\n", "import { StringTask } from '../types';\nimport { DiffResult } from '../../../typings';\nimport { isLogFormat, LogFormat, logFormatFromCommand } from '../args/log-format';\nimport { getDiffParser } from '../parsers/parse-diff-summary';\nimport { configurationErrorTask, EmptyTask } from './task';\n\nexport function diffSummaryTask(customArgs: string[]): StringTask<DiffResult> | EmptyTask {\n   let logFormat = logFormatFromCommand(customArgs);\n\n   const commands = ['diff'];\n\n   if (logFormat === LogFormat.NONE) {\n      logFormat = LogFormat.STAT;\n      commands.push('--stat=4096');\n   }\n\n   commands.push(...customArgs);\n\n   return (\n      validateLogFormatConfig(commands) || {\n         commands,\n         format: 'utf-8',\n         parser: getDiffParser(logFormat),\n      }\n   );\n}\n\nexport function validateLogFormatConfig(customArgs: unknown[]): EmptyTask | void {\n   const flags = customArgs.filter(isLogFormat);\n\n   if (flags.length > 1) {\n      return configurationErrorTask(\n         `Summary flags are mutually exclusive - pick one of ${flags.join(',')}`\n      );\n   }\n\n   if (flags.length && customArgs.includes('-z')) {\n      return configurationErrorTask(\n         `Summary flag ${flags} parsing is not compatible with null termination option '-z'`\n      );\n   }\n}\n", "import type { Options, StringTask } from '../types';\nimport type { LogResult, SimpleGit } from '../../../typings';\nimport { logFormatFromCommand } from '../args/log-format';\nimport { pathspec } from '../args/pathspec';\nimport {\n   COMMIT_BOUNDARY,\n   createListLogSummaryParser,\n   SPLITTER,\n   START_BOUNDARY,\n} from '../parsers/parse-list-log-summary';\nimport {\n   appendTaskOptions,\n   filterArray,\n   filterPrimitives,\n   filterString,\n   filterType,\n   trailingFunctionArgument,\n   trailingOptionsArgument,\n} from '../utils';\nimport { SimpleGitApi } from '../simple-git-api';\nimport { configurationErrorTask } from './task';\nimport { validateLogFormatConfig } from './diff';\n\nenum excludeOptions {\n   '--pretty',\n   'max-count',\n   'maxCount',\n   'n',\n   'file',\n   'format',\n   'from',\n   'to',\n   'splitter',\n   'symmetric',\n   'mailMap',\n   'multiLine',\n   'strictDate',\n}\n\nexport interface DefaultLogFields {\n   hash: string;\n   date: string;\n   message: string;\n   refs: string;\n   body: string;\n   author_name: string;\n   author_email: string;\n}\n\nexport type LogOptions<T = DefaultLogFields> = {\n   file?: string;\n   format?: T;\n   from?: string;\n   mailMap?: boolean;\n   maxCount?: number;\n   multiLine?: boolean;\n   splitter?: string;\n   strictDate?: boolean;\n   symmetric?: boolean;\n   to?: string;\n};\n\ninterface ParsedLogOptions {\n   fields: string[];\n   splitter: string;\n   commands: string[];\n}\n\nfunction prettyFormat(\n   format: Record<string, string | unknown>,\n   splitter: string\n): [string[], string] {\n   const fields: string[] = [];\n   const formatStr: string[] = [];\n\n   Object.keys(format).forEach((field) => {\n      fields.push(field);\n      formatStr.push(String(format[field]));\n   });\n\n   return [fields, formatStr.join(splitter)];\n}\n\nfunction userOptions<T extends Options>(input: T): Options {\n   return Object.keys(input).reduce((out, key) => {\n      if (!(key in excludeOptions)) {\n         out[key] = input[key];\n      }\n      return out;\n   }, {} as Options);\n}\n\nexport function parseLogOptions<T extends Options>(\n   opt: Options | LogOptions<T> = {},\n   customArgs: string[] = []\n): ParsedLogOptions {\n   const splitter = filterType(opt.splitter, filterString, SPLITTER);\n   const format =\n      !filterPrimitives(opt.format) && opt.format\n         ? opt.format\n         : {\n              hash: '%H',\n              date: opt.strictDate === false ? '%ai' : '%aI',\n              message: '%s',\n              refs: '%D',\n              body: opt.multiLine ? '%B' : '%b',\n              author_name: opt.mailMap !== false ? '%aN' : '%an',\n              author_email: opt.mailMap !== false ? '%aE' : '%ae',\n           };\n\n   const [fields, formatStr] = prettyFormat(format, splitter);\n\n   const suffix: string[] = [];\n   const command: string[] = [\n      `--pretty=format:${START_BOUNDARY}${formatStr}${COMMIT_BOUNDARY}`,\n      ...customArgs,\n   ];\n\n   const maxCount: number | undefined = (opt as any).n || (opt as any)['max-count'] || opt.maxCount;\n   if (maxCount) {\n      command.push(`--max-count=${maxCount}`);\n   }\n\n   if (opt.from || opt.to) {\n      const rangeOperator = opt.symmetric !== false ? '...' : '..';\n      suffix.push(`${opt.from || ''}${rangeOperator}${opt.to || ''}`);\n   }\n\n   if (filterString(opt.file)) {\n      command.push('--follow', pathspec(opt.file));\n   }\n\n   appendTaskOptions(userOptions(opt as Options), command);\n\n   return {\n      fields,\n      splitter,\n      commands: [...command, ...suffix],\n   };\n}\n\nexport function logTask<T>(\n   splitter: string,\n   fields: string[],\n   customArgs: string[]\n): StringTask<LogResult<T>> {\n   const parser = createListLogSummaryParser(splitter, fields, logFormatFromCommand(customArgs));\n\n   return {\n      commands: ['log', ...customArgs],\n      format: 'utf-8',\n      parser,\n   };\n}\n\nexport default function (): Pick<SimpleGit, 'log'> {\n   return {\n      log<T extends Options>(this: SimpleGitApi, ...rest: unknown[]) {\n         const next = trailingFunctionArgument(arguments);\n         const options = parseLogOptions<T>(\n            trailingOptionsArgument(arguments),\n            filterType(arguments[0], filterArray)\n         );\n         const task =\n            rejectDeprecatedSignatures(...rest) ||\n            validateLogFormatConfig(options.commands) ||\n            createLogTask(options);\n\n         return this._runTask(task, next);\n      },\n   };\n\n   function createLogTask(options: ParsedLogOptions) {\n      return logTask(options.splitter, options.fields, options.commands);\n   }\n\n   function rejectDeprecatedSignatures(from?: unknown, to?: unknown) {\n      return (\n         filterString(from) &&\n         filterString(to) &&\n         configurationErrorTask(\n            `git.log(string, string) should be replaced with git.log({ from: string, to: string })`\n         )\n      );\n   }\n}\n", "import {\n   MergeConflict,\n   MergeConflictDeletion,\n   MergeDetail,\n   MergeResultStatus,\n} from '../../../typings';\n\nexport class MergeSummaryConflict implements MergeConflict {\n   constructor(\n      public readonly reason: string,\n      public readonly file: string | null = null,\n      public readonly meta?: MergeConflictDeletion\n   ) {}\n\n   toString() {\n      return `${this.file}:${this.reason}`;\n   }\n}\n\nexport class MergeSummaryDetail implements MergeDetail {\n   public conflicts: MergeConflict[] = [];\n   public merges: string[] = [];\n   public result: MergeResultStatus = 'success';\n\n   get failed() {\n      return this.conflicts.length > 0;\n   }\n\n   get reason() {\n      return this.result;\n   }\n\n   toString() {\n      if (this.conflicts.length) {\n         return `CONFLICTS: ${this.conflicts.join(', ')}`;\n      }\n\n      return 'OK';\n   }\n}\n", "import {\n   PullDetailFileChanges,\n   PullDetailSummary,\n   PullFailedResult,\n   PullResult,\n} from '../../../typings';\n\nexport class PullSummary implements PullResult {\n   public remoteMessages = {\n      all: [],\n   };\n   public created = [];\n   public deleted: string[] = [];\n   public files: string[] = [];\n   public deletions: PullDetailFileChanges = {};\n   public insertions: PullDetailFileChanges = {};\n   public summary: PullDetailSummary = {\n      changes: 0,\n      deletions: 0,\n      insertions: 0,\n   };\n}\n\nexport class PullFailedSummary implements PullFailedResult {\n   remote = '';\n   hash = {\n      local: '',\n      remote: '',\n   };\n   branch = {\n      local: '',\n      remote: '',\n   };\n   message = '';\n\n   toString() {\n      return this.message;\n   }\n}\n", "import {\n   RemoteMessageResult,\n   RemoteMessages,\n   RemoteMessagesObjectEnumeration,\n} from '../../../typings';\nimport { asNumber, RemoteLineParser } from '../utils';\n\nfunction objectEnumerationResult<T extends RemoteMessages = RemoteMessages>(\n   remoteMessages: T\n): RemoteMessagesObjectEnumeration {\n   return (remoteMessages.objects = remoteMessages.objects || {\n      compressing: 0,\n      counting: 0,\n      enumerating: 0,\n      packReused: 0,\n      reused: { count: 0, delta: 0 },\n      total: { count: 0, delta: 0 },\n   });\n}\n\nfunction asObjectCount(source: string) {\n   const count = /^\\s*(\\d+)/.exec(source);\n   const delta = /delta (\\d+)/i.exec(source);\n\n   return {\n      count: asNumber((count && count[1]) || '0'),\n      delta: asNumber((delta && delta[1]) || '0'),\n   };\n}\n\nexport const remoteMessagesObjectParsers: RemoteLineParser<RemoteMessageResult<RemoteMessages>>[] =\n   [\n      new RemoteLineParser(\n         /^remote:\\s*(enumerating|counting|compressing) objects: (\\d+),/i,\n         (result, [action, count]) => {\n            const key = action.toLowerCase();\n            const enumeration = objectEnumerationResult(result.remoteMessages);\n\n            Object.assign(enumeration, { [key]: asNumber(count) });\n         }\n      ),\n      new RemoteLineParser(\n         /^remote:\\s*(enumerating|counting|compressing) objects: \\d+% \\(\\d+\\/(\\d+)\\),/i,\n         (result, [action, count]) => {\n            const key = action.toLowerCase();\n            const enumeration = objectEnumerationResult(result.remoteMessages);\n\n            Object.assign(enumeration, { [key]: asNumber(count) });\n         }\n      ),\n      new RemoteLineParser(\n         /total ([^,]+), reused ([^,]+), pack-reused (\\d+)/i,\n         (result, [total, reused, packReused]) => {\n            const objects = objectEnumerationResult(result.remoteMessages);\n            objects.total = asObjectCount(total);\n            objects.reused = asObjectCount(reused);\n            objects.packReused = asNumber(packReused);\n         }\n      ),\n   ];\n", "import { PushResultRemoteMessages, RemoteMessageResult, RemoteMessages } from '../../../typings';\nimport { asNumber, parseStringResponse, RemoteLineParser } from '../utils';\nimport { remoteMessagesObjectParsers } from './parse-remote-objects';\n\nconst parsers: RemoteLineParser<RemoteMessageResult<PushResultRemoteMessages | RemoteMessages>>[] =\n   [\n      new RemoteLineParser(/^remote:\\s*(.+)$/, (result, [text]) => {\n         result.remoteMessages.all.push(text.trim());\n         return false;\n      }),\n      ...remoteMessagesObjectParsers,\n      new RemoteLineParser(\n         [/create a (?:pull|merge) request/i, /\\s(https?:\\/\\/\\S+)$/],\n         (result, [pullRequestUrl]) => {\n            (result.remoteMessages as PushResultRemoteMessages).pullRequestUrl = pullRequestUrl;\n         }\n      ),\n      new RemoteLineParser(\n         [/found (\\d+) vulnerabilities.+\\(([^)]+)\\)/i, /\\s(https?:\\/\\/\\S+)$/],\n         (result, [count, summary, url]) => {\n            (result.remoteMessages as PushResultRemoteMessages).vulnerabilities = {\n               count: asNumber(count),\n               summary,\n               url,\n            };\n         }\n      ),\n   ];\n\nexport function parseRemoteMessages<T extends RemoteMessages = RemoteMessages>(\n   _stdOut: string,\n   stdErr: string\n): RemoteMessageResult {\n   return parseStringResponse({ remoteMessages: new RemoteMessageSummary() as T }, parsers, stdErr);\n}\n\nexport class RemoteMessageSummary implements RemoteMessages {\n   public readonly all: string[] = [];\n}\n", "import { PullDetail, PullFailedResult, PullResult, RemoteMessages } from '../../../typings';\nimport { PullFailedSummary, PullSummary } from '../responses/PullSummary';\nimport { TaskParser } from '../types';\nimport { append, LineParser, parseStringResponse } from '../utils';\nimport { parseRemoteMessages } from './parse-remote-messages';\n\nconst FILE_UPDATE_REGEX = /^\\s*(.+?)\\s+\\|\\s+\\d+\\s*(\\+*)(-*)/;\nconst SUMMARY_REGEX = /(\\d+)\\D+((\\d+)\\D+\\(\\+\\))?(\\D+(\\d+)\\D+\\(-\\))?/;\nconst ACTION_REGEX = /^(create|delete) mode \\d+ (.+)/;\n\nconst parsers: LineParser<PullResult>[] = [\n   new LineParser(FILE_UPDATE_REGEX, (result, [file, insertions, deletions]) => {\n      result.files.push(file);\n\n      if (insertions) {\n         result.insertions[file] = insertions.length;\n      }\n\n      if (deletions) {\n         result.deletions[file] = deletions.length;\n      }\n   }),\n   new LineParser(SUMMARY_REGEX, (result, [changes, , insertions, , deletions]) => {\n      if (insertions !== undefined || deletions !== undefined) {\n         result.summary.changes = +changes || 0;\n         result.summary.insertions = +insertions || 0;\n         result.summary.deletions = +deletions || 0;\n         return true;\n      }\n      return false;\n   }),\n   new LineParser(ACTION_REGEX, (result, [action, file]) => {\n      append(result.files, file);\n      append(action === 'create' ? result.created : result.deleted, file);\n   }),\n];\n\nconst errorParsers: LineParser<PullFailedResult>[] = [\n   new LineParser(/^from\\s(.+)$/i, (result, [remote]) => void (result.remote = remote)),\n   new LineParser(/^fatal:\\s(.+)$/, (result, [message]) => void (result.message = message)),\n   new LineParser(\n      /([a-z0-9]+)\\.\\.([a-z0-9]+)\\s+(\\S+)\\s+->\\s+(\\S+)$/,\n      (result, [hashLocal, hashRemote, branchLocal, branchRemote]) => {\n         result.branch.local = branchLocal;\n         result.hash.local = hashLocal;\n         result.branch.remote = branchRemote;\n         result.hash.remote = hashRemote;\n      }\n   ),\n];\n\nexport const parsePullDetail: TaskParser<string, PullDetail> = (stdOut, stdErr) => {\n   return parseStringResponse(new PullSummary(), parsers, [stdOut, stdErr]);\n};\n\nexport const parsePullResult: TaskParser<string, PullResult> = (stdOut, stdErr) => {\n   return Object.assign(\n      new PullSummary(),\n      parsePullDetail(stdOut, stdErr),\n      parseRemoteMessages<RemoteMessages>(stdOut, stdErr)\n   );\n};\n\nexport function parsePullErrorResult(stdOut: string, stdErr: string) {\n   const pullError = parseStringResponse(new PullFailedSummary(), errorParsers, [stdOut, stdErr]);\n\n   return pullError.message && pullError;\n}\n", "import { MergeDetail, MergeResult } from '../../../typings';\nimport { MergeSummaryConflict, MergeSummaryDetail } from '../responses/MergeSummary';\nimport { TaskParser } from '../types';\nimport { LineParser, parseStringResponse } from '../utils';\nimport { parsePullResult } from './parse-pull';\n\nconst parsers: LineParser<MergeDetail>[] = [\n   new LineParser(/^Auto-merging\\s+(.+)$/, (summary, [autoMerge]) => {\n      summary.merges.push(autoMerge);\n   }),\n   new LineParser(/^CONFLICT\\s+\\((.+)\\): Merge conflict in (.+)$/, (summary, [reason, file]) => {\n      summary.conflicts.push(new MergeSummaryConflict(reason, file));\n   }),\n   new LineParser(\n      /^CONFLICT\\s+\\((.+\\/delete)\\): (.+) deleted in (.+) and/,\n      (summary, [reason, file, deleteRef]) => {\n         summary.conflicts.push(new MergeSummaryConflict(reason, file, { deleteRef }));\n      }\n   ),\n   new LineParser(/^CONFLICT\\s+\\((.+)\\):/, (summary, [reason]) => {\n      summary.conflicts.push(new MergeSummaryConflict(reason, null));\n   }),\n   new LineParser(/^Automatic merge failed;\\s+(.+)$/, (summary, [result]) => {\n      summary.result = result;\n   }),\n];\n\n/**\n * Parse the complete response from `git.merge`\n */\nexport const parseMergeResult: TaskParser<string, MergeResult> = (stdOut, stdErr) => {\n   return Object.assign(parseMergeDetail(stdOut, stdErr), parsePullResult(stdOut, stdErr));\n};\n\n/**\n * Parse the merge specific detail (ie: not the content also available in the pull detail) from `git.mnerge`\n * @param stdOut\n */\nexport const parseMergeDetail: TaskParser<string, MergeDetail> = (stdOut) => {\n   return parseStringResponse(new MergeSummaryDetail(), parsers, stdOut);\n};\n", "import { MergeResult } from '../../../typings';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { parseMergeResult } from '../parsers/parse-merge';\nimport { StringTask } from '../types';\nimport { configurationErrorTask, EmptyTask } from './task';\n\nexport function mergeTask(customArgs: string[]): EmptyTask | StringTask<MergeResult> {\n   if (!customArgs.length) {\n      return configurationErrorTask('Git.merge requires at least one option');\n   }\n\n   return {\n      commands: ['merge', ...customArgs],\n      format: 'utf-8',\n      parser(stdOut, stdErr): MergeResult {\n         const merge = parseMergeResult(stdOut, stdErr);\n         if (merge.failed) {\n            throw new GitResponseError(merge);\n         }\n\n         return merge;\n      },\n   };\n}\n", "import {\n   PushDetail,\n   PushResult,\n   PushResultPushedItem,\n   PushResultRemoteMessages,\n} from '../../../typings';\nimport { TaskParser } from '../types';\nimport { LineParser, parseStringResponse } from '../utils';\nimport { parseRemoteMessages } from './parse-remote-messages';\n\nfunction pushResultPushedItem(local: string, remote: string, status: string): PushResultPushedItem {\n   const deleted = status.includes('deleted');\n   const tag = status.includes('tag') || /^refs\\/tags/.test(local);\n   const alreadyUpdated = !status.includes('new');\n\n   return {\n      deleted,\n      tag,\n      branch: !tag,\n      new: !alreadyUpdated,\n      alreadyUpdated,\n      local,\n      remote,\n   };\n}\n\nconst parsers: LineParser<PushDetail>[] = [\n   new LineParser(/^Pushing to (.+)$/, (result, [repo]) => {\n      result.repo = repo;\n   }),\n   new LineParser(/^updating local tracking ref '(.+)'/, (result, [local]) => {\n      result.ref = {\n         ...(result.ref || {}),\n         local,\n      };\n   }),\n   new LineParser(/^[=*-]\\s+([^:]+):(\\S+)\\s+\\[(.+)]$/, (result, [local, remote, type]) => {\n      result.pushed.push(pushResultPushedItem(local, remote, type));\n   }),\n   new LineParser(\n      /^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,\n      (result, [local, remote, remoteName]) => {\n         result.branch = {\n            ...(result.branch || {}),\n            local,\n            remote,\n            remoteName,\n         };\n      }\n   ),\n   new LineParser(\n      /^([^:]+):(\\S+)\\s+([a-z0-9]+)\\.\\.([a-z0-9]+)$/,\n      (result, [local, remote, from, to]) => {\n         result.update = {\n            head: {\n               local,\n               remote,\n            },\n            hash: {\n               from,\n               to,\n            },\n         };\n      }\n   ),\n];\n\nexport const parsePushResult: TaskParser<string, PushResult> = (stdOut, stdErr) => {\n   const pushDetail = parsePushDetail(stdOut, stdErr);\n   const responseDetail = parseRemoteMessages<PushResultRemoteMessages>(stdOut, stdErr);\n\n   return {\n      ...pushDetail,\n      ...responseDetail,\n   };\n};\n\nexport const parsePushDetail: TaskParser<string, PushDetail> = (stdOut, stdErr) => {\n   return parseStringResponse({ pushed: [] }, parsers, [stdOut, stdErr]);\n};\n", "import { PushResult } from '../../../typings';\nimport { parsePushResult as parser } from '../parsers/parse-push';\nimport { StringTask } from '../types';\nimport { append, remove } from '../utils';\n\ntype PushRef = { remote?: string; branch?: string };\n\nexport function pushTagsTask(ref: PushRef = {}, customArgs: string[]): StringTask<PushResult> {\n   append(customArgs, '--tags');\n   return pushTask(ref, customArgs);\n}\n\nexport function pushTask(ref: PushRef = {}, customArgs: string[]): StringTask<PushResult> {\n   const commands = ['push', ...customArgs];\n   if (ref.branch) {\n      commands.splice(1, 0, ref.branch);\n   }\n   if (ref.remote) {\n      commands.splice(1, 0, ref.remote);\n   }\n\n   remove(commands, '-v');\n   append(commands, '--verbose');\n   append(commands, '--porcelain');\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser,\n   };\n}\n", "import { SimpleGit } from '../../../typings';\nimport { SimpleGitApi } from '../simple-git-api';\nimport { getTrailingOptions, trailingFunctionArgument } from '../utils';\nimport { straightThroughBufferTask, straightThroughStringTask } from './task';\n\nexport default function (): Pick<SimpleGit, 'showBuffer' | 'show'> {\n   return {\n      showBuffer(this: SimpleGitApi) {\n         const commands = ['show', ...getTrailingOptions(arguments, 1)];\n         if (!commands.includes('--binary')) {\n            commands.splice(1, 0, '--binary');\n         }\n\n         return this._runTask(\n            straightThroughBufferTask(commands),\n            trailingFunctionArgument(arguments)\n         );\n      },\n\n      show(this: SimpleGitApi) {\n         const commands = ['show', ...getTrailingOptions(arguments, 1)];\n         return this._runTask(\n            straightThroughStringTask(commands),\n            trailingFunctionArgument(arguments)\n         );\n      },\n   };\n}\n", "import { FileStatusResult } from '../../../typings';\n\nexport const fromPathRegex = /^(.+) -> (.+)$/;\n\nexport class FileStatusSummary implements FileStatusResult {\n   public readonly from: string | undefined;\n\n   constructor(\n      public path: string,\n      public index: string,\n      public working_dir: string\n   ) {\n      if ('R' === index + working_dir) {\n         const detail = fromPathRegex.exec(path) || [null, path, path];\n         this.from = detail[1] || '';\n         this.path = detail[2] || '';\n      }\n   }\n}\n", "import { StatusResult } from '../../../typings';\nimport { append, NULL } from '../utils';\nimport { FileStatusSummary } from './FileStatusSummary';\n\ntype StatusLineParser = (result: StatusResult, file: string) => void;\n\nexport class StatusSummary implements StatusResult {\n   public not_added = [];\n   public conflicted = [];\n   public created = [];\n   public deleted = [];\n   public ignored = undefined;\n   public modified = [];\n   public renamed = [];\n   public files = [];\n   public staged = [];\n   public ahead = 0;\n   public behind = 0;\n   public current = null;\n   public tracking = null;\n   public detached = false;\n\n   public isClean = () => {\n      return !this.files.length;\n   };\n}\n\nenum PorcelainFileStatus {\n   ADDED = 'A',\n   DELETED = 'D',\n   MODIFIED = 'M',\n   RENAMED = 'R',\n   COPIED = 'C',\n   UNMERGED = 'U',\n   UNTRACKED = '?',\n   IGNORED = '!',\n   NONE = ' ',\n}\n\nfunction renamedFile(line: string) {\n   const [to, from] = line.split(NULL);\n\n   return {\n      from: from || to,\n      to,\n   };\n}\n\nfunction parser(\n   indexX: PorcelainFileStatus,\n   indexY: PorcelainFileStatus,\n   handler: StatusLineParser\n): [string, StatusLineParser] {\n   return [`${indexX}${indexY}`, handler];\n}\n\nfunction conflicts(indexX: PorcelainFileStatus, ...indexY: PorcelainFileStatus[]) {\n   return indexY.map((y) => parser(indexX, y, (result, file) => append(result.conflicted, file)));\n}\n\nconst parsers: Map<string, StatusLineParser> = new Map([\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.ADDED, (result, file) =>\n      append(result.created, file)\n   ),\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.DELETED, (result, file) =>\n      append(result.deleted, file)\n   ),\n   parser(PorcelainFileStatus.NONE, PorcelainFileStatus.MODIFIED, (result, file) =>\n      append(result.modified, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.created, file) && append(result.staged, file)\n   ),\n   parser(\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.MODIFIED,\n      (result, file) =>\n         append(result.created, file) &&\n         append(result.staged, file) &&\n         append(result.modified, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.deleted, file) && append(result.staged, file)\n   ),\n\n   parser(\n      PorcelainFileStatus.MODIFIED,\n      PorcelainFileStatus.NONE,\n      (result, file) => append(result.modified, file) && append(result.staged, file)\n   ),\n   parser(\n      PorcelainFileStatus.MODIFIED,\n      PorcelainFileStatus.MODIFIED,\n      (result, file) => append(result.modified, file) && append(result.staged, file)\n   ),\n\n   parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.NONE, (result, file) => {\n      append(result.renamed, renamedFile(file));\n   }),\n   parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.MODIFIED, (result, file) => {\n      const renamed = renamedFile(file);\n      append(result.renamed, renamed);\n      append(result.modified, renamed.to);\n   }),\n   parser(PorcelainFileStatus.IGNORED, PorcelainFileStatus.IGNORED, (_result, _file) => {\n      append((_result.ignored = _result.ignored || []), _file);\n   }),\n\n   parser(PorcelainFileStatus.UNTRACKED, PorcelainFileStatus.UNTRACKED, (result, file) =>\n      append(result.not_added, file)\n   ),\n\n   ...conflicts(PorcelainFileStatus.ADDED, PorcelainFileStatus.ADDED, PorcelainFileStatus.UNMERGED),\n   ...conflicts(\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.UNMERGED\n   ),\n   ...conflicts(\n      PorcelainFileStatus.UNMERGED,\n      PorcelainFileStatus.ADDED,\n      PorcelainFileStatus.DELETED,\n      PorcelainFileStatus.UNMERGED\n   ),\n\n   [\n      '##',\n      (result, line) => {\n         const aheadReg = /ahead (\\d+)/;\n         const behindReg = /behind (\\d+)/;\n         const currentReg = /^(.+?(?=(?:\\.{3}|\\s|$)))/;\n         const trackingReg = /\\.{3}(\\S*)/;\n         const onEmptyBranchReg = /\\son\\s([\\S]+)$/;\n         let regexResult;\n\n         regexResult = aheadReg.exec(line);\n         result.ahead = (regexResult && +regexResult[1]) || 0;\n\n         regexResult = behindReg.exec(line);\n         result.behind = (regexResult && +regexResult[1]) || 0;\n\n         regexResult = currentReg.exec(line);\n         result.current = regexResult && regexResult[1];\n\n         regexResult = trackingReg.exec(line);\n         result.tracking = regexResult && regexResult[1];\n\n         regexResult = onEmptyBranchReg.exec(line);\n         result.current = (regexResult && regexResult[1]) || result.current;\n\n         result.detached = /\\(no branch\\)/.test(line);\n      },\n   ],\n]);\n\nexport const parseStatusSummary = function (text: string): StatusResult {\n   const lines = text.split(NULL);\n   const status = new StatusSummary();\n\n   for (let i = 0, l = lines.length; i < l; ) {\n      let line = lines[i++].trim();\n\n      if (!line) {\n         continue;\n      }\n\n      if (line.charAt(0) === PorcelainFileStatus.RENAMED) {\n         line += NULL + (lines[i++] || '');\n      }\n\n      splitLine(status, line);\n   }\n\n   return status;\n};\n\nfunction splitLine(result: StatusResult, lineStr: string) {\n   const trimmed = lineStr.trim();\n   switch (' ') {\n      case trimmed.charAt(2):\n         return data(trimmed.charAt(0), trimmed.charAt(1), trimmed.substr(3));\n      case trimmed.charAt(1):\n         return data(PorcelainFileStatus.NONE, trimmed.charAt(0), trimmed.substr(2));\n      default:\n         return;\n   }\n\n   function data(index: string, workingDir: string, path: string) {\n      const raw = `${index}${workingDir}`;\n      const handler = parsers.get(raw);\n\n      if (handler) {\n         handler(result, path);\n      }\n\n      if (raw !== '##' && raw !== '!!') {\n         result.files.push(new FileStatusSummary(path.replace(/\\0.+$/, ''), index, workingDir));\n      }\n   }\n}\n", "import { StatusResult } from '../../../typings';\nimport { parseStatusSummary } from '../responses/StatusSummary';\nimport { StringTask } from '../types';\n\nconst ignoredOptions = ['--null', '-z'];\n\nexport function statusTask(customArgs: string[]): StringTask<StatusResult> {\n   const commands = [\n      'status',\n      '--porcelain',\n      '-b',\n      '-u',\n      '--null',\n      ...customArgs.filter((arg) => !ignoredOptions.includes(arg)),\n   ];\n\n   return {\n      format: 'utf-8',\n      commands,\n      parser(text: string) {\n         return parseStatusSummary(text);\n      },\n   };\n}\n", "import type { SimpleGitApi } from '../simple-git-api';\nimport type { SimpleGit } from '../../../typings';\nimport { asNumber, ExitCodes, LineParser, parseStringResponse } from '../utils';\n\nexport interface VersionResult {\n   major: number;\n   minor: number;\n   patch: number | string;\n   agent: string;\n   installed: boolean;\n}\n\nconst NOT_INSTALLED = 'installed=false';\n\nfunction versionResponse(\n   major = 0,\n   minor = 0,\n   patch: string | number = 0,\n   agent = '',\n   installed = true\n): VersionResult {\n   return Object.defineProperty(\n      {\n         major,\n         minor,\n         patch,\n         agent,\n         installed,\n      },\n      'toString',\n      {\n         value() {\n            return `${this.major}.${this.minor}.${this.patch}`;\n         },\n         configurable: false,\n         enumerable: false,\n      }\n   );\n}\n\nfunction notInstalledResponse() {\n   return versionResponse(0, 0, 0, '', false);\n}\n\nexport default function (): Pick<SimpleGit, 'version'> {\n   return {\n      version(this: SimpleGitApi) {\n         return this._runTask({\n            commands: ['--version'],\n            format: 'utf-8',\n            parser: versionParser,\n            onError(result, error, done, fail) {\n               if (result.exitCode === ExitCodes.NOT_FOUND) {\n                  return done(Buffer.from(NOT_INSTALLED));\n               }\n\n               fail(error);\n            },\n         });\n      },\n   };\n}\n\nconst parsers: LineParser<VersionResult>[] = [\n   new LineParser(\n      /version (\\d+)\\.(\\d+)\\.(\\d+)(?:\\s*\\((.+)\\))?/,\n      (result, [major, minor, patch, agent = '']) => {\n         Object.assign(\n            result,\n            versionResponse(asNumber(major), asNumber(minor), asNumber(patch), agent)\n         );\n      }\n   ),\n   new LineParser(\n      /version (\\d+)\\.(\\d+)\\.(\\D+)(.+)?$/,\n      (result, [major, minor, patch, agent = '']) => {\n         Object.assign(result, versionResponse(asNumber(major), asNumber(minor), patch, agent));\n      }\n   ),\n];\n\nfunction versionParser(stdOut: string) {\n   if (stdOut === NOT_INSTALLED) {\n      return notInstalledResponse();\n   }\n\n   return parseStringResponse(versionResponse(0, 0, 0, stdOut), parsers, stdOut);\n}\n", "import { SimpleGitBase } from '../../typings';\nimport { taskCallback } from './task-callback';\nimport { changeWorkingDirectoryTask } from './tasks/change-working-directory';\nimport checkout from './tasks/checkout';\nimport commit from './tasks/commit';\nimport config from './tasks/config';\nimport firstCommit from './tasks/first-commit';\nimport grep from './tasks/grep';\nimport { hashObjectTask } from './tasks/hash-object';\nimport { initTask } from './tasks/init';\nimport log from './tasks/log';\nimport { mergeTask } from './tasks/merge';\nimport { pushTask } from './tasks/push';\nimport show from './tasks/show';\nimport { statusTask } from './tasks/status';\nimport { configurationErrorTask, straightThroughStringTask } from './tasks/task';\nimport version from './tasks/version';\nimport { outputHandler, SimpleGitExecutor, SimpleGitTask, SimpleGitTaskCallback } from './types';\nimport {\n   asArray,\n   filterString,\n   filterType,\n   getTrailingOptions,\n   trailingFunctionArgument,\n} from './utils';\n\nexport class SimpleGitApi implements SimpleGitBase {\n   constructor(private _executor: SimpleGitExecutor) {}\n\n   protected _runTask<T>(task: SimpleGitTask<T>, then?: SimpleGitTaskCallback<T>) {\n      const chain = this._executor.chain();\n      const promise = chain.push(task);\n\n      if (then) {\n         taskCallback(task, promise, then);\n      }\n\n      return Object.create(this, {\n         then: { value: promise.then.bind(promise) },\n         catch: { value: promise.catch.bind(promise) },\n         _executor: { value: chain },\n      });\n   }\n\n   add(files: string | string[]) {\n      return this._runTask(\n         straightThroughStringTask(['add', ...asArray(files)]),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   cwd(directory: string | { path: string; root?: boolean }) {\n      const next = trailingFunctionArgument(arguments);\n\n      if (typeof directory === 'string') {\n         return this._runTask(changeWorkingDirectoryTask(directory, this._executor), next);\n      }\n\n      if (typeof directory?.path === 'string') {\n         return this._runTask(\n            changeWorkingDirectoryTask(\n               directory.path,\n               (directory.root && this._executor) || undefined\n            ),\n            next\n         );\n      }\n\n      return this._runTask(\n         configurationErrorTask('Git.cwd: workingDirectory must be supplied as a string'),\n         next\n      );\n   }\n\n   hashObject(path: string, write: boolean | unknown) {\n      return this._runTask(\n         hashObjectTask(path, write === true),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   init(bare?: boolean | unknown) {\n      return this._runTask(\n         initTask(bare === true, this._executor.cwd, getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   merge() {\n      return this._runTask(\n         mergeTask(getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   mergeFromTo(remote: string, branch: string) {\n      if (!(filterString(remote) && filterString(branch))) {\n         return this._runTask(\n            configurationErrorTask(\n               `Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings`\n            )\n         );\n      }\n\n      return this._runTask(\n         mergeTask([remote, branch, ...getTrailingOptions(arguments)]),\n         trailingFunctionArgument(arguments, false)\n      );\n   }\n\n   outputHandler(handler: outputHandler) {\n      this._executor.outputHandler = handler;\n      return this;\n   }\n\n   push() {\n      const task = pushTask(\n         {\n            remote: filterType(arguments[0], filterString),\n            branch: filterType(arguments[1], filterString),\n         },\n         getTrailingOptions(arguments)\n      );\n\n      return this._runTask(task, trailingFunctionArgument(arguments));\n   }\n\n   stash() {\n      return this._runTask(\n         straightThroughStringTask(['stash', ...getTrailingOptions(arguments)]),\n         trailingFunctionArgument(arguments)\n      );\n   }\n\n   status() {\n      return this._runTask(\n         statusTask(getTrailingOptions(arguments)),\n         trailingFunctionArgument(arguments)\n      );\n   }\n}\n\nObject.assign(\n   SimpleGitApi.prototype,\n   checkout(),\n   commit(),\n   config(),\n   firstCommit(),\n   grep(),\n   log(),\n   show(),\n   version()\n);\n", "import { append, remove } from '../utils';\nimport { createDeferred, DeferredPromise } from '@kwsites/promise-deferred';\nimport { createLogger } from '../git-logger';\n\ntype ScheduleCompleteCallback = () => void;\ntype ScheduledTask = Pick<DeferredPromise<ScheduleCompleteCallback>, 'promise' | 'done'> & {\n   id: number;\n};\n\nconst createScheduledTask: () => ScheduledTask = (() => {\n   let id = 0;\n   return () => {\n      id++;\n      const { promise, done } = createDeferred<ScheduleCompleteCallback>();\n\n      return {\n         promise,\n         done,\n         id,\n      };\n   };\n})();\n\nexport class Scheduler {\n   private logger = createLogger('', 'scheduler');\n   private pending: ScheduledTask[] = [];\n   private running: ScheduledTask[] = [];\n\n   constructor(private concurrency = 2) {\n      this.logger(`Constructed, concurrency=%s`, concurrency);\n   }\n\n   private schedule() {\n      if (!this.pending.length || this.running.length >= this.concurrency) {\n         this.logger(\n            `Schedule attempt ignored, pending=%s running=%s concurrency=%s`,\n            this.pending.length,\n            this.running.length,\n            this.concurrency\n         );\n         return;\n      }\n\n      const task = append(this.running, this.pending.shift()!);\n      this.logger(`Attempting id=%s`, task.id);\n      task.done(() => {\n         this.logger(`Completing id=`, task.id);\n         remove(this.running, task);\n         this.schedule();\n      });\n   }\n\n   next(): Promise<ScheduleCompleteCallback> {\n      const { promise, id } = append(this.pending, createScheduledTask());\n      this.logger(`Scheduling id=%s`, id);\n\n      this.schedule();\n\n      return promise;\n   }\n}\n", "import { straightThroughStringTask } from './task';\nimport { OptionFlags, Options, StringTask } from '../types';\n\nexport type ApplyOptions = Options &\n   OptionFlags<\n      | '--stat'\n      | '--numstat'\n      | '--summary'\n      | '--check'\n      | '--index'\n      | '--intent-to-add'\n      | '--3way'\n      | '--apply'\n      | '--no-add'\n      | '-R'\n      | '--reverse'\n      | '--allow-binary-replacement'\n      | '--binary'\n      | '--reject'\n      | '-z'\n      | '--inaccurate-eof'\n      | '--recount'\n      | '--cached'\n      | '--ignore-space-change'\n      | '--ignore-whitespace'\n      | '--verbose'\n      | '--unsafe-paths'\n   > &\n   OptionFlags<'--whitespace', 'nowarn' | 'warn' | 'fix' | 'error' | 'error-all'> &\n   OptionFlags<'--build-fake-ancestor' | '--exclude' | '--include' | '--directory', string> &\n   OptionFlags<'-p' | '-C', number>;\n\nexport function applyPatchTask(patches: string[], customArgs: string[]): StringTask<string> {\n   return straightThroughStringTask(['apply', ...customArgs, ...patches]);\n}\n", "import {\n   BranchMultiDeleteResult,\n   BranchSingleDeleteFailure,\n   BranchSingleDeleteResult,\n   BranchSingleDeleteSuccess,\n} from '../../../typings';\n\nexport class BranchDeletionBatch implements BranchMultiDeleteResult {\n   all: BranchSingleDeleteResult[] = [];\n   branches: { [branchName: string]: BranchSingleDeleteResult } = {};\n   errors: BranchSingleDeleteResult[] = [];\n\n   get success(): boolean {\n      return !this.errors.length;\n   }\n}\n\nexport function branchDeletionSuccess(branch: string, hash: string): BranchSingleDeleteSuccess {\n   return {\n      branch,\n      hash,\n      success: true,\n   };\n}\n\nexport function branchDeletionFailure(branch: string): BranchSingleDeleteFailure {\n   return {\n      branch,\n      hash: null,\n      success: false,\n   };\n}\n\nexport function isSingleBranchDeleteFailure(\n   test: BranchSingleDeleteResult\n): test is BranchSingleDeleteSuccess {\n   return test.success;\n}\n", "import { BranchMultiDeleteResult } from '../../../typings';\nimport {\n   BranchDeletionBatch,\n   branchDeletionFailure,\n   branchDeletionSuccess,\n} from '../responses/BranchDeleteSummary';\nimport { TaskParser } from '../types';\nimport { ExitCodes, LineParser, parseStringResponse } from '../utils';\n\nconst deleteSuccessRegex = /(\\S+)\\s+\\(\\S+\\s([^)]+)\\)/;\nconst deleteErrorRegex = /^error[^']+'([^']+)'/m;\n\nconst parsers: LineParser<BranchMultiDeleteResult>[] = [\n   new LineParser(deleteSuccessRegex, (result, [branch, hash]) => {\n      const deletion = branchDeletionSuccess(branch, hash);\n\n      result.all.push(deletion);\n      result.branches[branch] = deletion;\n   }),\n   new LineParser(deleteErrorRegex, (result, [branch]) => {\n      const deletion = branchDeletionFailure(branch);\n\n      result.errors.push(deletion);\n      result.all.push(deletion);\n      result.branches[branch] = deletion;\n   }),\n];\n\nexport const parseBranchDeletions: TaskParser<string, BranchMultiDeleteResult> = (\n   stdOut,\n   stdErr\n) => {\n   return parseStringResponse(new BranchDeletionBatch(), parsers, [stdOut, stdErr]);\n};\n\nexport function hasBranchDeletionError(data: string, processExitCode: ExitCodes): boolean {\n   return processExitCode === ExitCodes.ERROR && deleteErrorRegex.test(data);\n}\n", "import type { BranchSummary, BranchSummaryBranch } from '../../../typings';\n\nexport enum BranchStatusIdentifier {\n   CURRENT = '*',\n   LINKED = '+',\n}\n\nexport class BranchSummaryResult implements BranchSummary {\n   public all: string[] = [];\n   public branches: { [p: string]: BranchSummaryBranch } = {};\n   public current: string = '';\n   public detached: boolean = false;\n\n   push(\n      status: BranchStatusIdentifier | unknown,\n      detached: boolean,\n      name: string,\n      commit: string,\n      label: string\n   ) {\n      if (status === BranchStatusIdentifier.CURRENT) {\n         this.detached = detached;\n         this.current = name;\n      }\n\n      this.all.push(name);\n      this.branches[name] = {\n         current: status === BranchStatusIdentifier.CURRENT,\n         linkedWorkTree: status === BranchStatusIdentifier.LINKED,\n         name,\n         commit,\n         label,\n      };\n   }\n}\n", "import type { BranchSummary } from '../../../typings';\nimport { BranchSummaryResult } from '../responses/BranchSummary';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<BranchSummaryResult>[] = [\n   new LineParser(\n      /^([*+]\\s)?\\((?:HEAD )?detached (?:from|at) (\\S+)\\)\\s+([a-z0-9]+)\\s(.*)$/,\n      (result, [current, name, commit, label]) => {\n         result.push(branchStatus(current), true, name, commit, label);\n      }\n   ),\n   new LineParser(\n      /^([*+]\\s)?(\\S+)\\s+([a-z0-9]+)\\s?(.*)$/s,\n      (result, [current, name, commit, label]) => {\n         result.push(branchStatus(current), false, name, commit, label);\n      }\n   ),\n];\n\nfunction branchStatus(input?: string) {\n   return input ? input.charAt(0) : '';\n}\n\nexport function parseBranchSummary(stdOut: string): BranchSummary {\n   return parseStringResponse(new BranchSummaryResult(), parsers, stdOut);\n}\n", "import { BranchMultiDeleteResult, BranchSingleDeleteResult, BranchSummary } from '../../../typings';\nimport { StringTask } from '../types';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { hasBranchDeletionError, parseBranchDeletions } from '../parsers/parse-branch-delete';\nimport { parseBranchSummary } from '../parsers/parse-branch';\nimport { bufferToString } from '../utils';\n\nexport function containsDeleteBranchCommand(commands: string[]) {\n   const deleteCommands = ['-d', '-D', '--delete'];\n   return commands.some((command) => deleteCommands.includes(command));\n}\n\nexport function branchTask(\n   customArgs: string[]\n): StringTask<BranchSummary | BranchSingleDeleteResult> {\n   const isDelete = containsDeleteBranchCommand(customArgs);\n   const commands = ['branch', ...customArgs];\n\n   if (commands.length === 1) {\n      commands.push('-a');\n   }\n\n   if (!commands.includes('-v')) {\n      commands.splice(1, 0, '-v');\n   }\n\n   return {\n      format: 'utf-8',\n      commands,\n      parser(stdOut, stdErr) {\n         if (isDelete) {\n            return parseBranchDeletions(stdOut, stdErr).all[0];\n         }\n\n         return parseBranchSummary(stdOut);\n      },\n   };\n}\n\nexport function branchLocalTask(): StringTask<BranchSummary> {\n   const parser = parseBranchSummary;\n\n   return {\n      format: 'utf-8',\n      commands: ['branch', '-v'],\n      parser,\n   };\n}\n\nexport function deleteBranchesTask(\n   branches: string[],\n   forceDelete = false\n): StringTask<BranchMultiDeleteResult> {\n   return {\n      format: 'utf-8',\n      commands: ['branch', '-v', forceDelete ? '-D' : '-d', ...branches],\n      parser(stdOut, stdErr) {\n         return parseBranchDeletions(stdOut, stdErr);\n      },\n      onError({ exitCode, stdOut }, error, done, fail) {\n         if (!hasBranchDeletionError(String(error), exitCode)) {\n            return fail(error);\n         }\n\n         done(stdOut);\n      },\n   };\n}\n\nexport function deleteBranchTask(\n   branch: string,\n   forceDelete = false\n): StringTask<BranchSingleDeleteResult> {\n   const task: StringTask<BranchSingleDeleteResult> = {\n      format: 'utf-8',\n      commands: ['branch', '-v', forceDelete ? '-D' : '-d', branch],\n      parser(stdOut, stdErr) {\n         return parseBranchDeletions(stdOut, stdErr).branches[branch]!;\n      },\n      onError({ exitCode, stdErr, stdOut }, error, _, fail) {\n         if (!hasBranchDeletionError(String(error), exitCode)) {\n            return fail(error);\n         }\n\n         throw new GitResponseError(\n            task.parser(bufferToString(stdOut), bufferToString(stdErr)),\n            String(error)\n         );\n      },\n   };\n\n   return task;\n}\n", "/**\n * Parser for the `check-ignore` command - returns each file as a string array\n */\nexport const parseCheckIgnore = (text: string): string[] => {\n   return text\n      .split(/\\n/g)\n      .map((line) => line.trim())\n      .filter((file) => !!file);\n};\n", "import { StringTask } from '../types';\nimport { parseCheckIgnore } from '../responses/CheckIgnore';\n\nexport function checkIgnoreTask(paths: string[]): StringTask<string[]> {\n   return {\n      commands: ['check-ignore', ...paths],\n      format: 'utf-8',\n      parser: parseCheckIgnore,\n   };\n}\n", "import { configurationErrorTask, EmptyTask, straightThroughStringTask } from './task';\nimport { OptionFlags, Options, StringTask } from '../types';\nimport { append, filterString } from '../utils';\n\nexport type CloneOptions = Options &\n   OptionFlags<\n      | '--bare'\n      | '--dissociate'\n      | '--mirror'\n      | '--no-checkout'\n      | '--no-remote-submodules'\n      | '--no-shallow-submodules'\n      | '--no-single-branch'\n      | '--no-tags'\n      | '--remote-submodules'\n      | '--single-branch'\n      | '--shallow-submodules'\n      | '--verbose'\n   > &\n   OptionFlags<'--depth' | '-j' | '--jobs', number> &\n   OptionFlags<\n      | '--branch'\n      | '--origin'\n      | '--recurse-submodules'\n      | '--separate-git-dir'\n      | '--shallow-exclude'\n      | '--shallow-since'\n      | '--template',\n      string\n   >;\n\nfunction disallowedCommand(command: string) {\n   return /^--upload-pack(=|$)/.test(command);\n}\n\nexport function cloneTask(\n   repo: string | undefined,\n   directory: string | undefined,\n   customArgs: string[]\n): StringTask<string> | EmptyTask {\n   const commands = ['clone', ...customArgs];\n\n   filterString(repo) && commands.push(repo);\n   filterString(directory) && commands.push(directory);\n\n   const banned = commands.find(disallowedCommand);\n   if (banned) {\n      return configurationErrorTask(`git.fetch: potential exploit argument blocked.`);\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function cloneMirrorTask(\n   repo: string | undefined,\n   directory: string | undefined,\n   customArgs: string[]\n) {\n   append(customArgs, '--mirror');\n\n   return cloneTask(repo, directory, customArgs);\n}\n", "import { FetchResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<FetchResult>[] = [\n   new LineParser(/From (.+)$/, (result, [remote]) => {\n      result.remote = remote;\n   }),\n   new LineParser(/\\* \\[new branch]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n      result.branches.push({\n         name,\n         tracking,\n      });\n   }),\n   new LineParser(/\\* \\[new tag]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n      result.tags.push({\n         name,\n         tracking,\n      });\n   }),\n   new LineParser(/- \\[deleted]\\s+\\S+\\s*-> (.+)$/, (result, [tracking]) => {\n      result.deleted.push({\n         tracking,\n      });\n   }),\n   new LineParser(\n      /\\s*([^.]+)\\.\\.(\\S+)\\s+(\\S+)\\s*-> (.+)$/,\n      (result, [from, to, name, tracking]) => {\n         result.updated.push({\n            name,\n            tracking,\n            to,\n            from,\n         });\n      }\n   ),\n];\n\nexport function parseFetchResult(stdOut: string, stdErr: string): FetchResult {\n   const result: FetchResult = {\n      raw: stdOut,\n      remote: null,\n      branches: [],\n      tags: [],\n      updated: [],\n      deleted: [],\n   };\n   return parseStringResponse(result, parsers, [stdOut, stdErr]);\n}\n", "import { FetchResult } from '../../../typings';\nimport { parseFetchResult } from '../parsers/parse-fetch';\nimport { StringTask } from '../types';\n\nimport { configurationErrorTask, EmptyTask } from './task';\n\nfunction disallowedCommand(command: string) {\n   return /^--upload-pack(=|$)/.test(command);\n}\n\nexport function fetchTask(\n   remote: string,\n   branch: string,\n   customArgs: string[]\n): StringTask<FetchResult> | EmptyTask {\n   const commands = ['fetch', ...customArgs];\n   if (remote && branch) {\n      commands.push(remote, branch);\n   }\n\n   const banned = commands.find(disallowedCommand);\n   if (banned) {\n      return configurationErrorTask(`git.fetch: potential exploit argument blocked.`);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: parseFetchResult,\n   };\n}\n", "import { MoveResult } from '../../../typings';\nimport { LineParser, parseStringResponse } from '../utils';\n\nconst parsers: LineParser<MoveResult>[] = [\n   new LineParser(/^Renaming (.+) to (.+)$/, (result, [from, to]) => {\n      result.moves.push({ from, to });\n   }),\n];\n\nexport function parseMoveResult(stdOut: string): MoveResult {\n   return parseStringResponse({ moves: [] }, parsers, stdOut);\n}\n", "import { MoveResult } from '../../../typings';\nimport { parseMoveResult } from '../parsers/parse-move';\nimport { StringTask } from '../types';\nimport { asArray } from '../utils';\n\nexport function moveTask(from: string | string[], to: string): StringTask<MoveResult> {\n   return {\n      commands: ['mv', '-v', ...asArray(from), to],\n      format: 'utf-8',\n      parser: parseMoveResult,\n   };\n}\n", "import { PullResult } from '../../../typings';\nimport { GitResponseError } from '../errors/git-response-error';\nimport { parsePullErrorResult, parsePullResult } from '../parsers/parse-pull';\nimport { Maybe, StringTask } from '../types';\nimport { bufferToString } from '../utils';\n\nexport function pullTask(\n   remote: Maybe<string>,\n   branch: Maybe<string>,\n   customArgs: string[]\n): StringTask<PullResult> {\n   const commands: string[] = ['pull', ...customArgs];\n   if (remote && branch) {\n      commands.splice(1, 0, remote, branch);\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser(stdOut, stdErr): PullResult {\n         return parsePullResult(stdOut, stdErr);\n      },\n      onError(result, _error, _done, fail) {\n         const pullError = parsePullErrorResult(\n            bufferToString(result.stdOut),\n            bufferToString(result.stdErr)\n         );\n         if (pullError) {\n            return fail(new GitResponseError(pullError));\n         }\n\n         fail(_error);\n      },\n   };\n}\n", "import { forEachLineWithContent } from '../utils';\n\nexport interface RemoteWithoutRefs {\n   name: string;\n}\n\nexport interface RemoteWithRefs extends RemoteWithoutRefs {\n   refs: {\n      fetch: string;\n      push: string;\n   };\n}\n\nexport function parseGetRemotes(text: string): RemoteWithoutRefs[] {\n   const remotes: { [name: string]: RemoteWithoutRefs } = {};\n\n   forEach(text, ([name]) => (remotes[name] = { name }));\n\n   return Object.values(remotes);\n}\n\nexport function parseGetRemotesVerbose(text: string): RemoteWithRefs[] {\n   const remotes: { [name: string]: RemoteWithRefs } = {};\n\n   forEach(text, ([name, url, purpose]) => {\n      if (!remotes.hasOwnProperty(name)) {\n         remotes[name] = {\n            name: name,\n            refs: { fetch: '', push: '' },\n         };\n      }\n\n      if (purpose && url) {\n         remotes[name].refs[purpose.replace(/[^a-z]/g, '') as keyof RemoteWithRefs['refs']] = url;\n      }\n   });\n\n   return Object.values(remotes);\n}\n\nfunction forEach(text: string, handler: (line: string[]) => void) {\n   forEachLineWithContent(text, (line) => handler(line.split(/\\s+/)));\n}\n", "import { parseGetRemotes, parseGetRemotesVerbose } from '../responses/GetRemoteSummary';\nimport { StringTask } from '../types';\nimport { straightThroughStringTask } from './task';\n\nexport function addRemoteTask(\n   remoteName: string,\n   remoteRepo: string,\n   customArgs: string[] = []\n): StringTask<string> {\n   return straightThroughStringTask(['remote', 'add', ...customArgs, remoteName, remoteRepo]);\n}\n\nexport function getRemotesTask(verbose: boolean): StringTask<any> {\n   const commands = ['remote'];\n   if (verbose) {\n      commands.push('-v');\n   }\n\n   return {\n      commands,\n      format: 'utf-8',\n      parser: verbose ? parseGetRemotesVerbose : parseGetRemotes,\n   };\n}\n\nexport function listRemotesTask(customArgs: string[] = []): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'ls-remote') {\n      commands.unshift('ls-remote');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function remoteTask(customArgs: string[] = []): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'remote') {\n      commands.unshift('remote');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function removeRemoteTask(remoteName: string) {\n   return straightThroughStringTask(['remote', 'remove', remoteName]);\n}\n", "import { LogOptions, LogResult } from '../../../typings';\nimport { logFormatFromCommand } from '../args/log-format';\nimport { createListLogSummaryParser } from '../parsers/parse-list-log-summary';\nimport type { StringTask } from '../types';\nimport { validateLogFormatConfig } from './diff';\nimport { parseLogOptions } from './log';\nimport type { EmptyTask } from './task';\n\nexport function stashListTask(\n   opt: LogOptions = {},\n   customArgs: string[]\n): EmptyTask | StringTask<LogResult> {\n   const options = parseLogOptions<any>(opt);\n   const commands = ['stash', 'list', ...options.commands, ...customArgs];\n   const parser = createListLogSummaryParser(\n      options.splitter,\n      options.fields,\n      logFormatFromCommand(commands)\n   );\n\n   return (\n      validateLogFormatConfig(commands) || {\n         commands,\n         format: 'utf-8',\n         parser,\n      }\n   );\n}\n", "import { StringTask } from '../types';\nimport { straightThroughStringTask } from './task';\n\nexport function addSubModuleTask(repo: string, path: string): StringTask<string> {\n   return subModuleTask(['add', repo, path]);\n}\n\nexport function initSubModuleTask(customArgs: string[]): StringTask<string> {\n   return subModuleTask(['init', ...customArgs]);\n}\n\nexport function subModuleTask(customArgs: string[]): StringTask<string> {\n   const commands = [...customArgs];\n   if (commands[0] !== 'submodule') {\n      commands.unshift('submodule');\n   }\n\n   return straightThroughStringTask(commands);\n}\n\nexport function updateSubModuleTask(customArgs: string[]): StringTask<string> {\n   return subModuleTask(['update', ...customArgs]);\n}\n", "import { TagResult } from '../../../typings';\n\nexport class TagList implements TagResult {\n   constructor(\n      public readonly all: string[],\n      public readonly latest: string | undefined\n   ) {}\n}\n\nexport const parseTagList = function (data: string, customSort = false) {\n   const tags = data.split('\\n').map(trimmed).filter(Boolean);\n\n   if (!customSort) {\n      tags.sort(function (tagA, tagB) {\n         const partsA = tagA.split('.');\n         const partsB = tagB.split('.');\n\n         if (partsA.length === 1 || partsB.length === 1) {\n            return singleSorted(toNumber(partsA[0]), toNumber(partsB[0]));\n         }\n\n         for (let i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {\n            const diff = sorted(toNumber(partsA[i]), toNumber(partsB[i]));\n\n            if (diff) {\n               return diff;\n            }\n         }\n\n         return 0;\n      });\n   }\n\n   const latest = customSort ? tags[0] : [...tags].reverse().find((tag) => tag.indexOf('.') >= 0);\n\n   return new TagList(tags, latest);\n};\n\nfunction singleSorted(a: number, b: number): number {\n   const aIsNum = isNaN(a);\n   const bIsNum = isNaN(b);\n\n   if (aIsNum !== bIsNum) {\n      return aIsNum ? 1 : -1;\n   }\n\n   return aIsNum ? sorted(a, b) : 0;\n}\n\nfunction sorted(a: number, b: number) {\n   return a === b ? 0 : a > b ? 1 : -1;\n}\n\nfunction trimmed(input: string) {\n   return input.trim();\n}\n\nfunction toNumber(input: string | undefined) {\n   if (typeof input === 'string') {\n      return parseInt(input.replace(/^\\D+/g, ''), 10) || 0;\n   }\n\n   return 0;\n}\n", "import { TagResult } from '../../../typings';\nimport { parseTagList } from '../responses/TagList';\nimport { StringTask } from '../types';\n\n/**\n * Task used by `git.tags`\n */\nexport function tagListTask(customArgs: string[] = []): StringTask<TagResult> {\n   const hasCustomSort = customArgs.some((option) => /^--sort=/.test(option));\n\n   return {\n      format: 'utf-8',\n      commands: ['tag', '-l', ...customArgs],\n      parser(text: string) {\n         return parseTagList(text, hasCustomSort);\n      },\n   };\n}\n\n/**\n * Task used by `git.addTag`\n */\nexport function addTagTask(name: string): StringTask<{ name: string }> {\n   return {\n      format: 'utf-8',\n      commands: ['tag', name],\n      parser() {\n         return { name };\n      },\n   };\n}\n\n/**\n * Task used by `git.addTag`\n */\nexport function addAnnotatedTagTask(\n   name: string,\n   tagMessage: string\n): StringTask<{ name: string }> {\n   return {\n      format: 'utf-8',\n      commands: ['tag', '-a', '-m', tagMessage, name],\n      parser() {\n         return { name };\n      },\n   };\n}\n", "const { GitExecutor } = require('./lib/runners/git-executor');\nconst { SimpleGitApi } = require('./lib/simple-git-api');\n\nconst { Scheduler } = require('./lib/runners/scheduler');\nconst { configurationErrorTask } = require('./lib/tasks/task');\nconst {\n   asArray,\n   filterArray,\n   filterPrimitives,\n   filterString,\n   filterStringOrStringArray,\n   filterType,\n   getTrailingOptions,\n   trailingFunctionArgument,\n   trailingOptionsArgument,\n} = require('./lib/utils');\nconst { applyPatchTask } = require('./lib/tasks/apply-patch');\nconst {\n   branchTask,\n   branchLocalTask,\n   deleteBranchesTask,\n   deleteBranchTask,\n} = require('./lib/tasks/branch');\nconst { checkIgnoreTask } = require('./lib/tasks/check-ignore');\nconst { checkIsRepoTask } = require('./lib/tasks/check-is-repo');\nconst { cloneTask, cloneMirrorTask } = require('./lib/tasks/clone');\nconst { cleanWithOptionsTask, isCleanOptionsArray } = require('./lib/tasks/clean');\nconst { diffSummaryTask } = require('./lib/tasks/diff');\nconst { fetchTask } = require('./lib/tasks/fetch');\nconst { moveTask } = require('./lib/tasks/move');\nconst { pullTask } = require('./lib/tasks/pull');\nconst { pushTagsTask } = require('./lib/tasks/push');\nconst {\n   addRemoteTask,\n   getRemotesTask,\n   listRemotesTask,\n   remoteTask,\n   removeRemoteTask,\n} = require('./lib/tasks/remote');\nconst { getResetMode, resetTask } = require('./lib/tasks/reset');\nconst { stashListTask } = require('./lib/tasks/stash-list');\nconst {\n   addSubModuleTask,\n   initSubModuleTask,\n   subModuleTask,\n   updateSubModuleTask,\n} = require('./lib/tasks/sub-module');\nconst { addAnnotatedTagTask, addTagTask, tagListTask } = require('./lib/tasks/tag');\nconst { straightThroughBufferTask, straightThroughStringTask } = require('./lib/tasks/task');\n\nfunction Git(options, plugins) {\n   this._executor = new GitExecutor(\n      options.binary,\n      options.baseDir,\n      new Scheduler(options.maxConcurrentProcesses),\n      plugins\n   );\n\n   this._trimmed = options.trimmed;\n}\n\n(Git.prototype = Object.create(SimpleGitApi.prototype)).constructor = Git;\n\n/**\n * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on\n * the system path, or a fully qualified path to the executable.\n *\n * @param {string} command\n * @returns {Git}\n */\nGit.prototype.customBinary = function (command) {\n   this._executor.binary = command;\n   return this;\n};\n\n/**\n * Sets an environment variable for the spawned child process, either supply both a name and value as strings or\n * a single object to entirely replace the current environment variables.\n *\n * @param {string|Object} name\n * @param {string} [value]\n * @returns {Git}\n */\nGit.prototype.env = function (name, value) {\n   if (arguments.length === 1 && typeof name === 'object') {\n      this._executor.env = name;\n   } else {\n      (this._executor.env = this._executor.env || {})[name] = value;\n   }\n\n   return this;\n};\n\n/**\n * List the stash(s) of the local repo\n */\nGit.prototype.stashList = function (options) {\n   return this._runTask(\n      stashListTask(\n         trailingOptionsArgument(arguments) || {},\n         (filterArray(options) && options) || []\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nfunction createCloneTask(api, task, repoPath, localPath) {\n   if (typeof repoPath !== 'string') {\n      return configurationErrorTask(`git.${api}() requires a string 'repoPath'`);\n   }\n\n   return task(repoPath, filterType(localPath, filterString), getTrailingOptions(arguments));\n}\n\n/**\n * Clone a git repo\n */\nGit.prototype.clone = function () {\n   return this._runTask(\n      createCloneTask('clone', cloneTask, ...arguments),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Mirror a git repo\n */\nGit.prototype.mirror = function () {\n   return this._runTask(\n      createCloneTask('mirror', cloneMirrorTask, ...arguments),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Moves one or more files to a new destination.\n *\n * @see https://git-scm.com/docs/git-mv\n *\n * @param {string|string[]} from\n * @param {string} to\n */\nGit.prototype.mv = function (from, to) {\n   return this._runTask(moveTask(from, to), trailingFunctionArgument(arguments));\n};\n\n/**\n * Internally uses pull and tags to get the list of tags then checks out the latest tag.\n *\n * @param {Function} [then]\n */\nGit.prototype.checkoutLatestTag = function (then) {\n   var git = this;\n   return this.pull(function () {\n      git.tags(function (err, tags) {\n         git.checkout(tags.latest, then);\n      });\n   });\n};\n\n/**\n * Pull the updated contents of the current repo\n */\nGit.prototype.pull = function (remote, branch, options, then) {\n   return this._runTask(\n      pullTask(\n         filterType(remote, filterString),\n         filterType(branch, filterString),\n         getTrailingOptions(arguments)\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Fetch the updated contents of the current repo.\n *\n * @example\n *   .fetch('upstream', 'master') // fetches from master on remote named upstream\n *   .fetch(function () {}) // runs fetch against default remote and branch and calls function\n *\n * @param {string} [remote]\n * @param {string} [branch]\n */\nGit.prototype.fetch = function (remote, branch) {\n   return this._runTask(\n      fetchTask(\n         filterType(remote, filterString),\n         filterType(branch, filterString),\n         getTrailingOptions(arguments)\n      ),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in\n * a production environment.\n *\n * @param {boolean} silence\n * @returns {Git}\n */\nGit.prototype.silent = function (silence) {\n   console.warn(\n      'simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3'\n   );\n   return this;\n};\n\n/**\n * List all tags. When using git 2.7.0 or above, include an options object with `\"--sort\": \"property-name\"` to\n * sort the tags by that property instead of using the default semantic versioning sort.\n *\n * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.\n *\n * @param {Object} [options]\n * @param {Function} [then]\n */\nGit.prototype.tags = function (options, then) {\n   return this._runTask(\n      tagListTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Rebases the current working copy. Options can be supplied either as an array of string parameters\n * to be sent to the `git rebase` command, or a standard options object.\n */\nGit.prototype.rebase = function () {\n   return this._runTask(\n      straightThroughStringTask(['rebase', ...getTrailingOptions(arguments)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Reset a repo\n */\nGit.prototype.reset = function (mode) {\n   return this._runTask(\n      resetTask(getResetMode(mode), getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Revert one or more commits in the local working copy\n */\nGit.prototype.revert = function (commit) {\n   const next = trailingFunctionArgument(arguments);\n\n   if (typeof commit !== 'string') {\n      return this._runTask(configurationErrorTask('Commit must be a string'), next);\n   }\n\n   return this._runTask(\n      straightThroughStringTask(['revert', ...getTrailingOptions(arguments, 0, true), commit]),\n      next\n   );\n};\n\n/**\n * Add a lightweight tag to the head of the current branch\n */\nGit.prototype.addTag = function (name) {\n   const task =\n      typeof name === 'string'\n         ? addTagTask(name)\n         : configurationErrorTask('Git.addTag requires a tag name');\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Add an annotated tag to the head of the current branch\n */\nGit.prototype.addAnnotatedTag = function (tagName, tagMessage) {\n   return this._runTask(\n      addAnnotatedTagTask(tagName, tagMessage),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Delete a local branch\n */\nGit.prototype.deleteLocalBranch = function (branchName, forceDelete, then) {\n   return this._runTask(\n      deleteBranchTask(branchName, typeof forceDelete === 'boolean' ? forceDelete : false),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Delete one or more local branches\n */\nGit.prototype.deleteLocalBranches = function (branchNames, forceDelete, then) {\n   return this._runTask(\n      deleteBranchesTask(branchNames, typeof forceDelete === 'boolean' ? forceDelete : false),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * List all branches\n *\n * @param {Object | string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.branch = function (options, then) {\n   return this._runTask(\n      branchTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Return list of local branches\n *\n * @param {Function} [then]\n */\nGit.prototype.branchLocal = function (then) {\n   return this._runTask(branchLocalTask(), trailingFunctionArgument(arguments));\n};\n\n/**\n * Executes any command against the git binary.\n */\nGit.prototype.raw = function (commands) {\n   const createRestCommands = !Array.isArray(commands);\n   const command = [].slice.call(createRestCommands ? arguments : commands, 0);\n\n   for (let i = 0; i < command.length && createRestCommands; i++) {\n      if (!filterPrimitives(command[i])) {\n         command.splice(i, command.length - i);\n         break;\n      }\n   }\n\n   command.push(...getTrailingOptions(arguments, 0, true));\n\n   var next = trailingFunctionArgument(arguments);\n\n   if (!command.length) {\n      return this._runTask(\n         configurationErrorTask('Raw: must supply one or more command to execute'),\n         next\n      );\n   }\n\n   return this._runTask(straightThroughStringTask(command, this._trimmed), next);\n};\n\nGit.prototype.submoduleAdd = function (repo, path, then) {\n   return this._runTask(addSubModuleTask(repo, path), trailingFunctionArgument(arguments));\n};\n\nGit.prototype.submoduleUpdate = function (args, then) {\n   return this._runTask(\n      updateSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.submoduleInit = function (args, then) {\n   return this._runTask(\n      initSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.subModule = function (options, then) {\n   return this._runTask(\n      subModuleTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.listRemote = function () {\n   return this._runTask(\n      listRemotesTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Adds a remote to the list of remotes.\n */\nGit.prototype.addRemote = function (remoteName, remoteRepo, then) {\n   return this._runTask(\n      addRemoteTask(remoteName, remoteRepo, getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Removes an entry by name from the list of remotes.\n */\nGit.prototype.removeRemote = function (remoteName, then) {\n   return this._runTask(removeRemoteTask(remoteName), trailingFunctionArgument(arguments));\n};\n\n/**\n * Gets the currently available remotes, setting the optional verbose argument to true includes additional\n * detail on the remotes themselves.\n */\nGit.prototype.getRemotes = function (verbose, then) {\n   return this._runTask(getRemotesTask(verbose === true), trailingFunctionArgument(arguments));\n};\n\n/**\n * Call any `git remote` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.remote = function (options, then) {\n   return this._runTask(\n      remoteTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Call any `git tag` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.tag = function (options, then) {\n   const command = getTrailingOptions(arguments);\n\n   if (command[0] !== 'tag') {\n      command.unshift('tag');\n   }\n\n   return this._runTask(straightThroughStringTask(command), trailingFunctionArgument(arguments));\n};\n\n/**\n * Updates repository server info\n *\n * @param {Function} [then]\n */\nGit.prototype.updateServerInfo = function (then) {\n   return this._runTask(\n      straightThroughStringTask(['update-server-info']),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the\n * default configured remote spec.\n *\n * @param {string} [remote]\n * @param {Function} [then]\n */\nGit.prototype.pushTags = function (remote, then) {\n   const task = pushTagsTask(\n      { remote: filterType(remote, filterString) },\n      getTrailingOptions(arguments)\n   );\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Removes the named files from source control.\n */\nGit.prototype.rm = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '-f', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To\n * completely remove the files, use `rm`.\n *\n * @param {string|string[]} files\n */\nGit.prototype.rmKeepLocal = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '--cached', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,\n * size, and type.\n *\n * Passing \"-p\" will instruct cat-file to determine the object type, and display its formatted contents.\n *\n * @param {string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.catFile = function (options, then) {\n   return this._catFile('utf-8', arguments);\n};\n\nGit.prototype.binaryCatFile = function () {\n   return this._catFile('buffer', arguments);\n};\n\nGit.prototype._catFile = function (format, args) {\n   var handler = trailingFunctionArgument(args);\n   var command = ['cat-file'];\n   var options = args[0];\n\n   if (typeof options === 'string') {\n      return this._runTask(\n         configurationErrorTask('Git.catFile: options must be supplied as an array of strings'),\n         handler\n      );\n   }\n\n   if (Array.isArray(options)) {\n      command.push.apply(command, options);\n   }\n\n   const task =\n      format === 'buffer' ? straightThroughBufferTask(command) : straightThroughStringTask(command);\n\n   return this._runTask(task, handler);\n};\n\nGit.prototype.diff = function (options, then) {\n   const task = filterString(options)\n      ? configurationErrorTask(\n           'git.diff: supplying options as a single string is no longer supported, switch to an array of strings'\n        )\n      : straightThroughStringTask(['diff', ...getTrailingOptions(arguments)]);\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\nGit.prototype.diffSummary = function () {\n   return this._runTask(\n      diffSummaryTask(getTrailingOptions(arguments, 1)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.applyPatch = function (patches) {\n   const task = !filterStringOrStringArray(patches)\n      ? configurationErrorTask(\n           `git.applyPatch requires one or more string patches as the first argument`\n        )\n      : applyPatchTask(asArray(patches), getTrailingOptions([].slice.call(arguments, 1)));\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\nGit.prototype.revparse = function () {\n   const commands = ['rev-parse', ...getTrailingOptions(arguments, true)];\n   return this._runTask(\n      straightThroughStringTask(commands, true),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n */\nGit.prototype.clean = function (mode, options, then) {\n   const usingCleanOptionsArray = isCleanOptionsArray(mode);\n   const cleanMode =\n      (usingCleanOptionsArray && mode.join('')) || filterType(mode, filterString) || '';\n   const customArgs = getTrailingOptions([].slice.call(arguments, usingCleanOptionsArray ? 1 : 0));\n\n   return this._runTask(\n      cleanWithOptionsTask(cleanMode, customArgs),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.exec = function (then) {\n   const task = {\n      commands: [],\n      format: 'utf-8',\n      parser() {\n         if (typeof then === 'function') {\n            then();\n         }\n      },\n   };\n\n   return this._runTask(task);\n};\n\n/**\n * Clears the queue of pending commands and returns the wrapper instance for chaining.\n *\n * @returns {Git}\n */\nGit.prototype.clearQueue = function () {\n   // TODO:\n   // this._executor.clear();\n   return this;\n};\n\n/**\n * Check if a pathname or pathnames are excluded by .gitignore\n *\n * @param {string|string[]} pathnames\n * @param {Function} [then]\n */\nGit.prototype.checkIgnore = function (pathnames, then) {\n   return this._runTask(\n      checkIgnoreTask(asArray(filterType(pathnames, filterStringOrStringArray, []))),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nGit.prototype.checkIsRepo = function (checkType, then) {\n   return this._runTask(\n      checkIsRepoTask(filterType(checkType, filterString)),\n      trailingFunctionArgument(arguments)\n   );\n};\n\nmodule.exports = Git;\n", "import { pathspec } from './args/pathspec';\nimport { GitConstructError } from './errors/git-construct-error';\nimport { GitError } from './errors/git-error';\nimport { GitPluginError } from './errors/git-plugin-error';\nimport { GitResponseError } from './errors/git-response-error';\nimport { TaskConfigurationError } from './errors/task-configuration-error';\nimport { CheckRepoActions } from './tasks/check-is-repo';\nimport { CleanOptions } from './tasks/clean';\nimport { GitConfigScope } from './tasks/config';\nimport { grepQueryBuilder } from './tasks/grep';\nimport { ResetMode } from './tasks/reset';\n\nexport {\n   CheckRepoActions,\n   CleanOptions,\n   GitConfigScope,\n   GitConstructError,\n   GitError,\n   GitPluginError,\n   GitResponseError,\n   ResetMode,\n   TaskConfigurationError,\n   grepQueryBuilder,\n   pathspec,\n};\n", "import { GitError } from './git-error';\nimport { SimpleGitOptions } from '../types';\n\n/**\n * The `GitConstructError` is thrown when an error occurs in the constructor\n * of the `simple-git` instance itself. Most commonly as a result of using\n * a `baseDir` option that points to a folder that either does not exist,\n * or cannot be read by the user the node script is running as.\n *\n * Check the `.message` property for more detail including the properties\n * passed to the constructor.\n */\nexport class GitConstructError extends GitError {\n   constructor(\n      public readonly config: SimpleGitOptions,\n      message: string\n   ) {\n      super(undefined, message);\n   }\n}\n", "import { SimpleGitOptions, SimpleGitTask } from '../types';\nimport { GitError } from './git-error';\n\nexport class GitPluginError extends GitError {\n   constructor(\n      public task?: SimpleGitTask<any>,\n      public readonly plugin?: keyof SimpleGitOptions,\n      message?: string\n   ) {\n      super(task, message);\n      Object.setPrototypeOf(this, new.target.prototype);\n   }\n}\n", "import { SimpleGitOptions } from '../types';\nimport { SimpleGitPlugin } from './simple-git-plugin';\nimport { GitPluginError } from '../errors/git-plugin-error';\n\nexport function abortPlugin(signal: SimpleGitOptions['abort']) {\n   if (!signal) {\n      return;\n   }\n\n   const onSpawnAfter: SimpleGitPlugin<'spawn.after'> = {\n      type: 'spawn.after',\n      action(_data, context) {\n         function kill() {\n            context.kill(new GitPluginError(undefined, 'abort', 'Abort signal received'));\n         }\n\n         signal.addEventListener('abort', kill);\n\n         context.spawned.on('close', () => signal.removeEventListener('abort', kill));\n      },\n   };\n\n   const onSpawnBefore: SimpleGitPlugin<'spawn.before'> = {\n      type: 'spawn.before',\n      action(_data, context) {\n         if (signal.aborted) {\n            context.kill(new GitPluginError(undefined, 'abort', 'Abort already signaled'));\n         }\n      },\n   };\n\n   return [onSpawnBefore, onSpawnAfter];\n}\n", "import type { SimpleGitPlugin } from './simple-git-plugin';\n\nimport { GitPluginError } from '../errors/git-plugin-error';\nimport type { SimpleGitPluginConfig } from '../types';\n\nfunction isConfigSwitch(arg: string | unknown) {\n   return typeof arg === 'string' && arg.trim().toLowerCase() === '-c';\n}\n\nfunction preventProtocolOverride(arg: string, next: string) {\n   if (!isConfigSwitch(arg)) {\n      return;\n   }\n\n   if (!/^\\s*protocol(.[a-z]+)?.allow/.test(next)) {\n      return;\n   }\n\n   throw new GitPluginError(\n      undefined,\n      'unsafe',\n      'Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol'\n   );\n}\n\nfunction preventUploadPack(arg: string, method: string) {\n   if (/^\\s*--(upload|receive)-pack/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack`\n      );\n   }\n\n   if (method === 'clone' && /^\\s*-u\\b/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of clone with option -u is not permitted without enabling allowUnsafePack`\n      );\n   }\n\n   if (method === 'push' && /^\\s*--exec\\b/.test(arg)) {\n      throw new GitPluginError(\n         undefined,\n         'unsafe',\n         `Use of push with option --exec is not permitted without enabling allowUnsafePack`\n      );\n   }\n}\n\nexport function blockUnsafeOperationsPlugin({\n   allowUnsafeProtocolOverride = false,\n   allowUnsafePack = false,\n}: SimpleGitPluginConfig['unsafe'] = {}): SimpleGitPlugin<'spawn.args'> {\n   return {\n      type: 'spawn.args',\n      action(args, context) {\n         args.forEach((current, index) => {\n            const next = index < args.length ? args[index + 1] : '';\n\n            allowUnsafeProtocolOverride || preventProtocolOverride(current, next);\n            allowUnsafePack || preventUploadPack(current, context.method);\n         });\n\n         return args;\n      },\n   };\n}\n", "import { prefixedArray } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function commandConfigPrefixingPlugin(\n   configuration: string[]\n): SimpleGitPlugin<'spawn.args'> {\n   const prefix = prefixedArray(configuration, '-c');\n\n   return {\n      type: 'spawn.args',\n      action(data) {\n         return [...prefix, ...data];\n      },\n   };\n}\n", "import { deferred, DeferredPromise } from '@kwsites/promise-deferred';\nimport { SimpleGitPluginConfig } from '../types';\nimport { delay } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nconst never = deferred().promise;\n\nexport function completionDetectionPlugin({\n   onClose = true,\n   onExit = 50,\n}: SimpleGitPluginConfig['completion'] = {}): SimpleGitPlugin<'spawn.after'> {\n   function createEvents() {\n      let exitCode = -1;\n      const events = {\n         close: deferred(),\n         closeTimeout: deferred(),\n         exit: deferred(),\n         exitTimeout: deferred(),\n      };\n\n      const result = Promise.race([\n         onClose === false ? never : events.closeTimeout.promise,\n         onExit === false ? never : events.exitTimeout.promise,\n      ]);\n\n      configureTimeout(onClose, events.close, events.closeTimeout);\n      configureTimeout(onExit, events.exit, events.exitTimeout);\n\n      return {\n         close(code: number) {\n            exitCode = code;\n            events.close.done();\n         },\n         exit(code: number) {\n            exitCode = code;\n            events.exit.done();\n         },\n         get exitCode() {\n            return exitCode;\n         },\n         result,\n      };\n   }\n\n   function configureTimeout(\n      flag: boolean | number,\n      event: DeferredPromise<void>,\n      timeout: DeferredPromise<void>\n   ) {\n      if (flag === false) {\n         return;\n      }\n\n      (flag === true ? event.promise : event.promise.then(() => delay(flag))).then(timeout.done);\n   }\n\n   return {\n      type: 'spawn.after',\n      async action(_data, { spawned, close }) {\n         const events = createEvents();\n\n         let deferClose = true;\n         let quickClose = () => void (deferClose = false);\n\n         spawned.stdout?.on('data', quickClose);\n         spawned.stderr?.on('data', quickClose);\n         spawned.on('error', quickClose);\n\n         spawned.on('close', (code: number) => events.close(code));\n         spawned.on('exit', (code: number) => events.exit(code));\n\n         try {\n            await events.result;\n            if (deferClose) {\n               await delay(50);\n            }\n            close(events.exitCode);\n         } catch (err) {\n            close(events.exitCode, err as Error);\n         }\n      },\n   };\n}\n", "import { GitError } from '../errors/git-error';\nimport { GitExecutorResult, SimpleGitPluginConfig } from '../types';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\ntype TaskResult = Omit<GitExecutorResult, 'rejection'>;\n\nfunction isTaskError(result: TaskResult) {\n   return !!(result.exitCode && result.stdErr.length);\n}\n\nfunction getErrorMessage(result: TaskResult) {\n   return Buffer.concat([...result.stdOut, ...result.stdErr]);\n}\n\nexport function errorDetectionHandler(\n   overwrite = false,\n   isError = isTaskError,\n   errorMessage: (result: TaskResult) => Buffer | Error = getErrorMessage\n) {\n   return (error: Buffer | Error | undefined, result: TaskResult) => {\n      if ((!overwrite && error) || !isError(result)) {\n         return error;\n      }\n\n      return errorMessage(result);\n   };\n}\n\nexport function errorDetectionPlugin(\n   config: SimpleGitPluginConfig['errors']\n): SimpleGitPlugin<'task.error'> {\n   return {\n      type: 'task.error',\n      action(data, context) {\n         const error = config(data.error, {\n            stdErr: context.stdErr,\n            stdOut: context.stdOut,\n            exitCode: context.exitCode,\n         });\n\n         if (Buffer.isBuffer(error)) {\n            return { error: new GitError(undefined, error.toString('utf-8')) };\n         }\n\n         return {\n            error,\n         };\n      },\n   };\n}\n", "import { SimpleGitPlugin, SimpleGitPluginType, SimpleGitPluginTypes } from './simple-git-plugin';\nimport { append, asArray } from '../utils';\n\nexport class PluginStore {\n   private plugins: Set<SimpleGitPlugin<SimpleGitPluginType>> = new Set();\n\n   public add<T extends SimpleGitPluginType>(\n      plugin: void | SimpleGitPlugin<T> | SimpleGitPlugin<T>[]\n   ) {\n      const plugins: SimpleGitPlugin<T>[] = [];\n\n      asArray(plugin).forEach((plugin) => plugin && this.plugins.add(append(plugins, plugin)));\n\n      return () => {\n         plugins.forEach((plugin) => this.plugins.delete(plugin));\n      };\n   }\n\n   public exec<T extends SimpleGitPluginType>(\n      type: T,\n      data: SimpleGitPluginTypes[T]['data'],\n      context: SimpleGitPluginTypes[T]['context']\n   ): typeof data {\n      let output = data;\n      const contextual = Object.freeze(Object.create(context));\n\n      for (const plugin of this.plugins) {\n         if (plugin.type === type) {\n            output = plugin.action(output, contextual);\n         }\n      }\n\n      return output;\n   }\n}\n", "import { SimpleGitOptions } from '../types';\nimport { asNumber, including } from '../utils';\n\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function progressMonitorPlugin(progress: Exclude<SimpleGitOptions['progress'], void>) {\n   const progressCommand = '--progress';\n   const progressMethods = ['checkout', 'clone', 'fetch', 'pull', 'push'];\n\n   const onProgress: SimpleGitPlugin<'spawn.after'> = {\n      type: 'spawn.after',\n      action(_data, context) {\n         if (!context.commands.includes(progressCommand)) {\n            return;\n         }\n\n         context.spawned.stderr?.on('data', (chunk: Buffer) => {\n            const message = /^([\\s\\S]+?):\\s*(\\d+)% \\((\\d+)\\/(\\d+)\\)/.exec(chunk.toString('utf8'));\n            if (!message) {\n               return;\n            }\n\n            progress({\n               method: context.method,\n               stage: progressEventStage(message[1]),\n               progress: asNumber(message[2]),\n               processed: asNumber(message[3]),\n               total: asNumber(message[4]),\n            });\n         });\n      },\n   };\n\n   const onArgs: SimpleGitPlugin<'spawn.args'> = {\n      type: 'spawn.args',\n      action(args, context) {\n         if (!progressMethods.includes(context.method)) {\n            return args;\n         }\n\n         return including(args, progressCommand);\n      },\n   };\n\n   return [onArgs, onProgress];\n}\n\nfunction progressEventStage(input: string) {\n   return String(input.toLowerCase().split(' ', 1)) || 'unknown';\n}\n", "import { SpawnOptions } from 'child_process';\nimport { pick } from '../utils';\nimport { SimpleGitPlugin } from './simple-git-plugin';\n\nexport function spawnOptionsPlugin(\n   spawnOptions: Partial<SpawnOptions>\n): SimpleGitPlugin<'spawn.options'> {\n   const options = pick(spawnOptions, ['uid', 'gid']);\n\n   return {\n      type: 'spawn.options',\n      action(data) {\n         return { ...options, ...data };\n      },\n   };\n}\n", "import type { SimpleGitPlugin } from './simple-git-plugin';\n\nimport type { SimpleGitOptions } from '../types';\nimport { GitPluginError } from '../errors/git-plugin-error';\n\nexport function timeoutPlugin({\n   block,\n   stdErr = true,\n   stdOut = true,\n}: Exclude<SimpleGitOptions['timeout'], undefined>): SimpleGitPlugin<'spawn.after'> | void {\n   if (block > 0) {\n      return {\n         type: 'spawn.after',\n         action(_data, context) {\n            let timeout: NodeJS.Timeout;\n\n            function wait() {\n               timeout && clearTimeout(timeout);\n               timeout = setTimeout(kill, block);\n            }\n\n            function stop() {\n               context.spawned.stdout?.off('data', wait);\n               context.spawned.stderr?.off('data', wait);\n               context.spawned.off('exit', stop);\n               context.spawned.off('close', stop);\n               timeout && clearTimeout(timeout);\n            }\n\n            function kill() {\n               stop();\n               context.kill(new GitPluginError(undefined, 'timeout', `block timeout reached`));\n            }\n\n            stdOut && context.spawned.stdout?.on('data', wait);\n            stdErr && context.spawned.stderr?.on('data', wait);\n            context.spawned.on('exit', stop);\n            context.spawned.on('close', stop);\n\n            wait();\n         },\n      };\n   }\n}\n", "import { SimpleGitPlugin } from './simple-git-plugin';\nimport { isPathSpec, toPaths } from '../args/pathspec';\n\nexport function suffixPathsPlugin(): SimpleGitPlugin<'spawn.args'> {\n   return {\n      type: 'spawn.args',\n      action(data) {\n         const prefix: string[] = [];\n         let suffix: undefined | string[];\n         function append(args: string[]) {\n            (suffix = suffix || []).push(...args);\n         }\n\n         for (let i = 0; i < data.length; i++) {\n            const param = data[i];\n\n            if (isPathSpec(param)) {\n               append(toPaths(param));\n               continue;\n            }\n\n            if (param === '--') {\n               append(\n                  data.slice(i + 1).flatMap((item) => (isPathSpec(item) && toPaths(item)) || item)\n               );\n               break;\n            }\n\n            prefix.push(param);\n         }\n\n         return !suffix ? prefix : [...prefix, '--', ...suffix.map(String)];\n      },\n   };\n}\n", "import { SimpleGitFactory } from '../../typings';\n\nimport * as api from './api';\nimport {\n   abortPlugin,\n   blockUnsafeOperationsPlugin,\n   commandConfigPrefixingPlugin,\n   completionDetectionPlugin,\n   errorDetectionHandler,\n   errorDetectionPlugin,\n   PluginStore,\n   progressMonitorPlugin,\n   spawnOptionsPlugin,\n   timeoutPlugin,\n} from './plugins';\nimport { suffixPathsPlugin } from './plugins/suffix-paths.plugin';\nimport { createInstanceConfig, folderExists } from './utils';\nimport { SimpleGitOptions } from './types';\n\nconst Git = require('../git');\n\n/**\n * Adds the necessary properties to the supplied object to enable it for use as\n * the default export of a module.\n *\n * Eg: `module.exports = esModuleFactory({ something () {} })`\n */\nexport function esModuleFactory<T>(defaultExport: T) {\n   return Object.defineProperties(defaultExport, {\n      __esModule: { value: true },\n      default: { value: defaultExport },\n   }) as T & { __esModule: true; default: T };\n}\n\nexport function gitExportFactory(factory: SimpleGitFactory) {\n   return Object.assign(factory.bind(null), api);\n}\n\nexport function gitInstanceFactory(\n   baseDir?: string | Partial<SimpleGitOptions>,\n   options?: Partial<SimpleGitOptions>\n) {\n   const plugins = new PluginStore();\n   const config = createInstanceConfig(\n      (baseDir && (typeof baseDir === 'string' ? { baseDir } : baseDir)) || {},\n      options\n   );\n\n   if (!folderExists(config.baseDir)) {\n      throw new api.GitConstructError(\n         config,\n         `Cannot use simple-git on a directory that does not exist`\n      );\n   }\n\n   if (Array.isArray(config.config)) {\n      plugins.add(commandConfigPrefixingPlugin(config.config));\n   }\n\n   plugins.add(blockUnsafeOperationsPlugin(config.unsafe));\n   plugins.add(suffixPathsPlugin());\n   plugins.add(completionDetectionPlugin(config.completion));\n   config.abort && plugins.add(abortPlugin(config.abort));\n   config.progress && plugins.add(progressMonitorPlugin(config.progress));\n   config.timeout && plugins.add(timeoutPlugin(config.timeout));\n   config.spawnOptions && plugins.add(spawnOptionsPlugin(config.spawnOptions));\n\n   plugins.add(errorDetectionPlugin(errorDetectionHandler(true)));\n   config.errors && plugins.add(errorDetectionPlugin(config.errors));\n\n   return new Git(config, plugins);\n}\n", "import { SimpleGit, SimpleGitOptions } from '../../../typings';\n\nimport { GitResponseError } from '../errors/git-response-error';\nimport { gitInstanceFactory } from '../git-factory';\nimport { SimpleGitTaskCallback } from '../types';\n\nconst functionNamesBuilderApi = ['customBinary', 'env', 'outputHandler', 'silent'];\n\nconst functionNamesPromiseApi = [\n   'add',\n   'addAnnotatedTag',\n   'addConfig',\n   'addRemote',\n   'addTag',\n   'applyPatch',\n   'binaryCatFile',\n   'branch',\n   'branchLocal',\n   'catFile',\n   'checkIgnore',\n   'checkIsRepo',\n   'checkout',\n   'checkoutBranch',\n   'checkoutLatestTag',\n   'checkoutLocalBranch',\n   'clean',\n   'clone',\n   'commit',\n   'cwd',\n   'deleteLocalBranch',\n   'deleteLocalBranches',\n   'diff',\n   'diffSummary',\n   'exec',\n   'fetch',\n   'getRemotes',\n   'init',\n   'listConfig',\n   'listRemote',\n   'log',\n   'merge',\n   'mergeFromTo',\n   'mirror',\n   'mv',\n   'pull',\n   'push',\n   'pushTags',\n   'raw',\n   'rebase',\n   'remote',\n   'removeRemote',\n   'reset',\n   'revert',\n   'revparse',\n   'rm',\n   'rmKeepLocal',\n   'show',\n   'stash',\n   'stashList',\n   'status',\n   'subModule',\n   'submoduleAdd',\n   'submoduleInit',\n   'submoduleUpdate',\n   'tag',\n   'tags',\n   'updateServerInfo',\n];\n\nexport function gitP(\n   ...args: [] | [string] | [Partial<SimpleGitOptions>] | [string, Partial<SimpleGitOptions>]\n): SimpleGit {\n   let git: any;\n\n   let chain = Promise.resolve();\n\n   try {\n      git = gitInstanceFactory(...args);\n   } catch (e) {\n      chain = Promise.reject(e);\n   }\n\n   function builderReturn() {\n      return promiseApi;\n   }\n\n   function chainReturn() {\n      return chain;\n   }\n\n   const promiseApi = [...functionNamesBuilderApi, ...functionNamesPromiseApi].reduce(\n      (api: any, name: string) => {\n         const isAsync = functionNamesPromiseApi.includes(name);\n\n         const valid = isAsync ? asyncWrapper(name, git) : syncWrapper(name, git, api);\n         const alternative = isAsync ? chainReturn : builderReturn;\n\n         Object.defineProperty(api, name, {\n            enumerable: false,\n            configurable: false,\n            value: git ? valid : alternative,\n         });\n\n         return api;\n      },\n      {}\n   );\n\n   return promiseApi as SimpleGit;\n\n   function asyncWrapper(fn: string, git: any): (...args: any[]) => Promise<any> {\n      return function (...args: any[]) {\n         if (typeof args[args.length] === 'function') {\n            throw new TypeError(\n               'Promise interface requires that handlers are not supplied inline, ' +\n                  'trailing function not allowed in call to ' +\n                  fn\n            );\n         }\n\n         return chain.then(function () {\n            return new Promise(function (resolve, reject) {\n               const callback: SimpleGitTaskCallback = (err: Error | null, result?: any) => {\n                  if (err) {\n                     return reject(toError(err));\n                  }\n\n                  resolve(result);\n               };\n               args.push(callback);\n\n               git[fn].apply(git, args);\n            });\n         });\n      };\n   }\n\n   function syncWrapper(fn: string, git: any, api: SimpleGit) {\n      return (...args: any[]) => {\n         git[fn](...args);\n\n         return api;\n      };\n   }\n}\n\nfunction toError(error: Error | string | any): Error {\n   if (error instanceof Error) {\n      return error;\n   }\n\n   if (typeof error === 'string') {\n      return new Error(error);\n   }\n\n   return new GitResponseError(error);\n}\n", "import { gitInstanceFactory } from './lib/git-factory';\n\nexport { gitP } from './lib/runners/promise-wrapped';\nexport * from './lib/api';\n\nexport const simpleGit = gitInstanceFactory;\n\nexport default gitInstanceFactory;\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as ts from 'typescript';\nimport * as log from '@vladmandic/pilogger';\n\nexport const version = ts.version;\n\nexport async function run(config, entry) {\n  const configFileName = ts.findConfigFile('./', ts.sys.fileExists, 'tsconfig.json') || '';\n  const configFile = ts.readConfigFile(configFileName, ts.sys.readFile);\n  const compilerOptions = ts.parseJsonConfigFileContent(configFile.config, ts.sys, './');\n  compilerOptions.options = {\n    ...config.typescript,\n    ...compilerOptions.options,\n    emitDeclarationOnly: true,\n    declaration: true,\n    declarationMap: false,\n    outDir: entry.typings,\n  };\n  compilerOptions['include'] = [path.dirname(entry.input)];\n  compilerOptions['exclude'] = ['node_modules/', 'dist/'];\n  compilerOptions.errors = [];\n  if (config.log.debug) log.data('TypeScript Options:', compilerOptions);\n  const compilerHost = ts.createCompilerHost(compilerOptions.options);\n  const program = ts.createProgram([entry.input], compilerOptions.options, compilerHost);\n  // console.log(program.getCompilerOptions());\n\n  if (config.generate) {\n    if (fs.existsSync('tsconfig.json')) log.warn('Generate config file exists:', ['tsconfig.json']);\n    else {\n      const tsconfig = { compilerOptions: compilerOptions.options, include: compilerOptions['include'], exclude: compilerOptions['exclude'] };\n      delete tsconfig.compilerOptions.emitDeclarationOnly;\n      delete tsconfig.compilerOptions.resolveJsonModule;\n      tsconfig.compilerOptions.lib = tsconfig.compilerOptions.lib?.map((lib) => lib.replace('lib.', '').replace('.d.ts', '')) || [];\n      fs.writeFileSync('tsconfig.json', JSON.stringify(tsconfig, null, 2));\n      log.info('Generate config file:', ['tsconfig.json']);\n    }\n  }\n\n  const emit = program.emit();\n  const diag = ts\n    .getPreEmitDiagnostics(program)\n    .concat(emit.diagnostics);\n  log.state('Typings:', { input: entry.input, output: compilerOptions.options.outDir, files: emit.emittedFiles?.length });\n  if (config.log.debug) log.data('TypeScript Diag', { nodes: program.getNodeCount(), identifiers: program.getIdentifierCount(), symbols: program.getSymbolCount(), types: program.getTypeCount(), instances: program.getInstantiationCount() });\n  for (const info of diag) {\n    const msg = info.messageText['messageText'] || info.messageText;\n    if (msg.includes('package.json')) continue;\n    if (info.file) {\n      const pos = info.file.getLineAndCharacterOfPosition(info.start || 0);\n      log.error(`TSC: ${info.file.fileName} [${pos.line + 1},${pos.character + 1}]:`, msg);\n    } else {\n      log.error('TSC:', msg);\n    }\n  }\n}\n", "import * as chokidar from 'chokidar';\nimport * as log from '@vladmandic/pilogger';\nimport * as compile from './compile.js';\n\nconst minElapsed = 2000;\nlet lastBuilt = Date.now();\n\nasync function build(evt, msg, options, steps) {\n  const now = Date.now();\n  if ((now - lastBuilt) > minElapsed) {\n    log.info('Watch:', { event: msg, input: evt });\n    compile.run(options, steps, '');\n  } else {\n    log.info('Watch:', { event: msg, input: evt, skip: true });\n  }\n  lastBuilt = now;\n}\n\n// watch filesystem for any changes and notify build when needed\nexport async function start(options, steps) {\n  const watcher = chokidar.watch(options.watch.locations, {\n    persistent: true,\n    ignorePermissionErrors: false,\n    alwaysStat: false,\n    ignoreInitial: true,\n    followSymlinks: true,\n    usePolling: false,\n    useFsEvents: false,\n    atomic: true,\n  });\n  // single event handler for file add/change/delete\n  return new Promise((resolve) => {\n    watcher\n      .on('add', (evt) => build(evt, 'add', options, steps))\n      .on('change', (evt) => build(evt, 'modify', options, steps))\n      .on('unlink', (evt) => build(evt, 'remove', options, steps))\n      .on('error', (err) => {\n        log.error(`Client watcher error: ${err}`);\n        resolve(false);\n      })\n      .on('ready', () => {\n        log.state('Watch:', { locations: options.watch.locations });\n        resolve(true);\n      });\n  });\n}\n", "/**\n  Micro http/http2 server with file monitoring and automatic app rebuild\n  - can process concurrent http requests\n  - monitors specified filed and folders for changes\n  - triggers library and application rebuild\n  - any build errors are immediately displayed and can be corrected without need for restart\n  - passthrough data compression\n*/\n\nimport fs from 'fs';\nimport * as zlib from 'zlib';\nimport * as http from 'http';\nimport * as http2 from 'http2';\nimport * as path from 'path';\nimport * as log from '@vladmandic/pilogger';\n\nlet options;\n\n// just some predefined mime types\nconst mime = {\n  '.html': 'text/html; charset=utf-8',\n  '.js': 'text/javascript; charset=utf-8',\n  '.css': 'text/css; charset=utf-8',\n  '.json': 'application/json; charset=utf-8',\n  '.png': 'image/png',\n  '.jpg': 'image/jpeg',\n  '.gif': 'image/gif',\n  '.ico': 'image/x-icon',\n  '.svg': 'image/svg+xml',\n  '.wav': 'audio/wav',\n  '.mp4': 'video/mp4',\n  '.woff': 'font/woff',\n  '.woff2': 'font/woff2',\n  '.ttf': 'font/ttf',\n  '.wasm': 'application/wasm',\n  '.webmanifest': 'application/manifest+json',\n};\n\ntype Result = { ok: boolean, stat: fs.Stats | null, file: string, redirect: string | null }\n\nfunction handle(url): Promise<Result> {\n  // eslint-disable-next-line no-param-reassign\n  url = url.split(/[?#]/)[0];\n  const result: Result = { ok: false, stat: null, file: '', redirect: null };\n  const checkFile = (f) => {\n    result.file = f;\n    if (fs.existsSync(f)) {\n      result.stat = fs.statSync(f);\n      if (result.stat['isFile']()) {\n        result.ok = true;\n        return true;\n      }\n    }\n    return false;\n  };\n  const checkFolder = (f) => {\n    result.file = f;\n    if (fs.existsSync(f)) {\n      result.stat = fs.statSync(f);\n      if (result.stat['isDirectory']()) {\n        result.ok = true;\n        return true;\n      }\n    }\n    return false;\n  };\n  return new Promise((resolve) => {\n    if (checkFolder(path.join(process.cwd(), options.documentRoot, url)) && (checkFile(path.join(process.cwd(), options.documentRoot, url, options.defaultFile)))) {\n      result.redirect = path.join(url, options.defaultFile);\n      resolve(result);\n    } else if (checkFile(path.join(process.cwd(), options.documentRoot, url))) resolve(result);\n    else if (checkFile(path.join(process.cwd(), options.documentRoot, url, options.defaultFile))) resolve(result);\n    else if (checkFile(path.join(process.cwd(), options.documentRoot, options.defaultFolder, url))) resolve(result);\n    else if (checkFile(path.join(process.cwd(), options.documentRoot, options.defaultFolder, url, options.defaultFile))) resolve(result);\n    else if (checkFolder(path.join(process.cwd(), options.documentRoot, url))) resolve(result);\n    else if (checkFolder(path.join(process.cwd(), options.documentRoot, options.defaultFolder, url))) resolve(result);\n    else if (checkFolder(path.join(path.dirname(path.join(process.cwd(), options.documentRoot, options.defaultFolder, url, options.defaultFile, url))))) resolve(result);\n    else resolve(result);\n  });\n}\n\n// process http requests\nasync function httpRequest(req, res) {\n  const url = decodeURI(req.url);\n  handle(url).then((result) => {\n    // get original ip of requestor, regardless if it's behind proxy or not\n    const forwarded = (req.headers['forwarded'] || '').match(/for=\"\\[(.*)\\]:/);\n    const remote = (Array.isArray(forwarded) ? forwarded[1] : null) || req.headers['x-forwarded-for'] || req.ip || req.socket.remoteAddress;\n    const protocol = req.headers[':scheme']?.toUpperCase() || 'HTTP';\n    if (!result || !result.ok || !result.stat) {\n      res.writeHead(404, { 'Content-Type': 'text/html; charset=utf-8' });\n      res.end('Error 404: Not Found\\n', 'utf-8');\n      log.warn(`${protocol}:`, { method: req.method, ver: req.httpVersion, status: res.statusCode, url, remote });\n    } else if (result.redirect) {\n      res.writeHead(301, { Location: result.redirect });\n      res.end();\n      log.data(`${protocol}:`, { method: req.method, ver: req.httpVersion, status: res.statusCode, url, redirect: result.redirect, remote });\n    } else {\n      const input = encodeURIComponent(result.file).replace(/\\*/g, '').replace(/\\?/g, '').replace(/%2F/g, '/').replace(/%40/g, '@').replace(/%20/g, ' ').replace(/%3A/g, ':').replace(/%5C/g, '\\\\');\n      // @ts-ignore method on stat object\n      if (result?.stat?.isFile()) {\n        const ext = String(path.extname(input)).toLowerCase();\n        const contentType = mime[ext] || 'application/octet-stream';\n        const rangeRequest = req.headers['range'];\n        const range = rangeRequest?.replace('bytes=', '').split('-') || [0, result.stat.size - 1];\n        const rangeStart = parseInt(range[0] || 0);\n        const rangeEnd = parseInt(range[1] || result.stat.size - 1);\n        const acceptBrotli = req.headers['accept-encoding'] ? req.headers['accept-encoding'].includes('br') : false; // does target accept brotli compressed data\n        const rangeHeader = !rangeRequest ? {} : {\n          'Content-Range': 'bytes ' + rangeStart + '-' + rangeEnd + '/' + result.stat.size,\n          'Accept-Ranges': 'bytes',\n          'Content-Length': rangeEnd - rangeStart + 1,\n        };\n        const corsHeader = !options.cors ? {} : {\n          'Cross-Origin-Embedder-Policy': 'require-corp',\n          'Cross-Origin-Opener-Policy': 'same-origin',\n        };\n        res.writeHead(rangeRequest ? 206 : 200, {\n          // 'Access-Control-Allow-Origin': '*', // disabled\n          // 'Content-Length': result.stat.size, // not using standard header as it's misleading for compressed streams\n          'Content-Size': result.stat.size, // this is not standard but useful for logging/debugging\n          'Content-Language': 'en',\n          'Content-Type': contentType,\n          'Content-Encoding': (acceptBrotli && !rangeRequest) ? 'br' : '',\n          'Last-Modified': result.stat.mtime.toUTCString(),\n          'Cache-Control': 'no-cache',\n          'X-Content-Type-Options': 'nosniff',\n          'Content-Security-Policy': \"media-src 'self' http: https: data: blob:\",\n          '`Service-Worker-Allowed': '/',\n          ...corsHeader,\n          ...rangeHeader,\n        });\n        const compress = zlib.createBrotliCompress({ params: { [zlib.constants.BROTLI_PARAM_QUALITY]: 5 } }); // instance of brotli compression with level 5\n        const stream = !rangeRequest\n          ? fs.createReadStream(input)\n          : fs.createReadStream(input, { start: rangeStart, end: rangeEnd });\n        if (!acceptBrotli || rangeRequest) stream.pipe(res); // don't compress data\n        else stream.pipe(compress).pipe(res); // compress data\n        const rangeJSON = rangeRequest ? { range: { start: rangeStart, end: rangeEnd, size: rangeEnd - rangeStart + 1 } } : {};\n        log.data(`${protocol}:`, { method: req.method, ver: req.httpVersion, status: res.statusCode, mime: contentType.replace('; charset=utf-8', ''), size: result.stat.size, ...rangeJSON, url, remote });\n      }\n      // @ts-ignore method on stat object\n      if (result?.stat?.isDirectory()) {\n        res.writeHead(200, { 'Content-Language': 'en', 'Content-Type': 'application/json; charset=utf-8', 'Last-Modified': result.stat.mtime, 'Cache-Control': 'no-cache', 'X-Content-Type-Options': 'nosniff' });\n        let dir = fs.readdirSync(input);\n        dir = dir.map((f) => path.join(decodeURI(req.url), f));\n        res.end(JSON.stringify(dir), 'utf-8');\n        log.data(`${protocol}:`, { method: req.method, ver: req.httpVersion, status: res.statusCode, mime: 'directory/json', size: result.stat.size, url, remote });\n      }\n    }\n  });\n}\n\nexport async function start(config) {\n  options = {\n    insecureHTTPParser: false,\n    ...config.serve,\n    // documentRoot: path.join(process.cwd(), config.documentRoot),\n  };\n\n  if (fs.existsSync(options.sslKey) && fs.existsSync(options.sslCrt)) {\n    options.key = fs.readFileSync(options.sslKey);\n    options.cert = fs.readFileSync(options.sslCrt);\n  } else {\n    try {\n      const home = require.resolve('@vladmandic/build');\n      options.sslKey = path.join(path.dirname(home), '..', options.sslKey);\n      options.sslCrt = path.join(path.dirname(home), '..', options.sslCrt);\n      options.key = fs.existsSync(options.sslKey) ? fs.readFileSync(options.sslKey) : null;\n      options.cert = fs.existsSync(options.sslCrt) ? fs.readFileSync(options.sslCrt) : null;\n    } catch { /**/ }\n  }\n  if (!options.key || !options.cert) log.warn('Cannot read SSL certificate');\n\n  const res: string[] = [];\n  // process.chdir(path.join(__dirname, '..'));\n  if (options.httpPort && options.httpPort > 0) {\n    await new Promise((resolve) => {\n      const server1 = http.createServer(options, httpRequest);\n      server1.on('listening', () => {\n        log.state('WebServer:', { ssl: false, port: options.httpPort, root: options.documentRoot });\n        res.push(`http://localhost:${options.httpPort}`);\n        resolve(true);\n      });\n      server1.on('error', (err) => {\n        log.error('WebServer HTTP:', err.message || err);\n        resolve(false);\n      });\n      server1.listen(options.httpPort);\n    });\n  }\n  if (options.httpsPort && options.httpsPort > 0 && options.key && options.cert) {\n    await new Promise((resolve) => {\n      const server2 = http2.createSecureServer(options, httpRequest);\n      server2.on('listening', () => {\n        log.state('WebServer:', { ssl: true, port: options.httpsPort, root: options.documentRoot, sslKey: options.sslKey, sslCrt: options.sslCrt });\n        res.push(`https://localhost:${options.httpsPort}`);\n        resolve(true);\n      });\n      server2.on('error', (err) => {\n        log.error('WebServer HTTPS:', err.message || err);\n        resolve(false);\n      });\n      server2.listen(options.httpsPort);\n    });\n  }\n  return res;\n}\n", "import * as fs from 'fs';\nimport * as log from '@vladmandic/pilogger';\nimport { ESLint } from 'eslint';\n\nexport const version = ESLint.version;\n\nexport async function run(config) {\n  const json = fs.existsSync('.eslintrc.json') ? JSON.parse(fs.readFileSync('.eslintrc.json').toString()) : {};\n  const options = {\n    ...json,\n    globals: { ...json.globals },\n    rules: { ...config.lint.rules, ...json.rules },\n    env: { ...config.lint.env, ...json.env },\n    parser: json.parser || config.lint.parser,\n    parserOptions: { ...config.lint.parserOptions, ...json.parserOptions },\n    plugins: [...new Set([...config.lint.plugins, ...(json.plugins || [])])],\n    extends: [...new Set([...config.lint.extends, ...(json.extends || [])])],\n    ignorePatterns: [...new Set([...config.lint.ignorePatterns, ...(json.ignorePatterns || [])])],\n  };\n  const eslint = new ESLint({ overrideConfig: options });\n  if (config.log.debug) log.data('ESLint Options', options, config.lint.locations);\n\n  if (config.generate) {\n    if (fs.existsSync('.eslintrc.json')) log.warn('Generate config file exists:', ['.eslintrc.json']);\n    else {\n      fs.writeFileSync('.eslintrc.json', JSON.stringify(options, null, 2));\n      log.info('Generate config file:', ['.eslintrc.json']);\n    }\n  }\n  const results = await eslint.lintFiles(config.lint.locations);\n  // eslint-disable-next-line no-param-reassign\n  const errors = results.reduce((prev, curr) => prev += curr.errorCount, 0);\n  // eslint-disable-next-line no-param-reassign\n  const warnings = results.reduce((prev, curr) => prev += curr.warningCount, 0);\n  if (config.log.debug) log.data('Lint Results:', results);\n  log.state('Lint:', { locations: config.lint.locations, files: results.length, errors, warnings });\n  if (errors > 0 || warnings > 0) {\n    const formatter = await eslint.loadFormatter('stylish');\n    const text = formatter.format(results);\n    log.warn(text);\n  }\n}\n", "export const defaults = {\n  log: {\n    enabled: true,\n    debug: false,\n    console: true,\n    output: 'build.log',\n  },\n  profiles: {\n    production: ['clean', 'compile', 'typings', 'typedoc', 'lint', 'changelog'],\n    development: ['serve', 'watch', 'compile'],\n    lint: ['lint'],\n    all: ['clean', 'compile', 'typings', 'typedoc', 'lint', 'changelog', 'serve', 'watch'],\n  },\n  watch: {\n    locations: ['src/**'],\n  },\n  clean: {\n    locations: ['types/*', 'typedoc/*'],\n  },\n  changelog: {\n    output: 'CHANGELOG.md',\n  },\n  serve: {\n    sslKey: 'cert/https.key',\n    sslCrt: 'cert/https.crt',\n    httpPort: 8000,\n    httpsPort: 8001,\n    documentRoot: '.',\n    defaultFolder: '.',\n    defaultFile: 'index.html',\n    cors: true,\n  },\n  build: {\n    global: {\n      target: 'es2018',\n      sourcemap: true,\n      format: 'esm',\n      banner: { js: '/*\\n  generated by @vladmandic/build  \\n*/\\n' },\n      bundle: true,\n      platform: 'browser',\n      treeShaking: true,\n      legalComments: 'none',\n      ignoreAnnotations: false,\n    },\n    production: {\n      minify: true,\n    },\n    development: {\n      minify: false,\n    },\n    targets: [],\n  },\n  typescript: {\n    module: 'es2020',\n    target: 'es2020',\n    typeRoots: ['node_modules/@types'],\n    lib: ['lib.esnext.d.ts', 'lib.dom.d.ts', 'lib.webworker.d.ts'],\n    baseUrl: './',\n    paths: { tslib: ['node_modules/tslib/tslib.d.ts'] },\n    sourceMap: true,\n    noEmitOnError: false,\n    emitDeclarationOnly: true,\n    declaration: true,\n    allowJs: true,\n    allowSyntheticDefaultImports: true,\n    importHelpers: true,\n    pretty: true,\n    removeComments: false,\n    skipLibCheck: true,\n    listEmittedFiles: true,\n    allowUnreachableCode: false,\n    allowUnusedLabels: false,\n    alwaysStrict: true,\n    emitDecoratorMetadata: true,\n    experimentalDecorators: true,\n    noFallthroughCasesInSwitch: true,\n    noImplicitAny: false,\n    noImplicitOverride: true,\n    noImplicitReturns: true,\n    noImplicitThis: true,\n    noPropertyAccessFromIndexSignature: false,\n    noUncheckedIndexedAccess: false,\n    noUnusedLocals: false,\n    noUnusedParameters: true,\n    preserveConstEnums: true,\n    strictBindCallApply: true,\n    strictFunctionTypes: true,\n    strictNullChecks: true,\n    strictPropertyInitialization: true,\n    'no-restricted-syntax': 'off',\n  },\n  lint: {\n    locations: ['src/*.ts'],\n    env: { browser: true, commonjs: true, node: true, es2020: true },\n    parser: '@typescript-eslint/parser',\n    parserOptions: { ecmaVersion: 2020 },\n    plugins: ['@typescript-eslint'],\n    extends: ['eslint:recommended', 'plugin:@typescript-eslint/eslint-recommended', 'plugin:@typescript-eslint/recommended'],\n    ignorePatterns: ['**/dist/**', '**/typedoc/**', '**/types/**', '**/node_modules/**'],\n    rules: {\n      '@typescript-eslint/ban-ts-comment': 'off',\n      '@typescript-eslint/explicit-module-boundary-types': 'off',\n      '@typescript-eslint/no-shadow': 'error',\n      '@typescript-eslint/no-var-requires': 'off',\n      'dot-notation': 'off',\n      'func-names': 'off',\n      'guard-for-in': 'off',\n      'import/extensions': 'off',\n      'import/no-named-as-default': 'off',\n      'import/prefer-default-export': 'off',\n      'lines-between-class-members': 'off',\n      'max-len': [1, 250, 3],\n      'newline-per-chained-call': 'off',\n      'no-async-promise-executor': 'off',\n      'no-await-in-loop': 'off',\n      'no-bitwise': 'off',\n      'no-case-declarations': 'off',\n      'no-continue': 'off',\n      'no-plusplus': 'off',\n      'object-curly-newline': 'off',\n      'prefer-destructuring': 'off',\n      'prefer-template': 'off',\n      'promise/always-return': 'off',\n      'promise/catch-or-return': 'off',\n      radix: 'off',\n      'no-underscore-dangle': 'off',\n      'no-restricted-syntax': 'off',\n      'no-return-assign': 'off',\n    },\n  },\n};\n", "import * as log from '@vladmandic/pilogger';\nimport * as rimraf from 'rimraf';\n\nexport function run(config) {\n  log.state('Clean:', { locations: config.clean.locations });\n  if (!config.clean.locations) log.warn('Clean called, but locations are not set');\n  else for (const loc of config.clean.locations) rimraf.sync(loc);\n}\n", "import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice( pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n", "const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n", "// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n", "// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n", "import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n", "/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Like {@link LRUCache#dump}, but just for a\n   * single key. Always returns stale values, if their info is found in the\n   * cache, so be sure to check for expired TTLs if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n", "import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'path'\n\nimport { fileURLToPath } from 'url'\n\nimport * as actualFS from 'fs'\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nimport { lstat, readdir, readlink, realpath } from 'fs/promises'\n\nimport type { Dirent, Stats } from 'fs'\nimport { Minipass } from 'minipass'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true }\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS\n    ? defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n          ...defaultFS.promises,\n          ...(fsOption.promises || {}),\n        },\n      }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile()\n    ? IFREG\n    : s.isDirectory()\n    ? IFDIR\n    : s.isSymbolicLink()\n    ? IFLNK\n    : s.isCharacterDevice()\n    ? IFCHR\n    : s.isBlockDevice()\n    ? IFBLK\n    : s.isSocket()\n    ? IFSOCK\n    : s.isFIFO()\n    ? IFIFO\n    : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['path'] refers to the path of the directory\n   * that was passed to readdir.  So, somewhat counterintuitively, this\n   * property refers to the *parent* path, not the path object itself.\n   * For root entries, it's the path to the entry itself.\n   */\n  get path(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase = rootPath\n      ? this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name = this.nocase\n      ? normalizeNocase(pathPart)\n      : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath = this.#fullpath\n      ? this.#fullpath + s + pathPart\n      : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return this.isUnknown()\n      ? 'Unknown'\n      : this.isDirectory()\n      ? 'Directory'\n      : this.isFile()\n      ? 'File'\n      : this.isSymbolicLink()\n      ? 'SymbolicLink'\n      : this.isFIFO()\n      ? 'FIFO'\n      : this.isCharacterDevice()\n      ? 'CharacterDevice'\n      : this.isBlockDevice()\n      ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket()\n      ? 'Socket'\n      : 'Unknown'\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase\n      ? this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      children[p].#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name = this.nocase\n        ? normalizeNocase(e.name)\n        : normalize(e.name)\n      if (name !== pchild.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[]\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res)\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {}\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor'\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next()\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {}\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r\n                    )\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true)\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32'\n    ? PathScurryWin32\n    : process.platform === 'darwin'\n    ? PathScurryDarwin\n    : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n", "const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'events'\nimport Stream from 'stream'\nimport { StringDecoder } from 'string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> = T extends string\n    ? EncodingOptions | ObjectModeOptions\n    : T extends Buffer\n    ? BufferOptions | ObjectModeOptions\n    : SharedOptions\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args: RType extends Buffer\n      ? [] | [Minipass.Options<RType>]\n      : [Minipass.Options<RType>]\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ) {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n", "import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n", "// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n", "// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        /* c8 ignore start */\n        if (!parsed || !globParts) {\n          throw new Error('invalid pattern object')\n        }\n        /* c8 ignore stop */\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n", "// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n", "/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n", "import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n", "import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\nexport type {\n  Path,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n  WalkOptions,\n  FSOption,\n} from 'path-scurry'\n\n/* c8 ignore stop */\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n", "import { Dirent, Stats } from 'fs'\nimport { GlobOptions } from 'glob'\n\nconst typeOrUndef = (val: any, t: string) =>\n  typeof val === 'undefined' || typeof val === t\n\nexport const isRimrafOptions = (o: any): o is RimrafOptions =>\n  !!o &&\n  typeof o === 'object' &&\n  typeOrUndef(o.preserveRoot, 'boolean') &&\n  typeOrUndef(o.tmp, 'string') &&\n  typeOrUndef(o.maxRetries, 'number') &&\n  typeOrUndef(o.retryDelay, 'number') &&\n  typeOrUndef(o.backoff, 'number') &&\n  typeOrUndef(o.maxBackoff, 'number') &&\n  (typeOrUndef(o.glob, 'boolean') || (o.glob && typeof o.glob === 'object')) &&\n  typeOrUndef(o.filter, 'function')\n\nexport const assertRimrafOptions: (o: any) => void = (\n  o: any\n): asserts o is RimrafOptions => {\n  if (!isRimrafOptions(o)) {\n    throw new Error('invalid rimraf options')\n  }\n}\n\nexport interface RimrafAsyncOptions {\n  preserveRoot?: boolean\n  tmp?: string\n  maxRetries?: number\n  retryDelay?: number\n  backoff?: number\n  maxBackoff?: number\n  signal?: AbortSignal\n  glob?: boolean | GlobOptions\n  filter?:\n    | ((path: string, ent: Dirent | Stats) => boolean)\n    | ((path: string, ent: Dirent | Stats) => Promise<boolean>)\n}\n\nexport interface RimrafSyncOptions extends RimrafAsyncOptions {\n  filter?: (path: string, ent: Dirent | Stats) => boolean\n}\n\nexport type RimrafOptions = RimrafSyncOptions | RimrafAsyncOptions\n\nconst optArgT = <T extends RimrafOptions>(\n  opt: T\n):\n  | (T & {\n      glob: GlobOptions & { withFileTypes: false }\n    })\n  | (T & { glob: undefined }) => {\n  assertRimrafOptions(opt)\n  const { glob, ...options } = opt\n  if (!glob) {\n    return options as T & { glob: undefined }\n  }\n  const globOpt =\n    glob === true\n      ? opt.signal\n        ? { signal: opt.signal }\n        : {}\n      : opt.signal\n      ? {\n          signal: opt.signal,\n          ...glob,\n        }\n      : glob\n  return {\n    ...options,\n    glob: {\n      ...globOpt,\n      // always get absolute paths from glob, to ensure\n      // that we are referencing the correct thing.\n      absolute: true,\n      withFileTypes: false,\n    },\n  } as T & { glob: GlobOptions & { withFileTypes: false } }\n}\n\nexport const optArg = (opt: RimrafAsyncOptions = {}) => optArgT(opt)\nexport const optArgSync = (opt: RimrafSyncOptions = {}) => optArgT(opt)\n", "import { parse, resolve } from 'path'\nimport { inspect } from 'util'\nimport { RimrafAsyncOptions } from './index.js'\nimport platform from './platform.js'\n\nconst pathArg = (path: string, opt: RimrafAsyncOptions = {}) => {\n  const type = typeof path\n  if (type !== 'string') {\n    const ctor = path && type === 'object' && path.constructor\n    const received =\n      ctor && ctor.name\n        ? `an instance of ${ctor.name}`\n        : type === 'object'\n        ? inspect(path)\n        : `type ${type} ${path}`\n    const msg =\n      'The \"path\" argument must be of type string. ' + `Received ${received}`\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_TYPE',\n    })\n  }\n\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    const msg = 'path must be a string without null bytes'\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_VALUE',\n    })\n  }\n\n  path = resolve(path)\n  const { root } = parse(path)\n\n  if (path === root && opt.preserveRoot !== false) {\n    const msg = 'refusing to remove root directory without preserveRoot:false'\n    throw Object.assign(new Error(msg), {\n      path,\n      code: 'ERR_PRESERVE_ROOT',\n    })\n  }\n\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const { root } = parse(path)\n    if (badWinChars.test(path.substring(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\n\nexport default pathArg\n", "export default process.env.__TESTING_RIMRAF_PLATFORM__ || process.platform\n", "// promisify ourselves, because older nodes don't have fs.promises\n\nimport fs, { Dirent } from 'fs'\n\n// sync ones just take the sync version from node\nexport {\n  chmodSync,\n  mkdirSync,\n  renameSync,\n  rmdirSync,\n  rmSync,\n  statSync,\n  lstatSync,\n  unlinkSync,\n} from 'fs'\n\nimport { readdirSync as rdSync } from 'fs'\nexport const readdirSync = (path: fs.PathLike): Dirent[] =>\n  rdSync(path, { withFileTypes: true })\n\n// unrolled for better inlining, this seems to get better performance\n// than something like:\n// const makeCb = (res, rej) => (er, ...d) => er ? rej(er) : res(...d)\n// which would be a bit cleaner.\n\nconst chmod = (path: fs.PathLike, mode: fs.Mode): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.chmod(path, mode, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst mkdir = (\n  path: fs.PathLike,\n  options?:\n    | fs.Mode\n    | (fs.MakeDirectoryOptions & { recursive?: boolean | null })\n    | undefined\n    | null\n): Promise<string | undefined> =>\n  new Promise((res, rej) =>\n    fs.mkdir(path, options, (er, made) => (er ? rej(er) : res(made)))\n  )\n\nconst readdir = (path: fs.PathLike): Promise<Dirent[]> =>\n  new Promise<Dirent[]>((res, rej) =>\n    fs.readdir(path, { withFileTypes: true }, (er, data) =>\n      er ? rej(er) : res(data)\n    )\n  )\n\nconst rename = (oldPath: fs.PathLike, newPath: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rename(oldPath, newPath, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst rm = (path: fs.PathLike, options: fs.RmOptions): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rm(path, options, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst rmdir = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rmdir(path, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst stat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.stat(path, (er, data) => (er ? rej(er) : res(data)))\n  )\n\nconst lstat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.lstat(path, (er, data) => (er ? rej(er) : res(data)))\n  )\n\nconst unlink = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.unlink(path, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nexport const promises = {\n  chmod,\n  mkdir,\n  readdir,\n  rename,\n  rm,\n  rmdir,\n  stat,\n  lstat,\n  unlink,\n}\n", "// the simple recursive removal, where unlink and rmdir are atomic\n// Note that this approach does NOT work on Windows!\n// We stat first and only unlink if the Dirent isn't a directory,\n// because sunos will let root unlink a directory, and some\n// SUPER weird breakage happens as a result.\n\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nconst { lstat, rmdir, unlink } = promises\n\nimport { parse, resolve } from 'path'\n\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nexport const rimrafPosix = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafPosixDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafPosixSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafPosixDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafPosixDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(unlink(path))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafPosixDir(resolve(path, ent.name), opt, ent))\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n\n  await ignoreENOENT(rmdir(path))\n  return true\n}\n\nconst rimrafPosixDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => unlinkSync(path))\n    return true\n  }\n  let removedAll: boolean = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafPosixDirSync(p, opt, ent) && removedAll\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (!removedAll) {\n    return false\n  }\n\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n\n  ignoreENOENTSync(() => rmdirSync(path))\n  return true\n}\n", "// returns an array of entries if readdir() works,\n// or the error that readdir() raised if not.\nimport { promises, readdirSync } from './fs.js'\nconst { readdir } = promises\nexport const readdirOrError = (path: string) =>\n  readdir(path).catch(er => er as NodeJS.ErrnoException)\nexport const readdirOrErrorSync = (path: string) => {\n  try {\n    return readdirSync(path)\n  } catch (er) {\n    return er as NodeJS.ErrnoException\n  }\n}\n", "export const ignoreENOENT = async (p: Promise<any>) =>\n  p.catch(er => {\n    if (er.code !== 'ENOENT') {\n      throw er\n    }\n  })\n\nexport const ignoreENOENTSync = (fn: () => any) => {\n  try {\n    return fn()\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n", "// This is the same as rimrafPosix, with the following changes:\n//\n// 1. EBUSY, ENFILE, EMFILE trigger retries and/or exponential backoff\n// 2. All non-directories are removed first and then all directories are\n//    removed in a second sweep.\n// 3. If we hit ENOTEMPTY in the second sweep, fall back to move-remove on\n//    the that folder.\n//\n// Note: \"move then remove\" is 2-10 times slower, and just as unreliable.\n\nimport { Dirent, Stats } from 'fs'\nimport { parse, resolve } from 'path'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { fixEPERM, fixEPERMSync } from './fix-eperm.js'\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\nimport { retryBusy, retryBusySync } from './retry-busy.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nconst { unlink, rmdir, lstat } = promises\n\nconst rimrafWindowsFile = retryBusy(fixEPERM(unlink))\nconst rimrafWindowsFileSync = retryBusySync(fixEPERMSync(unlinkSync))\nconst rimrafWindowsDirRetry = retryBusy(fixEPERM(rmdir))\nconst rimrafWindowsDirRetrySync = retryBusySync(fixEPERMSync(rmdirSync))\n\nconst rimrafWindowsDirMoveRemoveFallback = async (\n  path: string,\n  opt: RimrafAsyncOptions\n): Promise<boolean> => {\n  /* c8 ignore start */\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  /* c8 ignore stop */\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return await rimrafWindowsDirRetry(path, options)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOTEMPTY') {\n      return await rimrafMoveRemove(path, options)\n    }\n    throw er\n  }\n}\n\nconst rimrafWindowsDirMoveRemoveFallbackSync = (\n  path: string,\n  opt: RimrafSyncOptions\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return rimrafWindowsDirRetrySync(path, options)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOTEMPTY') {\n      return rimrafMoveRemoveSync(path, options)\n    }\n    throw er\n  }\n}\n\nconst START = Symbol('start')\nconst CHILD = Symbol('child')\nconst FINISH = Symbol('finish')\n\nexport const rimrafWindows = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafWindowsDir(path, opt, await lstat(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafWindowsSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafWindowsDirSync(path, opt, lstatSync(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafWindowsDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats,\n  state = START\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    // is a file\n    await ignoreENOENT(rimrafWindowsFile(path, opt))\n    return true\n  }\n\n  const s = state === START ? CHILD : state\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafWindowsDir(resolve(path, ent.name), opt, ent, s))\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (state === START) {\n    return rimrafWindowsDir(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(rimrafWindowsDirMoveRemoveFallback(path, opt))\n  }\n  return true\n}\n\nconst rimrafWindowsDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats,\n  state = START\n): boolean => {\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    // is a file\n    ignoreENOENTSync(() => rimrafWindowsFileSync(path, opt))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const s = state === START ? CHILD : state\n    const p = resolve(path, ent.name)\n    removedAll = rimrafWindowsDirSync(p, opt, ent, s) && removedAll\n  }\n\n  if (state === START) {\n    return rimrafWindowsDirSync(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => {\n      rimrafWindowsDirMoveRemoveFallbackSync(path, opt)\n    })\n  }\n  return true\n}\n", "import { chmodSync, promises } from './fs.js'\nconst { chmod } = promises\n\nexport const fixEPERM =\n  (fn: (path: string) => Promise<any>) => async (path: string) => {\n    try {\n      return await fn(path)\n    } catch (er) {\n      const fer = er as NodeJS.ErrnoException\n      if (fer?.code === 'ENOENT') {\n        return\n      }\n      if (fer?.code === 'EPERM') {\n        try {\n          await chmod(path, 0o666)\n        } catch (er2) {\n          const fer2 = er2 as NodeJS.ErrnoException\n          if (fer2?.code === 'ENOENT') {\n            return\n          }\n          throw er\n        }\n        return await fn(path)\n      }\n      throw er\n    }\n  }\n\nexport const fixEPERMSync = (fn: (path: string) => any) => (path: string) => {\n  try {\n    return fn(path)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOENT') {\n      return\n    }\n    if (fer?.code === 'EPERM') {\n      try {\n        chmodSync(path, 0o666)\n      } catch (er2) {\n        const fer2 = er2 as NodeJS.ErrnoException\n        if (fer2?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n      return fn(path)\n    }\n    throw er\n  }\n}\n", "// note: max backoff is the maximum that any *single* backoff will do\n\nimport { RimrafAsyncOptions, RimrafOptions } from './index.js'\n\nexport const MAXBACKOFF = 200\nexport const RATE = 1.2\nexport const MAXRETRIES = 10\nexport const codes = new Set(['EMFILE', 'ENFILE', 'EBUSY'])\n\nexport const retryBusy = (fn: (path: string) => Promise<any>) => {\n  const method = async (\n    path: string,\n    opt: RimrafAsyncOptions,\n    backoff = 1,\n    total = 0\n  ) => {\n    const mbo = opt.maxBackoff || MAXBACKOFF\n    const rate = opt.backoff || RATE\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return await fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (fer?.path === path && fer?.code && codes.has(fer.code)) {\n          backoff = Math.ceil(backoff * rate)\n          total = backoff + total\n          if (total < mbo) {\n            return new Promise((res, rej) => {\n              setTimeout(() => {\n                method(path, opt, backoff, total).then(res, rej)\n              }, backoff)\n            })\n          }\n          if (retries < max) {\n            retries++\n            continue\n          }\n        }\n        throw er\n      }\n    }\n  }\n\n  return method\n}\n\n// just retries, no async so no backoff\nexport const retryBusySync = (fn: (path: string) => any) => {\n  const method = (path: string, opt: RimrafOptions) => {\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (\n          fer?.path === path &&\n          fer?.code &&\n          codes.has(fer.code) &&\n          retries < max\n        ) {\n          retries++\n          continue\n        }\n        throw er\n      }\n    }\n  }\n  return method\n}\n", "// https://youtu.be/uhRWMGBjlO8?t=537\n//\n// 1. readdir\n// 2. for each entry\n//   a. if a non-empty directory, recurse\n//   b. if an empty directory, move to random hidden file name in $TEMP\n//   c. unlink/rmdir $TEMP\n//\n// This works around the fact that unlink/rmdir is non-atomic and takes\n// a non-deterministic amount of time to complete.\n//\n// However, it is HELLA SLOW, like 2-10x slower than a naive recursive rm.\n\nimport { basename, parse, resolve } from 'path'\nimport { defaultTmp, defaultTmpSync } from './default-tmp.js'\n\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nimport {\n  chmodSync,\n  lstatSync,\n  promises as fsPromises,\n  renameSync,\n  rmdirSync,\n  unlinkSync,\n} from './fs.js'\nconst { lstat, rename, unlink, rmdir, chmod } = fsPromises\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\n// crypto.randomBytes is much slower, and Math.random() is enough here\nconst uniqueFilename = (path: string) => `.${basename(path)}.${Math.random()}`\n\nconst unlinkFixEPERM = async (path: string) =>\n  unlink(path).catch((er: Error & { code?: string }) => {\n    if (er.code === 'EPERM') {\n      return chmod(path, 0o666).then(\n        () => unlink(path),\n        er2 => {\n          if (er2.code === 'ENOENT') {\n            return\n          }\n          throw er\n        }\n      )\n    } else if (er.code === 'ENOENT') {\n      return\n    }\n    throw er\n  })\n\nconst unlinkFixEPERMSync = (path: string) => {\n  try {\n    unlinkSync(path)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'EPERM') {\n      try {\n        return chmodSync(path, 0o666)\n      } catch (er2) {\n        if ((er2 as NodeJS.ErrnoException)?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n    } else if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') {\n      return\n    }\n    throw er\n  }\n}\n\nexport const rimrafMoveRemove = async (\n  path: string,\n  opt: RimrafAsyncOptions\n) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafMoveRemoveDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDir(\n      path,\n      { ...opt, tmp: await defaultTmp(path) },\n      ent\n    )\n  }\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(tmpUnlink(path, opt.tmp, unlinkFixEPERM))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafMoveRemoveDir(resolve(path, ent.name), opt, ent))\n    )\n  ).reduce((a, b) => a && b, true)\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n  await ignoreENOENT(tmpUnlink(path, opt.tmp, rmdir))\n  return true\n}\n\nconst tmpUnlink = async (\n  path: string,\n  tmp: string,\n  rm: (p: string) => Promise<any>\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  await rename(path, tmpFile)\n  return await rm(tmpFile)\n}\n\nexport const rimrafMoveRemoveSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafMoveRemoveDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDirSync(\n      path,\n      { ...opt, tmp: defaultTmpSync(path) },\n      ent\n    )\n  }\n  const tmp: string = opt.tmp\n\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, unlinkFixEPERMSync))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafMoveRemoveDirSync(p, opt, ent) && removedAll\n  }\n  if (!removedAll) {\n    return false\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n  ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, rmdirSync))\n  return true\n}\n\nconst tmpUnlinkSync = (\n  path: string,\n  tmp: string,\n  rmSync: (p: string) => void\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  renameSync(path, tmpFile)\n  return rmSync(tmpFile)\n}\n", "// The default temporary folder location for use in the windows algorithm.\n// It's TEMPting to use dirname(path), since that's guaranteed to be on the\n// same device.  However, this means that:\n// rimraf(path).then(() => rimraf(dirname(path)))\n// will often fail with EBUSY, because the parent dir contains\n// marked-for-deletion directory entries (which do not show up in readdir).\n// The approach here is to use os.tmpdir() if it's on the same drive letter,\n// or resolve(path, '\\\\temp') if it exists, or the root of the drive if not.\n// On Posix (not that you'd be likely to use the windows algorithm there),\n// it uses os.tmpdir() always.\nimport { tmpdir } from 'os'\nimport { parse, resolve } from 'path'\nimport { promises, statSync } from './fs.js'\nimport platform from './platform.js'\nconst { stat } = promises\n\nconst isDirSync = (path: string) => {\n  try {\n    return statSync(path).isDirectory()\n  } catch (er) {\n    return false\n  }\n}\n\nconst isDir = (path: string) =>\n  stat(path).then(\n    st => st.isDirectory(),\n    () => false\n  )\n\nconst win32DefaultTmp = async (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (await isDir(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst win32DefaultTmpSync = (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (isDirSync(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst posixDefaultTmp = async () => tmpdir()\nconst posixDefaultTmpSync = () => tmpdir()\n\nexport const defaultTmp =\n  platform === 'win32' ? win32DefaultTmp : posixDefaultTmp\nexport const defaultTmpSync =\n  platform === 'win32' ? win32DefaultTmpSync : posixDefaultTmpSync\n", "import platform from './platform.js'\n\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\n\nexport const rimrafManual = platform === 'win32' ? rimrafWindows : rimrafPosix\nexport const rimrafManualSync =\n  platform === 'win32' ? rimrafWindowsSync : rimrafPosixSync\n", "import { RimrafAsyncOptions, RimrafSyncOptions } from './index.js'\nimport { promises, rmSync } from './fs.js'\nconst { rm } = promises\n\nexport const rimrafNative = async (\n  path: string,\n  opt: RimrafAsyncOptions\n): Promise<boolean> => {\n  await rm(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n\nexport const rimrafNativeSync = (\n  path: string,\n  opt: RimrafSyncOptions\n): boolean => {\n  rmSync(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n", "import { RimrafAsyncOptions, RimrafOptions } from './index.js'\nimport platform from './platform.js'\n\nconst version = process.env.__TESTING_RIMRAF_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\n\n/* c8 ignore start */\nconst [major = 0, minor = 0] = versArr.map(v => parseInt(v, 10))\n/* c8 ignore stop */\nconst hasNative = major > 14 || (major === 14 && minor >= 14)\n\n// we do NOT use native by default on Windows, because Node's native\n// rm implementation is less advanced.  Change this code if that changes.\nexport const useNative: (opt?: RimrafAsyncOptions) => boolean =\n  !hasNative || platform === 'win32'\n    ? () => false\n    : opt => !opt?.signal && !opt?.filter\nexport const useNativeSync: (opt?: RimrafOptions) => boolean =\n  !hasNative || platform === 'win32'\n    ? () => false\n    : opt => !opt?.signal && !opt?.filter\n", "import { glob, globSync } from 'glob'\nimport {\n  optArg,\n  optArgSync,\n  RimrafAsyncOptions,\n  RimrafSyncOptions,\n} from './opt-arg.js'\nimport pathArg from './path-arg.js'\nimport { rimrafManual, rimrafManualSync } from './rimraf-manual.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nimport { rimrafNative, rimrafNativeSync } from './rimraf-native.js'\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\nimport { useNative, useNativeSync } from './use-native.js'\n\nexport {\n  assertRimrafOptions,\n  isRimrafOptions,\n  RimrafAsyncOptions,\n  RimrafOptions,\n  RimrafSyncOptions,\n} from './opt-arg.js'\n\nconst wrap =\n  (fn: (p: string, o: RimrafAsyncOptions) => Promise<boolean>) =>\n  async (\n    path: string | string[],\n    opt?: RimrafAsyncOptions\n  ): Promise<boolean> => {\n    const options = optArg(opt)\n    if (options.glob) {\n      path = await glob(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!(\n        await Promise.all(path.map(p => fn(pathArg(p, options), options)))\n      ).reduce((a, b) => a && b, true)\n    } else {\n      return !!(await fn(pathArg(path, options), options))\n    }\n  }\n\nconst wrapSync =\n  (fn: (p: string, o: RimrafSyncOptions) => boolean) =>\n  (path: string | string[], opt?: RimrafSyncOptions): boolean => {\n    const options = optArgSync(opt)\n    if (options.glob) {\n      path = globSync(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!path\n        .map(p => fn(pathArg(p, options), options))\n        .reduce((a, b) => a && b, true)\n    } else {\n      return !!fn(pathArg(path, options), options)\n    }\n  }\n\nexport const nativeSync = wrapSync(rimrafNativeSync)\nexport const native = Object.assign(wrap(rimrafNative), { sync: nativeSync })\n\nexport const manualSync = wrapSync(rimrafManualSync)\nexport const manual = Object.assign(wrap(rimrafManual), { sync: manualSync })\n\nexport const windowsSync = wrapSync(rimrafWindowsSync)\nexport const windows = Object.assign(wrap(rimrafWindows), { sync: windowsSync })\n\nexport const posixSync = wrapSync(rimrafPosixSync)\nexport const posix = Object.assign(wrap(rimrafPosix), { sync: posixSync })\n\nexport const moveRemoveSync = wrapSync(rimrafMoveRemoveSync)\nexport const moveRemove = Object.assign(wrap(rimrafMoveRemove), {\n  sync: moveRemoveSync,\n})\n\nexport const rimrafSync = wrapSync((path, opt) =>\n  useNativeSync(opt) ? rimrafNativeSync(path, opt) : rimrafManualSync(path, opt)\n)\nexport const sync = rimrafSync\n\nconst rimraf_ = wrap((path, opt) =>\n  useNative(opt) ? rimrafNative(path, opt) : rimrafManual(path, opt)\n)\nexport const rimraf = Object.assign(rimraf_, {\n  rimraf: rimraf_,\n  sync: rimrafSync,\n  rimrafSync: rimrafSync,\n  manual,\n  manualSync,\n  native,\n  nativeSync,\n  posix,\n  posixSync,\n  windows,\n  windowsSync,\n  moveRemove,\n  moveRemoveSync,\n})\nrimraf.rimraf = rimraf\n", "/**\n * Creates changelog in markdown format from git log as part of the build process\n */\n\nimport * as fs from 'fs';\nimport * as log from '@vladmandic/pilogger';\nimport dayjs from 'dayjs';\nimport SimpleGit from 'simple-git';\n\nconst git = SimpleGit();\n\nconst header = (app, url) => `# ${app.name}  \n\n  Version: **${app.version}**  \n  Description: **${app.description}**  \n  \n  Author: **${app.author}**  \n  License: **${app.license}**  \n  Repository: **<${url}>**  \n  \n## Changelog\n  `;\n\nexport async function run(config, packageJson) {\n  if (!fs.existsSync('.git')) {\n    if (config.log.debug) log.warn('No valid git repository:', '.git');\n    return;\n  }\n  let gitLog;\n  try {\n    gitLog = await git.log();\n  } catch {\n    if (config.log.debug) log.warn('Git repository is empty');\n  }\n  let gitRemote = 'localhost';\n  try {\n    gitRemote = await git.listRemote(['--get-url']) || '';\n  } catch {\n    if (config.log.debug) log.warn('No remote git repository');\n  }\n  const gitUrl = gitRemote.replace('\\n', '');\n  const branch = await git.branchLocal();\n  const entries = gitLog ? [...gitLog.all].sort((a, b) => (new Date(b.date).getTime() - new Date(a.date).getTime())) : [];\n  if (config.log.debug) log.data('Git Log:', entries);\n\n  let previous = '';\n  let text = header(packageJson, gitUrl);\n  const headings: Array<string> = [];\n  for (const l of entries) {\n    const msg = l.message.toLowerCase();\n    if ((l.refs !== '') || msg.match(/^[0-99].[0-99].[0-99]/)) {\n      const dt = dayjs(l.date).format('YYYY/MM/DD');\n      let ver = msg.match(/[0-99].[0-99].[0-99]/) ? msg : l.refs;\n      ver = ver.replace('tag: v', '').replace('tag: ', 'release: ').split(',')[0];\n      const heading = `\\n### **${ver}** ${dt} ${l.author_email}\\n\\n`;\n      if (!headings.includes(heading) && !ver.startsWith('tag')) {\n        headings.push(heading);\n        text += heading;\n      }\n    } else if ((msg.length > 2) && !msg.startsWith('update') && (previous !== msg)) {\n      previous = msg;\n      text += `- ${msg}\\n`;\n    }\n  }\n\n  fs.writeFileSync(config.changelog.output, text);\n  log.state('ChangeLog:', { repository: gitUrl, branch: branch.current, output: config.changelog.output });\n}\n", "import * as fs from 'fs';\nimport * as log from '@vladmandic/pilogger';\nimport { program as commander } from 'commander';\nimport * as helpers from './helpers';\nimport * as main from './build';\n\n/**\n * Runs build in cli mode\n *\n * Usage: build [options] [command]\n *\n * **Options:**\n * - `-c`, `--config` `<file>`      show active configuration or specify alternative config file\n * - `-d`, `--debug`                enable debug output\n * - `-p`, `--profile` `<profile>`  run build for specific profile\n * - `-l`, `--list`                 list configured build profiles\n * - `-g`, `--generate`             generate config files from templates\n * - `-h`, `--help`                 display help for command\n*/\nexport function run() {\n  const build = new main.Build();\n\n  log.header();\n  if (build.environment.tsconfig) (build.config.build.global as Record<string, unknown>)['tsconfig'] = 'tsconfig.json';\n  // let params: Record<string, unknown> = {};\n  commander.option('-c, --config <file>', 'specify config file');\n  commander.option('-d, --debug', 'enable debug output');\n  commander.option('-g, --generate', 'generate config files from templates');\n  commander.option('-l, --list', 'list configured build profiles');\n  commander.option('-p, --profile <profile>', 'run build for specific profile');\n  commander.parse(process.argv);\n  build.params = { ...build.params, ...commander.opts() };\n  if (build.params.debug) {\n    log.info('Debug output:', build.params.debug);\n    build.config.log.debug = true;\n  }\n  if (build.params.generate) {\n    log.info('Generate config files:', build.params.generate);\n    build.config['generate'] = true;\n  }\n  if (build.params.config && build.params.config !== '') {\n    if (fs.existsSync(build.params.config as string)) {\n      build.environment.config = build.params.config;\n      const data = fs.readFileSync(build.params.config as string);\n      try {\n        const parsedConfig = JSON.parse(data.toString());\n        build.config = helpers.merge(build.config, parsedConfig);\n        if (build.params.debug) log.info('Parsed config file:', build.params.config, parsedConfig);\n      } catch {\n        log.error('Error parsing config file:', build.params.config);\n      }\n    } else {\n      log.error('Config file does not exist:', build.params.config);\n    }\n  }\n  if (commander.opts().list) {\n    log.info('Configured build profiles:');\n    log.data(build.config.profiles);\n    process.exit();\n  }\n  const profile = build.params.profile || build.config.default;\n  if (!profile) {\n    log.error('Profile not specified and no Default profile configured');\n  } else if (!build.config.profiles) {\n    log.error('Profiles not configured');\n  } else {\n    build.run(profile as string);\n  }\n}\n", "import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help\n} = commander;\n", "{\n  \"name\": \"@vladmandic/build\",\n  \"version\": \"0.9.2\",\n  \"description\": \"Build: Automated CI Platform for NodeJS\",\n  \"main\": \"dist/build.js\",\n  \"types\": \"types/src/build.d.ts\",\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  },\n  \"scripts\": {\n    \"bootstrap\": \"esbuild --bundle --platform=node --format=cjs --target=es2018 --sourcemap --external:typescript --external:esbuild --external:eslint --external:typedoc --log-level=info --legal-comments='none' --banner:js='#!/usr/bin/env node' --outfile=dist/build.js src/build.ts\",\n    \"build\": \"rimraf build.log && node dist/build.js --profile production\",\n    \"dev\": \"node dist/build.js --profile development\",\n    \"lint\": \"node dist/build.js --profile lint\"\n  },\n  \"bin\": {\n    \"build\": \"./dist/build.js\"\n  },\n  \"author\": \"Vladimir Mandic <mandic00@live.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/vladmandic/build/issues\"\n  },\n  \"homepage\": \"\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/vladmandic/build.git\"\n  },\n  \"keywords\": [],\n  \"devDependencies\": {\n    \"@vladmandic/pilogger\": \"^0.4.8\",\n    \"chokidar\": \"^3.5.3\",\n    \"commander\": \"^11.1.0\",\n    \"dayjs\": \"^1.11.10\",\n    \"rimraf\": \"^5.0.5\",\n    \"simple-git\": \"^3.21.0\",\n    \"ts-node\": \"^10.9.1\"\n  },\n  \"dependencies\": {\n    \"@types/node\": \"^20.10.3\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.13.2\",\n    \"@typescript-eslint/parser\": \"^6.13.2\",\n    \"esbuild\": \"^0.19.8\",\n    \"eslint\": \"^8.55.0\",\n    \"eslint-config-airbnb-base\": \"^15.0.0\",\n    \"eslint-plugin-import\": \"^2.29.0\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"tslib\": \"^2.6.2\",\n    \"typedoc\": \"^0.25.4\",\n    \"typescript\": \"~5.3.0\"\n  }\n}\n"],
  "mappings": "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",
  "names": ["module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__commonJS", "__require", "__export", "__copyProps", "__toESM", "__toCommonJS", "require_dayjs_min", "exports", "module2", "configure", "console", "data", "debug", "error", "header", "info", "logFile", "options", "ring", "state", "warn", "fs", "path", "import_dayjs", "codes", "version", "stream", "options2", "log", "userOptions", "module", "options", "parse", "match", "module", "debug", "self", "match", "module", "warned", "match", "error", "module", "module", "version", "stream", "module", "log", "error", "useColors", "debug", "module", "log", "path", "stat", "exists", "__export", "deferred", "error", "module", "path", "win32", "path", "win32", "match", "options", "state", "append", "module", "options", "start", "glob", "state", "module", "constants", "options", "parse", "win32", "opts", "star", "state", "value", "append", "first", "match", "rest", "posix", "source", "module", "path", "parse", "constants", "glob", "options", "state", "posix", "match", "append", "require_picomatch", "module", "module", "fs", "readdir", "stat", "lstat", "realpath", "error", "filter", "glob", "trimmed", "path", "options", "basename", "resolve", "module", "path", "module", "options", "glob", "path", "testString", "returnIndex", "module", "match", "module", "options", "module", "options", "require_utils", "node", "module", "options", "module", "module", "options", "wrap", "state", "start", "max", "module", "toNumber", "start", "options", "wrap", "module", "options", "module", "append", "expand", "options", "require_constants", "module", "require_parse", "module", "parse", "options", "index", "module", "expand", "parse", "options", "module", "require_binary_extensions", "module", "module", "path", "require_constants", "sep", "module", "fs", "stat", "lstat", "path", "options", "error", "rawEmitter", "listener", "basename", "dirname", "newStats", "stream", "resolve", "realpath", "stats", "module", "fs", "error", "stat", "lstat", "realpath", "path", "info", "isDir", "EventEmitter", "fs", "GLOBSTAR", "stat", "readdir", "path", "results", "stream", "error", "now", "options", "watch", "module", "module", "expand", "module", "t", "e", "n", "r", "i", "s", "u", "a", "M", "m", "f", "l", "$", "y", "v", "g", "D", "o", "d", "c", "h", "CommanderError", "InvalidArgumentError", "InvalidArgumentError", "Argument", "Help", "cmd", "InvalidArgumentError", "Option", "options", "str", "EventEmitter", "path", "fs", "process", "Argument", "CommanderError", "Help", "Option", "Command", "ext", "proc", "option", "getErrorMessage", "match", "module", "Argument", "Command", "CommanderError", "InvalidArgumentError", "Help", "Option", "log", "fs", "log", "info", "log", "import_promise_deferred", "path", "git", "filter", "match", "_index", "options", "parse", "error", "results", "debug", "info", "data", "log", "merge", "major", "minor", "__commonJS", "module", "_a2", "_b", "_a3", "_b2", "_a", "log", "fs", "path", "version", "run", "_a", "_b", "program", "info", "version", "_a", "_b", "run", "options", "log", "build", "options", "run", "resolve", "log", "fs", "path", "fs", "resolve", "_a", "_b", "_c", "ext", "stream", "start", "log", "fs", "version", "run", "options", "results", "defaults", "log", "glob", "options", "_a", "_b", "_c", "glob", "hasMagic", "start", "final", "i", "acc", "ext", "_hasMagic", "options", "ext", "path", "qmark", "star", "defaults", "expand", "regExpEscape", "_a", "_b", "options", "_i", "_s", "_k", "start", "_c", "_d", "_e", "v", "bf", "_a", "options", "_b", "p", "data", "ret", "resolve", "res", "_size", "path", "_a", "p", "resolve", "_children", "_fs", "sep", "fs", "filter", "results", "start", "options", "process", "promises", "sync", "fileURLToPath", "defaultPlatform", "_a", "path", "rest", "results", "path", "_a", "abs", "target", "_b", "defaultPlatform", "fileURLToPath", "options", "options", "glob", "options", "path", "root", "fs", "lstatSync", "readdirSync", "path", "options", "readdir", "data", "lstat", "parse", "resolve", "readdir", "path", "readdirSync", "lstat", "rmdir", "unlink", "path", "_a", "lstatSync", "ent", "resolve", "parse", "parse", "resolve", "chmod", "path", "path", "parse", "resolve", "parse", "resolve", "stat", "path", "parse", "resolve", "lstat", "rename", "unlink", "rmdir", "chmod", "path", "_a", "parse", "ent", "resolve", "rm", "lstatSync", "rmSync", "unlink", "rmdir", "lstat", "path", "_a", "filter", "options", "lstatSync", "state", "ent", "resolve", "parse", "rm", "path", "version", "path", "options", "posix", "sync", "run", "sync", "log", "fs", "git", "run", "dayjs", "log", "fs", "commander", "run", "build", "data", "version", "defaults", "options", "_a", "_b", "data", "git", "version", "info", "run", "start"]
}
